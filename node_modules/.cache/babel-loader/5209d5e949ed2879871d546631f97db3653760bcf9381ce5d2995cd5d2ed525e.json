{"ast":null,"code":"// src/store/uiSlice.js\nimport { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  // Theme settings\n  theme: 'dark',\n  // 'light' | 'dark' | 'auto'\n\n  // Layout settings\n  sidebarOpen: true,\n  sidebarCollapsed: false,\n  // User preferences\n  preferences: {\n    notifications: true,\n    sounds: true,\n    animations: true,\n    autoSave: true,\n    units: 'metric',\n    // 'metric' | 'imperial'\n    language: 'en',\n    debugMode: false\n  },\n  // Notifications\n  notifications: [],\n  // Modal and dialog states\n  modals: {\n    settingsOpen: false,\n    helpOpen: false,\n    aboutOpen: false,\n    confirmDialogOpen: false,\n    confirmDialogData: null\n  },\n  // Loading states for UI components\n  loadingStates: {\n    dashboard: false,\n    challenges: false,\n    robot: false,\n    profile: false\n  },\n  // Error states\n  errors: {\n    dashboard: null,\n    challenges: null,\n    robot: null,\n    profile: null\n  },\n  // View states\n  views: {\n    currentPage: 'dashboard',\n    previousPage: null,\n    breadcrumbs: [],\n    activeTab: 0\n  },\n  // Device and responsive settings\n  device: {\n    isMobile: false,\n    isTablet: false,\n    isDesktop: true,\n    screenWidth: window.innerWidth,\n    screenHeight: window.innerHeight\n  }\n};\nconst uiSlice = createSlice({\n  name: 'ui',\n  initialState,\n  reducers: {\n    // Theme management\n    setTheme: (state, action) => {\n      state.theme = action.payload;\n    },\n    toggleTheme: state => {\n      state.theme = state.theme === 'light' ? 'dark' : 'light';\n    },\n    // Sidebar management\n    setSidebarOpen: (state, action) => {\n      state.sidebarOpen = action.payload;\n    },\n    toggleSidebar: state => {\n      state.sidebarOpen = !state.sidebarOpen;\n    },\n    setSidebarCollapsed: (state, action) => {\n      state.sidebarCollapsed = action.payload;\n    },\n    toggleSidebarCollapsed: state => {\n      state.sidebarCollapsed = !state.sidebarCollapsed;\n    },\n    // Preferences\n    setPreference: (state, action) => {\n      const {\n        key,\n        value\n      } = action.payload;\n      state.preferences[key] = value;\n    },\n    setPreferences: (state, action) => {\n      state.preferences = {\n        ...state.preferences,\n        ...action.payload\n      };\n    },\n    resetPreferences: state => {\n      state.preferences = initialState.preferences;\n    },\n    // Notifications\n    addNotification: (state, action) => {\n      const notification = {\n        id: Date.now() + Math.random(),\n        timestamp: Date.now(),\n        autoHide: true,\n        duration: 5000,\n        ...action.payload\n      };\n      state.notifications.push(notification);\n    },\n    removeNotification: (state, action) => {\n      state.notifications = state.notifications.filter(notification => notification.id !== action.payload);\n    },\n    clearNotifications: state => {\n      state.notifications = [];\n    },\n    markNotificationAsRead: (state, action) => {\n      const notification = state.notifications.find(n => n.id === action.payload);\n      if (notification) {\n        notification.read = true;\n      }\n    },\n    // Modal management\n    openModal: (state, action) => {\n      const {\n        modalName,\n        data\n      } = action.payload;\n      state.modals[modalName] = true;\n      if (data && modalName === 'confirmDialogOpen') {\n        state.modals.confirmDialogData = data;\n      }\n    },\n    closeModal: (state, action) => {\n      const modalName = action.payload;\n      state.modals[modalName] = false;\n      if (modalName === 'confirmDialogOpen') {\n        state.modals.confirmDialogData = null;\n      }\n    },\n    closeAllModals: state => {\n      Object.keys(state.modals).forEach(modalName => {\n        if (modalName !== 'confirmDialogData') {\n          state.modals[modalName] = false;\n        }\n      });\n      state.modals.confirmDialogData = null;\n    },\n    // Loading states\n    setLoading: (state, action) => {\n      const {\n        component,\n        loading\n      } = action.payload;\n      state.loadingStates[component] = loading;\n    },\n    setLoadingStates: (state, action) => {\n      state.loadingStates = {\n        ...state.loadingStates,\n        ...action.payload\n      };\n    },\n    // Error states\n    setError: (state, action) => {\n      const {\n        component,\n        error\n      } = action.payload;\n      state.errors[component] = error;\n    },\n    clearError: (state, action) => {\n      const component = action.payload;\n      state.errors[component] = null;\n    },\n    clearAllErrors: state => {\n      Object.keys(state.errors).forEach(component => {\n        state.errors[component] = null;\n      });\n    },\n    // View management\n    setCurrentPage: (state, action) => {\n      state.views.previousPage = state.views.currentPage;\n      state.views.currentPage = action.payload;\n    },\n    setBreadcrumbs: (state, action) => {\n      state.views.breadcrumbs = action.payload;\n    },\n    addBreadcrumb: (state, action) => {\n      state.views.breadcrumbs.push(action.payload);\n    },\n    setActiveTab: (state, action) => {\n      state.views.activeTab = action.payload;\n    },\n    // Device management\n    setDevice: (state, action) => {\n      state.device = {\n        ...state.device,\n        ...action.payload\n      };\n    },\n    updateScreenSize: (state, action) => {\n      const {\n        width,\n        height\n      } = action.payload;\n      state.device.screenWidth = width;\n      state.device.screenHeight = height;\n      state.device.isMobile = width < 768;\n      state.device.isTablet = width >= 768 && width < 1024;\n      state.device.isDesktop = width >= 1024;\n    },\n    // Utility actions\n    resetUI: state => {\n      return {\n        ...initialState,\n        device: state.device // Preserve device info\n      };\n    }\n  }\n});\nexport const {\n  // Theme\n  setTheme,\n  toggleTheme,\n  // Sidebar\n  setSidebarOpen,\n  toggleSidebar,\n  setSidebarCollapsed,\n  toggleSidebarCollapsed,\n  // Preferences\n  setPreference,\n  setPreferences,\n  resetPreferences,\n  // Notifications\n  addNotification,\n  removeNotification,\n  clearNotifications,\n  markNotificationAsRead,\n  // Modals\n  openModal,\n  closeModal,\n  closeAllModals,\n  // Loading\n  setLoading,\n  setLoadingStates,\n  // Errors\n  setError,\n  clearError,\n  clearAllErrors,\n  // Views\n  setCurrentPage,\n  setBreadcrumbs,\n  addBreadcrumb,\n  setActiveTab,\n  // Device\n  setDevice,\n  updateScreenSize,\n  // Utility\n  resetUI\n} = uiSlice.actions;\n\n// Selectors\nexport const selectTheme = state => state.ui.theme;\nexport const selectSidebarOpen = state => state.ui.sidebarOpen;\nexport const selectSidebarCollapsed = state => state.ui.sidebarCollapsed;\nexport const selectPreferences = state => state.ui.preferences;\nexport const selectNotifications = state => state.ui.notifications;\nexport const selectUnreadNotifications = state => state.ui.notifications.filter(n => !n.read);\nexport const selectModals = state => state.ui.modals;\nexport const selectLoadingStates = state => state.ui.loadingStates;\nexport const selectErrors = state => state.ui.errors;\nexport const selectViews = state => state.ui.views;\nexport const selectDevice = state => state.ui.device;\nexport const selectIsMobile = state => state.ui.device.isMobile;\nexport const selectIsTablet = state => state.ui.device.isTablet;\nexport const selectIsDesktop = state => state.ui.device.isDesktop;\nexport default uiSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","theme","sidebarOpen","sidebarCollapsed","preferences","notifications","sounds","animations","autoSave","units","language","debugMode","modals","settingsOpen","helpOpen","aboutOpen","confirmDialogOpen","confirmDialogData","loadingStates","dashboard","challenges","robot","profile","errors","views","currentPage","previousPage","breadcrumbs","activeTab","device","isMobile","isTablet","isDesktop","screenWidth","window","innerWidth","screenHeight","innerHeight","uiSlice","name","reducers","setTheme","state","action","payload","toggleTheme","setSidebarOpen","toggleSidebar","setSidebarCollapsed","toggleSidebarCollapsed","setPreference","key","value","setPreferences","resetPreferences","addNotification","notification","id","Date","now","Math","random","timestamp","autoHide","duration","push","removeNotification","filter","clearNotifications","markNotificationAsRead","find","n","read","openModal","modalName","data","closeModal","closeAllModals","Object","keys","forEach","setLoading","component","loading","setLoadingStates","setError","error","clearError","clearAllErrors","setCurrentPage","setBreadcrumbs","addBreadcrumb","setActiveTab","setDevice","updateScreenSize","width","height","resetUI","actions","selectTheme","ui","selectSidebarOpen","selectSidebarCollapsed","selectPreferences","selectNotifications","selectUnreadNotifications","selectModals","selectLoadingStates","selectErrors","selectViews","selectDevice","selectIsMobile","selectIsTablet","selectIsDesktop","reducer"],"sources":["C:/Users/misch/Downloads/absix-workstation-web-main/absix-workstation-web-main/frontend/src/store/uiSlice.js"],"sourcesContent":["// src/store/uiSlice.js\r\nimport { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  // Theme settings\r\n  theme: 'dark', // 'light' | 'dark' | 'auto'\r\n  \r\n  // Layout settings\r\n  sidebarOpen: true,\r\n  sidebarCollapsed: false,\r\n  \r\n  // User preferences\r\n  preferences: {\r\n    notifications: true,\r\n    sounds: true,\r\n    animations: true,\r\n    autoSave: true,\r\n    units: 'metric', // 'metric' | 'imperial'\r\n    language: 'en',\r\n    debugMode: false\r\n  },\r\n  \r\n  // Notifications\r\n  notifications: [],\r\n  \r\n  // Modal and dialog states\r\n  modals: {\r\n    settingsOpen: false,\r\n    helpOpen: false,\r\n    aboutOpen: false,\r\n    confirmDialogOpen: false,\r\n    confirmDialogData: null\r\n  },\r\n  \r\n  // Loading states for UI components\r\n  loadingStates: {\r\n    dashboard: false,\r\n    challenges: false,\r\n    robot: false,\r\n    profile: false\r\n  },\r\n  \r\n  // Error states\r\n  errors: {\r\n    dashboard: null,\r\n    challenges: null,\r\n    robot: null,\r\n    profile: null\r\n  },\r\n  \r\n  // View states\r\n  views: {\r\n    currentPage: 'dashboard',\r\n    previousPage: null,\r\n    breadcrumbs: [],\r\n    activeTab: 0\r\n  },\r\n  \r\n  // Device and responsive settings\r\n  device: {\r\n    isMobile: false,\r\n    isTablet: false,\r\n    isDesktop: true,\r\n    screenWidth: window.innerWidth,\r\n    screenHeight: window.innerHeight\r\n  }\r\n};\r\n\r\nconst uiSlice = createSlice({\r\n  name: 'ui',\r\n  initialState,\r\n  reducers: {\r\n    // Theme management\r\n    setTheme: (state, action) => {\r\n      state.theme = action.payload;\r\n    },\r\n    toggleTheme: (state) => {\r\n      state.theme = state.theme === 'light' ? 'dark' : 'light';\r\n    },\r\n    \r\n    // Sidebar management\r\n    setSidebarOpen: (state, action) => {\r\n      state.sidebarOpen = action.payload;\r\n    },\r\n    toggleSidebar: (state) => {\r\n      state.sidebarOpen = !state.sidebarOpen;\r\n    },\r\n    setSidebarCollapsed: (state, action) => {\r\n      state.sidebarCollapsed = action.payload;\r\n    },\r\n    toggleSidebarCollapsed: (state) => {\r\n      state.sidebarCollapsed = !state.sidebarCollapsed;\r\n    },\r\n    \r\n    // Preferences\r\n    setPreference: (state, action) => {\r\n      const { key, value } = action.payload;\r\n      state.preferences[key] = value;\r\n    },\r\n    setPreferences: (state, action) => {\r\n      state.preferences = { ...state.preferences, ...action.payload };\r\n    },\r\n    resetPreferences: (state) => {\r\n      state.preferences = initialState.preferences;\r\n    },\r\n    \r\n    // Notifications\r\n    addNotification: (state, action) => {\r\n      const notification = {\r\n        id: Date.now() + Math.random(),\r\n        timestamp: Date.now(),\r\n        autoHide: true,\r\n        duration: 5000,\r\n        ...action.payload\r\n      };\r\n      state.notifications.push(notification);\r\n    },\r\n    removeNotification: (state, action) => {\r\n      state.notifications = state.notifications.filter(\r\n        notification => notification.id !== action.payload\r\n      );\r\n    },\r\n    clearNotifications: (state) => {\r\n      state.notifications = [];\r\n    },\r\n    markNotificationAsRead: (state, action) => {\r\n      const notification = state.notifications.find(n => n.id === action.payload);\r\n      if (notification) {\r\n        notification.read = true;\r\n      }\r\n    },\r\n    \r\n    // Modal management\r\n    openModal: (state, action) => {\r\n      const { modalName, data } = action.payload;\r\n      state.modals[modalName] = true;\r\n      if (data && modalName === 'confirmDialogOpen') {\r\n        state.modals.confirmDialogData = data;\r\n      }\r\n    },\r\n    closeModal: (state, action) => {\r\n      const modalName = action.payload;\r\n      state.modals[modalName] = false;\r\n      if (modalName === 'confirmDialogOpen') {\r\n        state.modals.confirmDialogData = null;\r\n      }\r\n    },\r\n    closeAllModals: (state) => {\r\n      Object.keys(state.modals).forEach(modalName => {\r\n        if (modalName !== 'confirmDialogData') {\r\n          state.modals[modalName] = false;\r\n        }\r\n      });\r\n      state.modals.confirmDialogData = null;\r\n    },\r\n    \r\n    // Loading states\r\n    setLoading: (state, action) => {\r\n      const { component, loading } = action.payload;\r\n      state.loadingStates[component] = loading;\r\n    },\r\n    setLoadingStates: (state, action) => {\r\n      state.loadingStates = { ...state.loadingStates, ...action.payload };\r\n    },\r\n    \r\n    // Error states\r\n    setError: (state, action) => {\r\n      const { component, error } = action.payload;\r\n      state.errors[component] = error;\r\n    },\r\n    clearError: (state, action) => {\r\n      const component = action.payload;\r\n      state.errors[component] = null;\r\n    },\r\n    clearAllErrors: (state) => {\r\n      Object.keys(state.errors).forEach(component => {\r\n        state.errors[component] = null;\r\n      });\r\n    },\r\n    \r\n    // View management\r\n    setCurrentPage: (state, action) => {\r\n      state.views.previousPage = state.views.currentPage;\r\n      state.views.currentPage = action.payload;\r\n    },\r\n    setBreadcrumbs: (state, action) => {\r\n      state.views.breadcrumbs = action.payload;\r\n    },\r\n    addBreadcrumb: (state, action) => {\r\n      state.views.breadcrumbs.push(action.payload);\r\n    },\r\n    setActiveTab: (state, action) => {\r\n      state.views.activeTab = action.payload;\r\n    },\r\n    \r\n    // Device management\r\n    setDevice: (state, action) => {\r\n      state.device = { ...state.device, ...action.payload };\r\n    },\r\n    updateScreenSize: (state, action) => {\r\n      const { width, height } = action.payload;\r\n      state.device.screenWidth = width;\r\n      state.device.screenHeight = height;\r\n      state.device.isMobile = width < 768;\r\n      state.device.isTablet = width >= 768 && width < 1024;\r\n      state.device.isDesktop = width >= 1024;\r\n    },\r\n    \r\n    // Utility actions\r\n    resetUI: (state) => {\r\n      return {\r\n        ...initialState,\r\n        device: state.device // Preserve device info\r\n      };\r\n    }\r\n  }\r\n});\r\n\r\nexport const {\r\n  // Theme\r\n  setTheme,\r\n  toggleTheme,\r\n  \r\n  // Sidebar\r\n  setSidebarOpen,\r\n  toggleSidebar,\r\n  setSidebarCollapsed,\r\n  toggleSidebarCollapsed,\r\n  \r\n  // Preferences\r\n  setPreference,\r\n  setPreferences,\r\n  resetPreferences,\r\n  \r\n  // Notifications\r\n  addNotification,\r\n  removeNotification,\r\n  clearNotifications,\r\n  markNotificationAsRead,\r\n  \r\n  // Modals\r\n  openModal,\r\n  closeModal,\r\n  closeAllModals,\r\n  \r\n  // Loading\r\n  setLoading,\r\n  setLoadingStates,\r\n  \r\n  // Errors\r\n  setError,\r\n  clearError,\r\n  clearAllErrors,\r\n  \r\n  // Views\r\n  setCurrentPage,\r\n  setBreadcrumbs,\r\n  addBreadcrumb,\r\n  setActiveTab,\r\n  \r\n  // Device\r\n  setDevice,\r\n  updateScreenSize,\r\n  \r\n  // Utility\r\n  resetUI\r\n} = uiSlice.actions;\r\n\r\n// Selectors\r\nexport const selectTheme = (state) => state.ui.theme;\r\nexport const selectSidebarOpen = (state) => state.ui.sidebarOpen;\r\nexport const selectSidebarCollapsed = (state) => state.ui.sidebarCollapsed;\r\nexport const selectPreferences = (state) => state.ui.preferences;\r\nexport const selectNotifications = (state) => state.ui.notifications;\r\nexport const selectUnreadNotifications = (state) => \r\n  state.ui.notifications.filter(n => !n.read);\r\nexport const selectModals = (state) => state.ui.modals;\r\nexport const selectLoadingStates = (state) => state.ui.loadingStates;\r\nexport const selectErrors = (state) => state.ui.errors;\r\nexport const selectViews = (state) => state.ui.views;\r\nexport const selectDevice = (state) => state.ui.device;\r\nexport const selectIsMobile = (state) => state.ui.device.isMobile;\r\nexport const selectIsTablet = (state) => state.ui.device.isTablet;\r\nexport const selectIsDesktop = (state) => state.ui.device.isDesktop;\r\n\r\nexport default uiSlice.reducer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}