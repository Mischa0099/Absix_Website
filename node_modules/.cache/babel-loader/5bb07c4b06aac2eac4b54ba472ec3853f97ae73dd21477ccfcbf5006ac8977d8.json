{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\misch\\\\Downloads\\\\absix-workstation-web-main\\\\absix-workstation-web-main\\\\frontend\\\\src\\\\components\\\\challenges\\\\GenericChallenge.jsx\",\n  _s = $RefreshSig$();\n// ===== GenericChallenge.jsx =====\nimport React, { useState, useEffect } from 'react';\nimport { Box, Typography, Card, CardContent, TextField, Button, Alert, List, ListItem, ListItemIcon, ListItemText, Checkbox, Stepper, Step, StepLabel, StepContent } from '@mui/material';\nimport { Assignment, CheckBox, RadioButtonUnchecked } from '@mui/icons-material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GenericChallenge = ({\n  challenge,\n  onDataChange,\n  onError,\n  started\n}) => {\n  _s();\n  const [userNotes, setUserNotes] = useState('');\n  const [checklist, setChecklist] = useState({});\n  const [currentStep, setCurrentStep] = useState(0);\n  const [completed, setCompleted] = useState(false);\n\n  // Generic challenge steps\n  const steps = challenge.steps || [{\n    label: 'Read Instructions',\n    description: 'Carefully read through all challenge requirements and objectives.',\n    required: true\n  }, {\n    label: 'Setup Robot',\n    description: 'Ensure the robot is properly connected and calibrated.',\n    required: true\n  }, {\n    label: 'Execute Task',\n    description: 'Follow the challenge instructions to complete the required tasks.',\n    required: true\n  }, {\n    label: 'Document Results',\n    description: 'Record your observations and results in the notes section.',\n    required: false\n  }];\n  useEffect(() => {\n    // Initialize checklist\n    const initialChecklist = {};\n    steps.forEach((step, index) => {\n      initialChecklist[index] = false;\n    });\n    setChecklist(initialChecklist);\n  }, []);\n  useEffect(() => {\n    // Check if all required steps are completed\n    const requiredSteps = steps.filter(step => step.required);\n    const completedRequired = requiredSteps.every((step, index) => {\n      const stepIndex = steps.findIndex(s => s === step);\n      return checklist[stepIndex];\n    });\n    setCompleted(completedRequired);\n\n    // Update parent component\n    onDataChange && onDataChange({\n      userNotes,\n      checklist,\n      currentStep,\n      completed: completedRequired,\n      stepsCompleted: Object.values(checklist).filter(Boolean).length,\n      totalSteps: steps.length\n    });\n  }, [userNotes, checklist, currentStep]);\n  const handleChecklistChange = (stepIndex, checked) => {\n    setChecklist(prev => ({\n      ...prev,\n      [stepIndex]: checked\n    }));\n\n    // Auto-advance to next step if this step is completed\n    if (checked && stepIndex === currentStep && stepIndex < steps.length - 1) {\n      setCurrentStep(stepIndex + 1);\n    }\n  };\n  const handleStepClick = stepIndex => {\n    setCurrentStep(stepIndex);\n  };\n  const getStepIcon = stepIndex => {\n    if (checklist[stepIndex]) {\n      return /*#__PURE__*/_jsxDEV(CheckBox, {\n        color: \"success\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 14\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(RadioButtonUnchecked, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 12\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: challenge.title || 'Challenge Instructions'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      paragraph: true,\n      children: challenge.description || 'Follow the challenge instructions and use the robot controls below.'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), challenge.objectives && /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        mb: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"Objectives\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          dense: true,\n          children: challenge.objectives.map((objective, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n            children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n              children: /*#__PURE__*/_jsxDEV(Assignment, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: objective\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        mb: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"Progress Checklist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Stepper, {\n          activeStep: currentStep,\n          orientation: \"vertical\",\n          children: steps.map((step, index) => /*#__PURE__*/_jsxDEV(Step, {\n            children: [/*#__PURE__*/_jsxDEV(StepLabel, {\n              onClick: () => handleStepClick(index),\n              sx: {\n                cursor: 'pointer'\n              },\n              StepIconComponent: () => getStepIcon(index),\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  gap: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle1\",\n                  children: step.label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 21\n                }, this), step.required && /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"caption\",\n                  color: \"error\",\n                  children: \"(Required)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StepContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                paragraph: true,\n                children: step.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  gap: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                  checked: checklist[index] || false,\n                  onChange: e => handleChecklistChange(index, e.target.checked)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: \"Mark as completed\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        mb: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"Notes and Observations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          multiline: true,\n          rows: 6,\n          value: userNotes,\n          onChange: e => setUserNotes(e.target.value),\n          placeholder: \"Record your observations, challenges faced, solutions implemented, and results obtained...\",\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      severity: completed ? \"success\" : \"info\",\n      sx: {\n        mb: 2\n      },\n      children: completed ? \"All required steps completed! You can now submit your challenge.\" : `Complete ${steps.filter(s => s.required).length - Object.values(checklist).filter(Boolean).length} more required steps to finish this challenge.`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), challenge.additional_instructions && /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"Additional Instructions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          children: challenge.additional_instructions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s(GenericChallenge, \"doRI4udg7ncPSWvnWz7J2Bj8DlI=\");\n_c = GenericChallenge;\nexport default GenericChallenge;\nvar _c;\n$RefreshReg$(_c, \"GenericChallenge\");","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","Card","CardContent","TextField","Button","Alert","List","ListItem","ListItemIcon","ListItemText","Checkbox","Stepper","Step","StepLabel","StepContent","Assignment","CheckBox","RadioButtonUnchecked","jsxDEV","_jsxDEV","GenericChallenge","challenge","onDataChange","onError","started","_s","userNotes","setUserNotes","checklist","setChecklist","currentStep","setCurrentStep","completed","setCompleted","steps","label","description","required","initialChecklist","forEach","step","index","requiredSteps","filter","completedRequired","every","stepIndex","findIndex","s","stepsCompleted","Object","values","Boolean","length","totalSteps","handleChecklistChange","checked","prev","handleStepClick","getStepIcon","color","fileName","_jsxFileName","lineNumber","columnNumber","children","variant","gutterBottom","title","paragraph","objectives","sx","mb","dense","map","objective","primary","activeStep","orientation","onClick","cursor","StepIconComponent","display","alignItems","gap","onChange","e","target","fullWidth","multiline","rows","value","placeholder","severity","additional_instructions","_c","$RefreshReg$"],"sources":["C:/Users/misch/Downloads/absix-workstation-web-main/absix-workstation-web-main/frontend/src/components/challenges/GenericChallenge.jsx"],"sourcesContent":["// ===== GenericChallenge.jsx =====\r\nimport React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Card,\r\n  CardContent,\r\n  TextField,\r\n  Button,\r\n  Alert,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Checkbox,\r\n  Stepper,\r\n  Step,\r\n  StepLabel,\r\n  StepContent\r\n} from '@mui/material';\r\nimport { Assignment, CheckBox, RadioButtonUnchecked } from '@mui/icons-material';\r\n\r\nconst GenericChallenge = ({ challenge, onDataChange, onError, started }) => {\r\n  const [userNotes, setUserNotes] = useState('');\r\n  const [checklist, setChecklist] = useState({});\r\n  const [currentStep, setCurrentStep] = useState(0);\r\n  const [completed, setCompleted] = useState(false);\r\n\r\n  // Generic challenge steps\r\n  const steps = challenge.steps || [\r\n    {\r\n      label: 'Read Instructions',\r\n      description: 'Carefully read through all challenge requirements and objectives.',\r\n      required: true\r\n    },\r\n    {\r\n      label: 'Setup Robot',\r\n      description: 'Ensure the robot is properly connected and calibrated.',\r\n      required: true\r\n    },\r\n    {\r\n      label: 'Execute Task',\r\n      description: 'Follow the challenge instructions to complete the required tasks.',\r\n      required: true\r\n    },\r\n    {\r\n      label: 'Document Results',\r\n      description: 'Record your observations and results in the notes section.',\r\n      required: false\r\n    }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    // Initialize checklist\r\n    const initialChecklist = {};\r\n    steps.forEach((step, index) => {\r\n      initialChecklist[index] = false;\r\n    });\r\n    setChecklist(initialChecklist);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Check if all required steps are completed\r\n    const requiredSteps = steps.filter(step => step.required);\r\n    const completedRequired = requiredSteps.every((step, index) => {\r\n      const stepIndex = steps.findIndex(s => s === step);\r\n      return checklist[stepIndex];\r\n    });\r\n    \r\n    setCompleted(completedRequired);\r\n    \r\n    // Update parent component\r\n    onDataChange && onDataChange({\r\n      userNotes,\r\n      checklist,\r\n      currentStep,\r\n      completed: completedRequired,\r\n      stepsCompleted: Object.values(checklist).filter(Boolean).length,\r\n      totalSteps: steps.length\r\n    });\r\n  }, [userNotes, checklist, currentStep]);\r\n\r\n  const handleChecklistChange = (stepIndex, checked) => {\r\n    setChecklist(prev => ({\r\n      ...prev,\r\n      [stepIndex]: checked\r\n    }));\r\n\r\n    // Auto-advance to next step if this step is completed\r\n    if (checked && stepIndex === currentStep && stepIndex < steps.length - 1) {\r\n      setCurrentStep(stepIndex + 1);\r\n    }\r\n  };\r\n\r\n  const handleStepClick = (stepIndex) => {\r\n    setCurrentStep(stepIndex);\r\n  };\r\n\r\n  const getStepIcon = (stepIndex) => {\r\n    if (checklist[stepIndex]) {\r\n      return <CheckBox color=\"success\" />;\r\n    }\r\n    return <RadioButtonUnchecked />;\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        {challenge.title || 'Challenge Instructions'}\r\n      </Typography>\r\n      \r\n      <Typography variant=\"body1\" paragraph>\r\n        {challenge.description || 'Follow the challenge instructions and use the robot controls below.'}\r\n      </Typography>\r\n\r\n      {/* Challenge Objectives */}\r\n      {challenge.objectives && (\r\n        <Card sx={{ mb: 3 }}>\r\n          <CardContent>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Objectives\r\n            </Typography>\r\n            <List dense>\r\n              {challenge.objectives.map((objective, index) => (\r\n                <ListItem key={index}>\r\n                  <ListItemIcon>\r\n                    <Assignment />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary={objective} />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </CardContent>\r\n        </Card>\r\n      )}\r\n\r\n      {/* Progress Checklist */}\r\n      <Card sx={{ mb: 3 }}>\r\n        <CardContent>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Progress Checklist\r\n          </Typography>\r\n          \r\n          <Stepper activeStep={currentStep} orientation=\"vertical\">\r\n            {steps.map((step, index) => (\r\n              <Step key={index}>\r\n                <StepLabel \r\n                  onClick={() => handleStepClick(index)}\r\n                  sx={{ cursor: 'pointer' }}\r\n                  StepIconComponent={() => getStepIcon(index)}\r\n                >\r\n                  <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n                    <Typography variant=\"subtitle1\">\r\n                      {step.label}\r\n                    </Typography>\r\n                    {step.required && (\r\n                      <Typography variant=\"caption\" color=\"error\">\r\n                        (Required)\r\n                      </Typography>\r\n                    )}\r\n                  </Box>\r\n                </StepLabel>\r\n                <StepContent>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\" paragraph>\r\n                    {step.description}\r\n                  </Typography>\r\n                  \r\n                  <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\r\n                    <Checkbox\r\n                      checked={checklist[index] || false}\r\n                      onChange={(e) => handleChecklistChange(index, e.target.checked)}\r\n                    />\r\n                    <Typography variant=\"body2\">\r\n                      Mark as completed\r\n                    </Typography>\r\n                  </Box>\r\n                </StepContent>\r\n              </Step>\r\n            ))}\r\n          </Stepper>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Notes Section */}\r\n      <Card sx={{ mb: 3 }}>\r\n        <CardContent>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Notes and Observations\r\n          </Typography>\r\n          <TextField\r\n            fullWidth\r\n            multiline\r\n            rows={6}\r\n            value={userNotes}\r\n            onChange={(e) => setUserNotes(e.target.value)}\r\n            placeholder=\"Record your observations, challenges faced, solutions implemented, and results obtained...\"\r\n            variant=\"outlined\"\r\n          />\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Challenge Status */}\r\n      <Alert \r\n        severity={completed ? \"success\" : \"info\"}\r\n        sx={{ mb: 2 }}\r\n      >\r\n        {completed \r\n          ? \"All required steps completed! You can now submit your challenge.\"\r\n          : `Complete ${steps.filter(s => s.required).length - Object.values(checklist).filter(Boolean).length} more required steps to finish this challenge.`\r\n        }\r\n      </Alert>\r\n\r\n      {/* Additional Instructions */}\r\n      {challenge.additional_instructions && (\r\n        <Card>\r\n          <CardContent>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Additional Instructions\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"text.secondary\">\r\n              {challenge.additional_instructions}\r\n            </Typography>\r\n          </CardContent>\r\n        </Card>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default GenericChallenge;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}