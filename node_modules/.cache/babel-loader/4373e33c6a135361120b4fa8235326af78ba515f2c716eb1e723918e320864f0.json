{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\misch\\\\Downloads\\\\absix-workstation-web-main\\\\absix-workstation-web-main\\\\frontend\\\\src\\\\components\\\\common\\\\Header.jsx\",\n  _s = $RefreshSig$();\n// // src/components/common/Header.jsx\n// import React, { useState, useEffect } from 'react';\n// import { motion, AnimatePresence } from 'framer-motion';\n// import { useNavigate, useLocation } from 'react-router-dom';\n// import { useSelector, useDispatch } from 'react-redux';\n// import {\n//   AppBar,\n//   Toolbar,\n//   Typography,\n//   Button,\n//   Box,\n//   IconButton,\n//   Menu,\n//   MenuItem,\n//   Avatar,\n//   Chip,\n//   Badge,\n//   Tooltip,\n//   useMediaQuery,\n//   useTheme,\n//   Drawer,\n//   List,\n//   ListItem,\n//   ListItemIcon,\n//   ListItemText,\n//   Divider\n// } from '@mui/material';\n// import {\n//   Menu as MenuIcon,\n//   AccountCircle,\n//   Logout,\n//   Dashboard,\n//   EmojiEvents,\n//   Person,\n//   Settings,\n//   Notifications,\n//   Home,\n//   School,\n//   SmartToy,\n//   Close\n// } from '@mui/icons-material';\n// import { logoutUser } from '../../store/authSlice';\n// import { getRank } from '../../utils/helpers';\n\n// // Animated Logo Component\n// const AnimatedLogo = () => {\n//   return (\n//     <motion.div\n//       style={{\n//         display: 'flex',\n//         alignItems: 'center',\n//         gap: '12px',\n//         cursor: 'pointer'\n//       }}\n//       whileHover={{ scale: 1.05 }}\n//       transition={{ duration: 0.2 }}\n//     >\n//       <motion.div\n//         animate={{ \n//           rotate: [0, 360],\n//           scale: [1, 1.1, 1]\n//         }}\n//         transition={{ \n//           rotate: { duration: 20, repeat: Infinity, ease: \"linear\" },\n//           scale: { duration: 2, repeat: Infinity, repeatDelay: 3 }\n//         }}\n//       >\n//         <SmartToy \n//           sx={{ \n//             fontSize: 40, \n//             color: '#0cc0df',\n//             filter: 'drop-shadow(0 0 10px rgba(12, 192, 223, 0.5))'\n//           }} \n//         />\n//       </motion.div>\n//       <Box>\n//         <Typography \n//           variant=\"h6\" \n//           sx={{ \n//             fontWeight: 'bold',\n//             background: 'linear-gradient(45deg, #0cc0df, #ffd60a)',\n//             backgroundClip: 'text',\n//             WebkitBackgroundClip: 'text',\n//             WebkitTextFillColor: 'transparent',\n//             fontSize: '1.4rem'\n//           }}\n//         >\n//           Aurora Rising\n//         </Typography>\n//         <Typography \n//           variant=\"caption\" \n//           sx={{ \n//             color: 'rgba(168, 218, 220, 0.8)',\n//             fontSize: '0.7rem',\n//             display: 'block',\n//             lineHeight: 1\n//           }}\n//         >\n//           Robotics Summer School\n//         </Typography>\n//       </Box>\n//     </motion.div>\n//   );\n// };\n\n// // Navigation Menu Component\n// const NavigationMenu = ({ isMobile = false, onClose = null }) => {\n//   const navigate = useNavigate();\n//   const location = useLocation();\n\n//   const menuItems = [\n//     { label: 'Dashboard', icon: Dashboard, path: '/dashboard' },\n//     { label: 'Challenges', icon: School, path: '/challenges' },\n//     { label: 'Leaderboard', icon: EmojiEvents, path: '/leaderboard' },\n//     { label: 'Profile', icon: Person, path: '/profile' }\n//   ];\n\n//   const handleNavigation = (path) => {\n//     navigate(path);\n//     if (onClose) onClose();\n//   };\n\n//   const itemVariants = {\n//     hidden: { opacity: 0, x: -20 },\n//     visible: { opacity: 1, x: 0 }\n//   };\n\n//   if (isMobile) {\n//     return (\n//       <List sx={{ width: 280, pt: 2 }}>\n//         {menuItems.map((item, index) => {\n//           const isActive = location.pathname === item.path;\n//           const Icon = item.icon;\n\n//           return (\n//             <motion.div\n//               key={item.path}\n//               variants={itemVariants}\n//               initial=\"hidden\"\n//               animate=\"visible\"\n//               transition={{ delay: index * 0.1 }}\n//             >\n//               <ListItem \n//                 button \n//                 onClick={() => handleNavigation(item.path)}\n//                 sx={{\n//                   mx: 1,\n//                   mb: 1,\n//                   borderRadius: '12px',\n//                   bgcolor: isActive ? 'rgba(12, 192, 223, 0.2)' : 'transparent',\n//                   border: isActive ? '1px solid rgba(12, 192, 223, 0.5)' : '1px solid transparent',\n//                   '&:hover': {\n//                     bgcolor: 'rgba(12, 192, 223, 0.1)',\n//                     borderColor: 'rgba(12, 192, 223, 0.3)'\n//                   }\n//                 }}\n//               >\n//                 <ListItemIcon>\n//                   <Icon sx={{ color: isActive ? '#0cc0df' : 'rgba(255, 255, 255, 0.7)' }} />\n//                 </ListItemIcon>\n//                 <ListItemText \n//                   primary={item.label}\n//                   sx={{\n//                     '& .MuiListItemText-primary': {\n//                       color: isActive ? '#0cc0df' : 'rgba(255, 255, 255, 0.9)',\n//                       fontWeight: isActive ? 'bold' : 'normal'\n//                     }\n//                   }}\n//                 />\n//               </ListItem>\n//             </motion.div>\n//           );\n//         })}\n//       </List>\n//     );\n//   }\n\n//   return (\n//     <Box sx={{ display: 'flex', gap: 1 }}>\n//       {menuItems.map((item) => {\n//         const isActive = location.pathname === item.path;\n//         const Icon = item.icon;\n\n//         return (\n//           <motion.div\n//             key={item.path}\n//             whileHover={{ y: -2 }}\n//             whileTap={{ y: 0 }}\n//           >\n//             <Button\n//               startIcon={<Icon />}\n//               onClick={() => handleNavigation(item.path)}\n//               sx={{\n//                 color: isActive ? '#0cc0df' : 'rgba(255, 255, 255, 0.8)',\n//                 bgcolor: isActive ? 'rgba(12, 192, 223, 0.1)' : 'transparent',\n//                 border: isActive ? '1px solid rgba(12, 192, 223, 0.3)' : '1px solid transparent',\n//                 borderRadius: '10px',\n//                 px: 2,\n//                 py: 1,\n//                 fontWeight: isActive ? 'bold' : 'normal',\n//                 '&:hover': {\n//                   bgcolor: 'rgba(12, 192, 223, 0.1)',\n//                   borderColor: 'rgba(12, 192, 223, 0.3)',\n//                   color: '#0cc0df'\n//                 }\n//               }}\n//             >\n//               {item.label}\n//             </Button>\n//           </motion.div>\n//         );\n//       })}\n//     </Box>\n//   );\n// };\n\n// // User Profile Menu\n// const UserProfileMenu = () => {\n//   const dispatch = useDispatch();\n//   const navigate = useNavigate();\n//   const { user } = useSelector(state => state.auth);\n//   const { userProgress } = useSelector(state => state.challenges);\n\n//   const [anchorEl, setAnchorEl] = useState(null);\n//   const open = Boolean(anchorEl);\n\n//   const userRank = getRank(userProgress?.challengesCompleted || 0, userProgress?.totalScore || 0);\n\n//   const handleClick = (event) => {\n//     setAnchorEl(event.currentTarget);\n//   };\n\n//   const handleClose = () => {\n//     setAnchorEl(null);\n//   };\n\n//   const handleLogout = () => {\n//   dispatch(logoutUser());  // âœ… Correct action name\n//   navigate('/');\n//   handleClose();\n// };\n\n//   const handleProfile = () => {\n//     navigate('/profile');\n//     handleClose();\n//   };\n\n//   return (\n//     <>\n//       <motion.div\n//         whileHover={{ scale: 1.05 }}\n//         whileTap={{ scale: 0.95 }}\n//       >\n//         <Tooltip title=\"Profile & Settings\">\n//           <IconButton\n//             onClick={handleClick}\n//             sx={{\n//               p: 0,\n//               border: '2px solid transparent',\n//               '&:hover': {\n//                 borderColor: 'rgba(12, 192, 223, 0.5)'\n//               }\n//             }}\n//           >\n//             <Avatar\n//               sx={{\n//                 width: 40,\n//                 height: 40,\n//                 bgcolor: 'linear-gradient(45deg, #0cc0df, #007acc)',\n//                 fontSize: '1.2rem',\n//                 fontWeight: 'bold'\n//               }}\n//             >\n//               {user?.username?.[0]?.toUpperCase() || 'U'}\n//             </Avatar>\n//           </IconButton>\n//         </Tooltip>\n//       </motion.div>\n\n//       <Menu\n//         anchorEl={anchorEl}\n//         open={open}\n//         onClose={handleClose}\n//         PaperProps={{\n//           sx: {\n//             bgcolor: 'rgba(0, 8, 20, 0.95)',\n//             backdropFilter: 'blur(20px)',\n//             border: '1px solid rgba(12, 192, 223, 0.3)',\n//             borderRadius: '12px',\n//             color: 'white',\n//             minWidth: 250,\n//             mt: 1\n//           }\n//         }}\n//         transformOrigin={{ horizontal: 'right', vertical: 'top' }}\n//         anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\n//       >\n//         <Box sx={{ p: 2, borderBottom: '1px solid rgba(12, 192, 223, 0.2)' }}>\n//           <Typography variant=\"subtitle1\" sx={{ fontWeight: 'bold', color: 'white' }}>\n//             {user?.username || 'Student'}\n//           </Typography>\n//           <Typography variant=\"caption\" color=\"rgba(168, 218, 220, 0.8)\">\n//             {user?.email}\n//           </Typography>\n//           <Box sx={{ mt: 1 }}>\n//             <Chip\n//               label={userRank}\n//               size=\"small\"\n//               sx={{\n//                 background: 'linear-gradient(45deg, #0cc0df, #ffd60a)',\n//                 color: 'white',\n//                 fontWeight: 'bold',\n//                 fontSize: '0.7rem'\n//               }}\n//             />\n//           </Box>\n//         </Box>\n\n//         <MenuItem onClick={handleProfile} sx={{ py: 1.5 }}>\n//           <Person sx={{ mr: 2, color: '#0cc0df' }} />\n//           <Typography>Profile</Typography>\n//         </MenuItem>\n\n//         <MenuItem onClick={() => navigate('/settings')} sx={{ py: 1.5 }}>\n//           <Settings sx={{ mr: 2, color: '#0cc0df' }} />\n//           <Typography>Settings</Typography>\n//         </MenuItem>\n\n//         <Divider sx={{ borderColor: 'rgba(12, 192, 223, 0.2)' }} />\n\n//         <MenuItem onClick={handleLogout} sx={{ py: 1.5, color: '#ff6b6b' }}>\n//           <Logout sx={{ mr: 2 }} />\n//           <Typography>Logout</Typography>\n//         </MenuItem>\n//       </Menu>\n//     </>\n//   );\n// };\n\n// // Score Display Component\n// const ScoreDisplay = () => {\n//   const { userProgress } = useSelector(state => state.challenges);\n//   const [animatedScore, setAnimatedScore] = useState(0);\n\n//   useEffect(() => {\n//     const targetScore = userProgress?.totalScore || 0;\n//     const duration = 1500;\n//     const steps = 60;\n//     const stepDuration = duration / steps;\n\n//     let step = 0;\n//     const interval = setInterval(() => {\n//       step++;\n//       const progress = step / steps;\n//       const easeOut = 1 - Math.pow(1 - progress, 3);\n//       setAnimatedScore(Math.floor(targetScore * easeOut));\n\n//       if (step >= steps) {\n//         clearInterval(interval);\n//         setAnimatedScore(targetScore);\n//       }\n//     }, stepDuration);\n\n//     return () => clearInterval(interval);\n//   }, [userProgress?.totalScore]);\n\n//   return (\n//     <motion.div\n//       whileHover={{ scale: 1.05 }}\n//       transition={{ duration: 0.2 }}\n//     >\n//       <Tooltip title=\"Total Score\">\n//         <Chip\n//           icon={<EmojiEvents />}\n//           label={`${animatedScore} pts`}\n//           sx={{\n//             background: 'linear-gradient(45deg, #ffd60a, #ffba08)',\n//             color: 'white',\n//             fontWeight: 'bold',\n//             fontSize: '0.9rem',\n//             px: 1,\n//             boxShadow: '0 4px 15px rgba(255, 214, 10, 0.3)',\n//             '&:hover': {\n//               boxShadow: '0 6px 20px rgba(255, 214, 10, 0.4)'\n//             }\n//           }}\n//         />\n//       </Tooltip>\n//     </motion.div>\n//   );\n// };\n\n// // Main Header Component\n// const Header = () => {\n//   const theme = useTheme();\n//   const isMobile = useMediaQuery(theme.breakpoints.down('md'));\n//   const navigate = useNavigate();\n//   const { isAuthenticated } = useSelector(state => state.auth);\n\n//   const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\n\n//   const handleLogoClick = () => {\n//     navigate(isAuthenticated ? '/dashboard' : '/');\n//   };\n\n//   if (!isAuthenticated) {\n//     return null; // Don't show header on login/register pages\n//   }\n\n//   return (\n//     <motion.div\n//       initial={{ y: -100, opacity: 0 }}\n//       animate={{ y: 0, opacity: 1 }}\n//       transition={{ duration: 0.5, ease: \"easeOut\" }}\n//     >\n//       <AppBar \n//         position=\"sticky\" \n//         sx={{\n//           bgcolor: 'rgba(0, 8, 20, 0.95)',\n//           backdropFilter: 'blur(20px)',\n//           borderBottom: '1px solid rgba(12, 192, 223, 0.3)',\n//           boxShadow: '0 4px 20px rgba(0, 0, 0, 0.3)'\n//         }}\n//       >\n//         <Toolbar sx={{ py: 1 }}>\n//           {/* Logo */}\n//           <Box onClick={handleLogoClick} sx={{ mr: 4 }}>\n//             <AnimatedLogo />\n//           </Box>\n\n//           {/* Desktop Navigation */}\n//           {!isMobile && (\n//             <Box sx={{ flexGrow: 1, display: 'flex', justifyContent: 'center' }}>\n//               <NavigationMenu />\n//             </Box>\n//           )}\n\n//           {/* Right Side Actions */}\n//           <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, ml: 'auto' }}>\n//             {/* Score Display */}\n//             <ScoreDisplay />\n\n//             {/* Notifications */}\n//             <motion.div\n//               whileHover={{ scale: 1.1 }}\n//               whileTap={{ scale: 0.9 }}\n//             >\n//               <Tooltip title=\"Notifications\">\n//                 <IconButton sx={{ color: 'rgba(255, 255, 255, 0.8)' }}>\n//                   <Badge badgeContent={2} color=\"error\">\n//                     <Notifications />\n//                   </Badge>\n//                 </IconButton>\n//               </Tooltip>\n//             </motion.div>\n\n//             {/* User Profile */}\n//             <UserProfileMenu />\n\n//             {/* Mobile Menu Button */}\n//             {isMobile && (\n//               <IconButton\n//                 onClick={() => setMobileMenuOpen(true)}\n//                 sx={{ color: 'white', ml: 1 }}\n//               >\n//                 <MenuIcon />\n//               </IconButton>\n//             )}\n//           </Box>\n//         </Toolbar>\n//       </AppBar>\n\n//       {/* Mobile Navigation Drawer */}\n//       <Drawer\n//         anchor=\"right\"\n//         open={mobileMenuOpen}\n//         onClose={() => setMobileMenuOpen(false)}\n//         PaperProps={{\n//           sx: {\n//             bgcolor: 'rgba(0, 8, 20, 0.95)',\n//             backdropFilter: 'blur(20px)',\n//             border: '1px solid rgba(12, 192, 223, 0.3)',\n//             color: 'white'\n//           }\n//         }}\n//       >\n//         <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', p: 2 }}>\n//           <Typography variant=\"h6\" sx={{ color: '#0cc0df', fontWeight: 'bold' }}>\n//             Navigation\n//           </Typography>\n//           <IconButton onClick={() => setMobileMenuOpen(false)} sx={{ color: 'white' }}>\n//             <Close />\n//           </IconButton>\n//         </Box>\n//         <Divider sx={{ borderColor: 'rgba(12, 192, 223, 0.2)' }} />\n//         <NavigationMenu isMobile onClose={() => setMobileMenuOpen(false)} />\n//       </Drawer>\n//     </motion.div>\n//   );\n// };\n\n// export default Header;\n// src/components/common/Header.jsx\nimport React, { useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { AppBar, Toolbar, Typography, Button, IconButton, Menu, MenuItem, Avatar, Box, Chip } from '@mui/material';\nimport { AccountCircle, Dashboard, Assignment, Leaderboard, ExitToApp, Person } from '@mui/icons-material';\nimport { getRank } from '../../utils/helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Header = () => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const {\n    user,\n    isAuthenticated\n  } = useSelector(state => state.auth);\n  const {\n    userProgress\n  } = useSelector(state => state.challenges);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const open = Boolean(anchorEl);\n  const handleMenu = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const handleLogout = () => {\n    // Clear authentication data\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n\n    // You can dispatch logout action if you have one\n    // dispatch(logoutUser());\n\n    handleClose();\n    navigate('/');\n    window.location.reload(); // Force reload to reset auth state\n  };\n  const isActivePath = path => {\n    return location.pathname === path || location.pathname.startsWith(path);\n  };\n  return /*#__PURE__*/_jsxDEV(AppBar, {\n    position: \"static\",\n    sx: {\n      background: 'linear-gradient(135deg, #1976d2, #1565c0)',\n      boxShadow: '0 2px 10px rgba(0,0,0,0.1)'\n    },\n    children: /*#__PURE__*/_jsxDEV(Toolbar, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        component: \"div\",\n        sx: {\n          cursor: 'pointer',\n          fontWeight: 'bold',\n          background: 'linear-gradient(45deg, #ffffff, #e3f2fd)',\n          backgroundClip: 'text',\n          WebkitBackgroundClip: 'text',\n          WebkitTextFillColor: 'transparent'\n        },\n        onClick: () => navigate('/'),\n        children: \"\\uD83E\\uDD16 Aurora Rising\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 9\n      }, this), isAuthenticated && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          gap: 1,\n          ml: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"inherit\",\n          startIcon: /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 592,\n            columnNumber: 26\n          }, this),\n          onClick: () => navigate('/dashboard'),\n          sx: {\n            fontWeight: isActivePath('/dashboard') ? 'bold' : 'normal',\n            backgroundColor: isActivePath('/dashboard') ? 'rgba(255,255,255,0.1)' : 'transparent',\n            borderRadius: 2\n          },\n          children: \"Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"inherit\",\n          startIcon: /*#__PURE__*/_jsxDEV(Assignment, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 604,\n            columnNumber: 26\n          }, this),\n          onClick: () => navigate('/challenges'),\n          sx: {\n            fontWeight: isActivePath('/challenges') ? 'bold' : 'normal',\n            backgroundColor: isActivePath('/challenges') ? 'rgba(255,255,255,0.1)' : 'transparent',\n            borderRadius: 2\n          },\n          children: \"Challenges\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 602,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"inherit\",\n          startIcon: /*#__PURE__*/_jsxDEV(Leaderboard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 616,\n            columnNumber: 26\n          }, this),\n          onClick: () => navigate('/leaderboard'),\n          sx: {\n            fontWeight: isActivePath('/leaderboard') ? 'bold' : 'normal',\n            backgroundColor: isActivePath('/leaderboard') ? 'rgba(255,255,255,0.1)' : 'transparent',\n            borderRadius: 2\n          },\n          children: \"Leaderboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 614,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 589,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          flexGrow: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 630,\n        columnNumber: 9\n      }, this), isAuthenticated ? /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: 2\n        },\n        children: [userProgress && /*#__PURE__*/_jsxDEV(Chip, {\n          label: `Score: ${userProgress.totalScore || 0}`,\n          color: \"secondary\",\n          size: \"small\",\n          sx: {\n            color: 'white',\n            fontWeight: 'bold'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 637,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Chip, {\n          label: getRank((userProgress === null || userProgress === void 0 ? void 0 : userProgress.challengesCompleted) || 0, (userProgress === null || userProgress === void 0 ? void 0 : userProgress.totalScore) || 0),\n          size: \"small\",\n          sx: {\n            backgroundColor: 'rgba(255,255,255,0.2)',\n            color: 'white',\n            fontWeight: 'bold'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 646,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          size: \"large\",\n          \"aria-label\": \"account of current user\",\n          \"aria-controls\": \"menu-appbar\",\n          \"aria-haspopup\": \"true\",\n          onClick: handleMenu,\n          color: \"inherit\",\n          sx: {\n            p: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            sx: {\n              bgcolor: 'rgba(255,255,255,0.2)'\n            },\n            children: user !== null && user !== void 0 && user.username ? user.username[0].toUpperCase() : /*#__PURE__*/_jsxDEV(Person, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 667,\n              columnNumber: 68\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 666,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 657,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Menu, {\n          id: \"menu-appbar\",\n          anchorEl: anchorEl,\n          anchorOrigin: {\n            vertical: 'bottom',\n            horizontal: 'right'\n          },\n          keepMounted: true,\n          transformOrigin: {\n            vertical: 'top',\n            horizontal: 'right'\n          },\n          open: open,\n          onClose: handleClose,\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            onClick: () => {\n              handleClose();\n              navigate('/profile');\n            },\n            children: [/*#__PURE__*/_jsxDEV(Person, {\n              sx: {\n                mr: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 686,\n              columnNumber: 17\n            }, this), \"Profile\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 685,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            onClick: () => {\n              handleClose();\n              navigate('/dashboard');\n            },\n            children: [/*#__PURE__*/_jsxDEV(Dashboard, {\n              sx: {\n                mr: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 690,\n              columnNumber: 17\n            }, this), \"Dashboard\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 689,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            onClick: () => {\n              handleClose();\n              navigate('/challenges');\n            },\n            children: [/*#__PURE__*/_jsxDEV(Assignment, {\n              sx: {\n                mr: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 694,\n              columnNumber: 17\n            }, this), \"Challenges\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 693,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            onClick: () => {\n              handleClose();\n              navigate('/leaderboard');\n            },\n            children: [/*#__PURE__*/_jsxDEV(Leaderboard, {\n              sx: {\n                mr: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 698,\n              columnNumber: 17\n            }, this), \"Leaderboard\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 697,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            onClick: handleLogout,\n            children: [/*#__PURE__*/_jsxDEV(ExitToApp, {\n              sx: {\n                mr: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 702,\n              columnNumber: 17\n            }, this), \"Logout\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 701,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 670,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 634,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        color: \"inherit\",\n        onClick: () => navigate('/'),\n        sx: {\n          fontWeight: 'bold'\n        },\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 708,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 565,\n    columnNumber: 5\n  }, this);\n};\n_s(Header, \"dMJrQSLpmB8ls1tdA/gBSzcLfyk=\", false, function () {\n  return [useNavigate, useLocation, useDispatch, useSelector, useSelector];\n});\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useState","useNavigate","useLocation","useSelector","useDispatch","AppBar","Toolbar","Typography","Button","IconButton","Menu","MenuItem","Avatar","Box","Chip","AccountCircle","Dashboard","Assignment","Leaderboard","ExitToApp","Person","getRank","jsxDEV","_jsxDEV","Header","_s","navigate","location","dispatch","user","isAuthenticated","state","auth","userProgress","challenges","anchorEl","setAnchorEl","open","Boolean","handleMenu","event","currentTarget","handleClose","handleLogout","localStorage","removeItem","window","reload","isActivePath","path","pathname","startsWith","position","sx","background","boxShadow","children","variant","component","cursor","fontWeight","backgroundClip","WebkitBackgroundClip","WebkitTextFillColor","onClick","fileName","_jsxFileName","lineNumber","columnNumber","display","gap","ml","color","startIcon","backgroundColor","borderRadius","flexGrow","alignItems","label","totalScore","size","challengesCompleted","p","bgcolor","username","toUpperCase","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","mr","_c","$RefreshReg$"],"sources":["C:/Users/misch/Downloads/absix-workstation-web-main/absix-workstation-web-main/frontend/src/components/common/Header.jsx"],"sourcesContent":["// // src/components/common/Header.jsx\n// import React, { useState, useEffect } from 'react';\n// import { motion, AnimatePresence } from 'framer-motion';\n// import { useNavigate, useLocation } from 'react-router-dom';\n// import { useSelector, useDispatch } from 'react-redux';\n// import {\n//   AppBar,\n//   Toolbar,\n//   Typography,\n//   Button,\n//   Box,\n//   IconButton,\n//   Menu,\n//   MenuItem,\n//   Avatar,\n//   Chip,\n//   Badge,\n//   Tooltip,\n//   useMediaQuery,\n//   useTheme,\n//   Drawer,\n//   List,\n//   ListItem,\n//   ListItemIcon,\n//   ListItemText,\n//   Divider\n// } from '@mui/material';\n// import {\n//   Menu as MenuIcon,\n//   AccountCircle,\n//   Logout,\n//   Dashboard,\n//   EmojiEvents,\n//   Person,\n//   Settings,\n//   Notifications,\n//   Home,\n//   School,\n//   SmartToy,\n//   Close\n// } from '@mui/icons-material';\n// import { logoutUser } from '../../store/authSlice';\n// import { getRank } from '../../utils/helpers';\n\n// // Animated Logo Component\n// const AnimatedLogo = () => {\n//   return (\n//     <motion.div\n//       style={{\n//         display: 'flex',\n//         alignItems: 'center',\n//         gap: '12px',\n//         cursor: 'pointer'\n//       }}\n//       whileHover={{ scale: 1.05 }}\n//       transition={{ duration: 0.2 }}\n//     >\n//       <motion.div\n//         animate={{ \n//           rotate: [0, 360],\n//           scale: [1, 1.1, 1]\n//         }}\n//         transition={{ \n//           rotate: { duration: 20, repeat: Infinity, ease: \"linear\" },\n//           scale: { duration: 2, repeat: Infinity, repeatDelay: 3 }\n//         }}\n//       >\n//         <SmartToy \n//           sx={{ \n//             fontSize: 40, \n//             color: '#0cc0df',\n//             filter: 'drop-shadow(0 0 10px rgba(12, 192, 223, 0.5))'\n//           }} \n//         />\n//       </motion.div>\n//       <Box>\n//         <Typography \n//           variant=\"h6\" \n//           sx={{ \n//             fontWeight: 'bold',\n//             background: 'linear-gradient(45deg, #0cc0df, #ffd60a)',\n//             backgroundClip: 'text',\n//             WebkitBackgroundClip: 'text',\n//             WebkitTextFillColor: 'transparent',\n//             fontSize: '1.4rem'\n//           }}\n//         >\n//           Aurora Rising\n//         </Typography>\n//         <Typography \n//           variant=\"caption\" \n//           sx={{ \n//             color: 'rgba(168, 218, 220, 0.8)',\n//             fontSize: '0.7rem',\n//             display: 'block',\n//             lineHeight: 1\n//           }}\n//         >\n//           Robotics Summer School\n//         </Typography>\n//       </Box>\n//     </motion.div>\n//   );\n// };\n\n// // Navigation Menu Component\n// const NavigationMenu = ({ isMobile = false, onClose = null }) => {\n//   const navigate = useNavigate();\n//   const location = useLocation();\n  \n//   const menuItems = [\n//     { label: 'Dashboard', icon: Dashboard, path: '/dashboard' },\n//     { label: 'Challenges', icon: School, path: '/challenges' },\n//     { label: 'Leaderboard', icon: EmojiEvents, path: '/leaderboard' },\n//     { label: 'Profile', icon: Person, path: '/profile' }\n//   ];\n\n//   const handleNavigation = (path) => {\n//     navigate(path);\n//     if (onClose) onClose();\n//   };\n\n//   const itemVariants = {\n//     hidden: { opacity: 0, x: -20 },\n//     visible: { opacity: 1, x: 0 }\n//   };\n\n//   if (isMobile) {\n//     return (\n//       <List sx={{ width: 280, pt: 2 }}>\n//         {menuItems.map((item, index) => {\n//           const isActive = location.pathname === item.path;\n//           const Icon = item.icon;\n          \n//           return (\n//             <motion.div\n//               key={item.path}\n//               variants={itemVariants}\n//               initial=\"hidden\"\n//               animate=\"visible\"\n//               transition={{ delay: index * 0.1 }}\n//             >\n//               <ListItem \n//                 button \n//                 onClick={() => handleNavigation(item.path)}\n//                 sx={{\n//                   mx: 1,\n//                   mb: 1,\n//                   borderRadius: '12px',\n//                   bgcolor: isActive ? 'rgba(12, 192, 223, 0.2)' : 'transparent',\n//                   border: isActive ? '1px solid rgba(12, 192, 223, 0.5)' : '1px solid transparent',\n//                   '&:hover': {\n//                     bgcolor: 'rgba(12, 192, 223, 0.1)',\n//                     borderColor: 'rgba(12, 192, 223, 0.3)'\n//                   }\n//                 }}\n//               >\n//                 <ListItemIcon>\n//                   <Icon sx={{ color: isActive ? '#0cc0df' : 'rgba(255, 255, 255, 0.7)' }} />\n//                 </ListItemIcon>\n//                 <ListItemText \n//                   primary={item.label}\n//                   sx={{\n//                     '& .MuiListItemText-primary': {\n//                       color: isActive ? '#0cc0df' : 'rgba(255, 255, 255, 0.9)',\n//                       fontWeight: isActive ? 'bold' : 'normal'\n//                     }\n//                   }}\n//                 />\n//               </ListItem>\n//             </motion.div>\n//           );\n//         })}\n//       </List>\n//     );\n//   }\n\n//   return (\n//     <Box sx={{ display: 'flex', gap: 1 }}>\n//       {menuItems.map((item) => {\n//         const isActive = location.pathname === item.path;\n//         const Icon = item.icon;\n        \n//         return (\n//           <motion.div\n//             key={item.path}\n//             whileHover={{ y: -2 }}\n//             whileTap={{ y: 0 }}\n//           >\n//             <Button\n//               startIcon={<Icon />}\n//               onClick={() => handleNavigation(item.path)}\n//               sx={{\n//                 color: isActive ? '#0cc0df' : 'rgba(255, 255, 255, 0.8)',\n//                 bgcolor: isActive ? 'rgba(12, 192, 223, 0.1)' : 'transparent',\n//                 border: isActive ? '1px solid rgba(12, 192, 223, 0.3)' : '1px solid transparent',\n//                 borderRadius: '10px',\n//                 px: 2,\n//                 py: 1,\n//                 fontWeight: isActive ? 'bold' : 'normal',\n//                 '&:hover': {\n//                   bgcolor: 'rgba(12, 192, 223, 0.1)',\n//                   borderColor: 'rgba(12, 192, 223, 0.3)',\n//                   color: '#0cc0df'\n//                 }\n//               }}\n//             >\n//               {item.label}\n//             </Button>\n//           </motion.div>\n//         );\n//       })}\n//     </Box>\n//   );\n// };\n\n// // User Profile Menu\n// const UserProfileMenu = () => {\n//   const dispatch = useDispatch();\n//   const navigate = useNavigate();\n//   const { user } = useSelector(state => state.auth);\n//   const { userProgress } = useSelector(state => state.challenges);\n  \n//   const [anchorEl, setAnchorEl] = useState(null);\n//   const open = Boolean(anchorEl);\n  \n//   const userRank = getRank(userProgress?.challengesCompleted || 0, userProgress?.totalScore || 0);\n\n//   const handleClick = (event) => {\n//     setAnchorEl(event.currentTarget);\n//   };\n\n//   const handleClose = () => {\n//     setAnchorEl(null);\n//   };\n\n//   const handleLogout = () => {\n//   dispatch(logoutUser());  // âœ… Correct action name\n//   navigate('/');\n//   handleClose();\n// };\n\n//   const handleProfile = () => {\n//     navigate('/profile');\n//     handleClose();\n//   };\n\n//   return (\n//     <>\n//       <motion.div\n//         whileHover={{ scale: 1.05 }}\n//         whileTap={{ scale: 0.95 }}\n//       >\n//         <Tooltip title=\"Profile & Settings\">\n//           <IconButton\n//             onClick={handleClick}\n//             sx={{\n//               p: 0,\n//               border: '2px solid transparent',\n//               '&:hover': {\n//                 borderColor: 'rgba(12, 192, 223, 0.5)'\n//               }\n//             }}\n//           >\n//             <Avatar\n//               sx={{\n//                 width: 40,\n//                 height: 40,\n//                 bgcolor: 'linear-gradient(45deg, #0cc0df, #007acc)',\n//                 fontSize: '1.2rem',\n//                 fontWeight: 'bold'\n//               }}\n//             >\n//               {user?.username?.[0]?.toUpperCase() || 'U'}\n//             </Avatar>\n//           </IconButton>\n//         </Tooltip>\n//       </motion.div>\n\n//       <Menu\n//         anchorEl={anchorEl}\n//         open={open}\n//         onClose={handleClose}\n//         PaperProps={{\n//           sx: {\n//             bgcolor: 'rgba(0, 8, 20, 0.95)',\n//             backdropFilter: 'blur(20px)',\n//             border: '1px solid rgba(12, 192, 223, 0.3)',\n//             borderRadius: '12px',\n//             color: 'white',\n//             minWidth: 250,\n//             mt: 1\n//           }\n//         }}\n//         transformOrigin={{ horizontal: 'right', vertical: 'top' }}\n//         anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\n//       >\n//         <Box sx={{ p: 2, borderBottom: '1px solid rgba(12, 192, 223, 0.2)' }}>\n//           <Typography variant=\"subtitle1\" sx={{ fontWeight: 'bold', color: 'white' }}>\n//             {user?.username || 'Student'}\n//           </Typography>\n//           <Typography variant=\"caption\" color=\"rgba(168, 218, 220, 0.8)\">\n//             {user?.email}\n//           </Typography>\n//           <Box sx={{ mt: 1 }}>\n//             <Chip\n//               label={userRank}\n//               size=\"small\"\n//               sx={{\n//                 background: 'linear-gradient(45deg, #0cc0df, #ffd60a)',\n//                 color: 'white',\n//                 fontWeight: 'bold',\n//                 fontSize: '0.7rem'\n//               }}\n//             />\n//           </Box>\n//         </Box>\n\n//         <MenuItem onClick={handleProfile} sx={{ py: 1.5 }}>\n//           <Person sx={{ mr: 2, color: '#0cc0df' }} />\n//           <Typography>Profile</Typography>\n//         </MenuItem>\n\n//         <MenuItem onClick={() => navigate('/settings')} sx={{ py: 1.5 }}>\n//           <Settings sx={{ mr: 2, color: '#0cc0df' }} />\n//           <Typography>Settings</Typography>\n//         </MenuItem>\n\n//         <Divider sx={{ borderColor: 'rgba(12, 192, 223, 0.2)' }} />\n\n//         <MenuItem onClick={handleLogout} sx={{ py: 1.5, color: '#ff6b6b' }}>\n//           <Logout sx={{ mr: 2 }} />\n//           <Typography>Logout</Typography>\n//         </MenuItem>\n//       </Menu>\n//     </>\n//   );\n// };\n\n// // Score Display Component\n// const ScoreDisplay = () => {\n//   const { userProgress } = useSelector(state => state.challenges);\n//   const [animatedScore, setAnimatedScore] = useState(0);\n\n//   useEffect(() => {\n//     const targetScore = userProgress?.totalScore || 0;\n//     const duration = 1500;\n//     const steps = 60;\n//     const stepDuration = duration / steps;\n    \n//     let step = 0;\n//     const interval = setInterval(() => {\n//       step++;\n//       const progress = step / steps;\n//       const easeOut = 1 - Math.pow(1 - progress, 3);\n//       setAnimatedScore(Math.floor(targetScore * easeOut));\n      \n//       if (step >= steps) {\n//         clearInterval(interval);\n//         setAnimatedScore(targetScore);\n//       }\n//     }, stepDuration);\n\n//     return () => clearInterval(interval);\n//   }, [userProgress?.totalScore]);\n\n//   return (\n//     <motion.div\n//       whileHover={{ scale: 1.05 }}\n//       transition={{ duration: 0.2 }}\n//     >\n//       <Tooltip title=\"Total Score\">\n//         <Chip\n//           icon={<EmojiEvents />}\n//           label={`${animatedScore} pts`}\n//           sx={{\n//             background: 'linear-gradient(45deg, #ffd60a, #ffba08)',\n//             color: 'white',\n//             fontWeight: 'bold',\n//             fontSize: '0.9rem',\n//             px: 1,\n//             boxShadow: '0 4px 15px rgba(255, 214, 10, 0.3)',\n//             '&:hover': {\n//               boxShadow: '0 6px 20px rgba(255, 214, 10, 0.4)'\n//             }\n//           }}\n//         />\n//       </Tooltip>\n//     </motion.div>\n//   );\n// };\n\n// // Main Header Component\n// const Header = () => {\n//   const theme = useTheme();\n//   const isMobile = useMediaQuery(theme.breakpoints.down('md'));\n//   const navigate = useNavigate();\n//   const { isAuthenticated } = useSelector(state => state.auth);\n  \n//   const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\n\n//   const handleLogoClick = () => {\n//     navigate(isAuthenticated ? '/dashboard' : '/');\n//   };\n\n//   if (!isAuthenticated) {\n//     return null; // Don't show header on login/register pages\n//   }\n\n//   return (\n//     <motion.div\n//       initial={{ y: -100, opacity: 0 }}\n//       animate={{ y: 0, opacity: 1 }}\n//       transition={{ duration: 0.5, ease: \"easeOut\" }}\n//     >\n//       <AppBar \n//         position=\"sticky\" \n//         sx={{\n//           bgcolor: 'rgba(0, 8, 20, 0.95)',\n//           backdropFilter: 'blur(20px)',\n//           borderBottom: '1px solid rgba(12, 192, 223, 0.3)',\n//           boxShadow: '0 4px 20px rgba(0, 0, 0, 0.3)'\n//         }}\n//       >\n//         <Toolbar sx={{ py: 1 }}>\n//           {/* Logo */}\n//           <Box onClick={handleLogoClick} sx={{ mr: 4 }}>\n//             <AnimatedLogo />\n//           </Box>\n\n//           {/* Desktop Navigation */}\n//           {!isMobile && (\n//             <Box sx={{ flexGrow: 1, display: 'flex', justifyContent: 'center' }}>\n//               <NavigationMenu />\n//             </Box>\n//           )}\n\n//           {/* Right Side Actions */}\n//           <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, ml: 'auto' }}>\n//             {/* Score Display */}\n//             <ScoreDisplay />\n\n//             {/* Notifications */}\n//             <motion.div\n//               whileHover={{ scale: 1.1 }}\n//               whileTap={{ scale: 0.9 }}\n//             >\n//               <Tooltip title=\"Notifications\">\n//                 <IconButton sx={{ color: 'rgba(255, 255, 255, 0.8)' }}>\n//                   <Badge badgeContent={2} color=\"error\">\n//                     <Notifications />\n//                   </Badge>\n//                 </IconButton>\n//               </Tooltip>\n//             </motion.div>\n\n//             {/* User Profile */}\n//             <UserProfileMenu />\n\n//             {/* Mobile Menu Button */}\n//             {isMobile && (\n//               <IconButton\n//                 onClick={() => setMobileMenuOpen(true)}\n//                 sx={{ color: 'white', ml: 1 }}\n//               >\n//                 <MenuIcon />\n//               </IconButton>\n//             )}\n//           </Box>\n//         </Toolbar>\n//       </AppBar>\n\n//       {/* Mobile Navigation Drawer */}\n//       <Drawer\n//         anchor=\"right\"\n//         open={mobileMenuOpen}\n//         onClose={() => setMobileMenuOpen(false)}\n//         PaperProps={{\n//           sx: {\n//             bgcolor: 'rgba(0, 8, 20, 0.95)',\n//             backdropFilter: 'blur(20px)',\n//             border: '1px solid rgba(12, 192, 223, 0.3)',\n//             color: 'white'\n//           }\n//         }}\n//       >\n//         <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', p: 2 }}>\n//           <Typography variant=\"h6\" sx={{ color: '#0cc0df', fontWeight: 'bold' }}>\n//             Navigation\n//           </Typography>\n//           <IconButton onClick={() => setMobileMenuOpen(false)} sx={{ color: 'white' }}>\n//             <Close />\n//           </IconButton>\n//         </Box>\n//         <Divider sx={{ borderColor: 'rgba(12, 192, 223, 0.2)' }} />\n//         <NavigationMenu isMobile onClose={() => setMobileMenuOpen(false)} />\n//       </Drawer>\n//     </motion.div>\n//   );\n// };\n\n// export default Header;\n// src/components/common/Header.jsx\nimport React, { useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { \n  AppBar, \n  Toolbar, \n  Typography, \n  Button, \n  IconButton, \n  Menu, \n  MenuItem, \n  Avatar, \n  Box,\n  Chip\n} from '@mui/material';\nimport { \n  AccountCircle, \n  Dashboard, \n  Assignment,\n  Leaderboard, \n  ExitToApp,\n  Person\n} from '@mui/icons-material';\nimport { getRank } from '../../utils/helpers';\n\nconst Header = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const { user, isAuthenticated } = useSelector(state => state.auth);\n  const { userProgress } = useSelector(state => state.challenges);\n  \n  const [anchorEl, setAnchorEl] = useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleLogout = () => {\n    // Clear authentication data\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    \n    // You can dispatch logout action if you have one\n    // dispatch(logoutUser());\n    \n    handleClose();\n    navigate('/');\n    window.location.reload(); // Force reload to reset auth state\n  };\n\n  const isActivePath = (path) => {\n    return location.pathname === path || location.pathname.startsWith(path);\n  };\n\n  return (\n    <AppBar position=\"static\" sx={{ \n      background: 'linear-gradient(135deg, #1976d2, #1565c0)',\n      boxShadow: '0 2px 10px rgba(0,0,0,0.1)'\n    }}>\n      <Toolbar>\n        {/* Logo */}\n        <Typography \n          variant=\"h6\" \n          component=\"div\" \n          sx={{ \n            cursor: 'pointer', \n            fontWeight: 'bold',\n            background: 'linear-gradient(45deg, #ffffff, #e3f2fd)',\n            backgroundClip: 'text',\n            WebkitBackgroundClip: 'text',\n            WebkitTextFillColor: 'transparent'\n          }}\n          onClick={() => navigate('/')}\n        >\n          ðŸ¤– Aurora Rising\n        </Typography>\n\n        {/* Navigation Links - Only show when authenticated */}\n        {isAuthenticated && (\n          <Box sx={{ display: 'flex', gap: 1, ml: 4 }}>\n            <Button \n              color=\"inherit\" \n              startIcon={<Dashboard />}\n              onClick={() => navigate('/dashboard')}\n              sx={{ \n                fontWeight: isActivePath('/dashboard') ? 'bold' : 'normal',\n                backgroundColor: isActivePath('/dashboard') ? 'rgba(255,255,255,0.1)' : 'transparent',\n                borderRadius: 2\n              }}\n            >\n              Dashboard\n            </Button>\n            <Button \n              color=\"inherit\" \n              startIcon={<Assignment />}\n              onClick={() => navigate('/challenges')}\n              sx={{ \n                fontWeight: isActivePath('/challenges') ? 'bold' : 'normal',\n                backgroundColor: isActivePath('/challenges') ? 'rgba(255,255,255,0.1)' : 'transparent',\n                borderRadius: 2\n              }}\n            >\n              Challenges\n            </Button>\n            <Button \n              color=\"inherit\" \n              startIcon={<Leaderboard />}\n              onClick={() => navigate('/leaderboard')}\n              sx={{ \n                fontWeight: isActivePath('/leaderboard') ? 'bold' : 'normal',\n                backgroundColor: isActivePath('/leaderboard') ? 'rgba(255,255,255,0.1)' : 'transparent',\n                borderRadius: 2\n              }}\n            >\n              Leaderboard\n            </Button>\n          </Box>\n        )}\n\n        {/* Spacer */}\n        <Box sx={{ flexGrow: 1 }} />\n\n        {/* User Section */}\n        {isAuthenticated ? (\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n            {/* User Progress Chip */}\n            {userProgress && (\n              <Chip\n                label={`Score: ${userProgress.totalScore || 0}`}\n                color=\"secondary\"\n                size=\"small\"\n                sx={{ color: 'white', fontWeight: 'bold' }}\n              />\n            )}\n\n            {/* User Rank Chip */}\n            <Chip\n              label={getRank(userProgress?.challengesCompleted || 0, userProgress?.totalScore || 0)}\n              size=\"small\"\n              sx={{\n                backgroundColor: 'rgba(255,255,255,0.2)',\n                color: 'white',\n                fontWeight: 'bold'\n              }}\n            />\n            \n            {/* User Avatar and Menu */}\n            <IconButton\n              size=\"large\"\n              aria-label=\"account of current user\"\n              aria-controls=\"menu-appbar\"\n              aria-haspopup=\"true\"\n              onClick={handleMenu}\n              color=\"inherit\"\n              sx={{ p: 1 }}\n            >\n              <Avatar sx={{ bgcolor: 'rgba(255,255,255,0.2)' }}>\n                {user?.username ? user.username[0].toUpperCase() : <Person />}\n              </Avatar>\n            </IconButton>\n            <Menu\n              id=\"menu-appbar\"\n              anchorEl={anchorEl}\n              anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'right',\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n              }}\n              open={open}\n              onClose={handleClose}\n            >\n              <MenuItem onClick={() => { handleClose(); navigate('/profile'); }}>\n                <Person sx={{ mr: 1 }} />\n                Profile\n              </MenuItem>\n              <MenuItem onClick={() => { handleClose(); navigate('/dashboard'); }}>\n                <Dashboard sx={{ mr: 1 }} />\n                Dashboard\n              </MenuItem>\n              <MenuItem onClick={() => { handleClose(); navigate('/challenges'); }}>\n                <Assignment sx={{ mr: 1 }} />\n                Challenges\n              </MenuItem>\n              <MenuItem onClick={() => { handleClose(); navigate('/leaderboard'); }}>\n                <Leaderboard sx={{ mr: 1 }} />\n                Leaderboard\n              </MenuItem>\n              <MenuItem onClick={handleLogout}>\n                <ExitToApp sx={{ mr: 1 }} />\n                Logout\n              </MenuItem>\n            </Menu>\n          </Box>\n        ) : (\n          <Button \n            color=\"inherit\" \n            onClick={() => navigate('/')}\n            sx={{ fontWeight: 'bold' }}\n          >\n            Login\n          </Button>\n        )}\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Header;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}