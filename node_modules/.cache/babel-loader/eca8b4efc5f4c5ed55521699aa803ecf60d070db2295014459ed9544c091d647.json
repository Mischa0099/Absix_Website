{"ast":null,"code":"// src/utils/helpers.js (Enhanced version)\nimport { SCORE_THRESHOLDS, RANK_THRESHOLDS, DIFFICULTY_LEVELS } from './constants';\nexport const getScoreColor = score => {\n  if (score >= SCORE_THRESHOLDS.EXCELLENT) return '#4CAF50'; // Green\n  if (score >= SCORE_THRESHOLDS.GOOD) return '#8BC34A'; // Light Green\n  if (score >= SCORE_THRESHOLDS.FAIR) return '#CDDC39'; // Lime\n  if (score >= SCORE_THRESHOLDS.POOR) return '#FF9800'; // Orange\n  if (score >= 50) return '#FF5722'; // Deep Orange\n  return '#F44336'; // Red\n};\nexport const getRank = (challengesCompleted, totalScore) => {\n  const averageScore = challengesCompleted > 0 ? totalScore / challengesCompleted : 0;\n  const ranks = Object.entries(RANK_THRESHOLDS);\n  for (const [rank, requirements] of ranks) {\n    if (challengesCompleted >= requirements.challenges && averageScore >= requirements.avgScore) {\n      return rank.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase());\n    }\n  }\n  return 'Rookie';\n};\nexport const formatDuration = seconds => {\n  const hrs = Math.floor(seconds / 3600);\n  const mins = Math.floor(seconds % 3600 / 60);\n  const secs = seconds % 60;\n  if (hrs > 0) {\n    return `${hrs}h ${mins}m ${secs}s`;\n  } else if (mins > 0) {\n    return `${mins}m ${secs}s`;\n  } else {\n    return `${secs}s`;\n  }\n};\nexport const getDifficultyColor = difficulty => {\n  switch (difficulty === null || difficulty === void 0 ? void 0 : difficulty.toLowerCase()) {\n    case DIFFICULTY_LEVELS.BEGINNER:\n      return '#4CAF50';\n    case DIFFICULTY_LEVELS.INTERMEDIATE:\n      return '#FF9800';\n    case DIFFICULTY_LEVELS.ADVANCED:\n      return '#F44336';\n    case DIFFICULTY_LEVELS.EXPERT:\n      return '#9C27B0';\n    default:\n      return '#757575';\n  }\n};\nexport const calculateProgress = (completedChallenges, totalChallenges) => {\n  if (totalChallenges === 0) return 0;\n  return Math.round(completedChallenges / totalChallenges * 100);\n};\nexport const generateRandomAngles = (limits = null) => {\n  const defaultLimits = [{\n    min: -150,\n    max: 150\n  }, {\n    min: -90,\n    max: 90\n  }, {\n    min: -90,\n    max: 90\n  }];\n  const jointLimits = limits || defaultLimits;\n  return jointLimits.map(limit => Math.floor(Math.random() * (limit.max - limit.min + 1)) + limit.min);\n};\nexport const clampAngle = (angle, min = -180, max = 180) => {\n  return Math.max(min, Math.min(max, angle));\n};\nexport const degreesToRadians = degrees => {\n  return degrees * Math.PI / 180;\n};\nexport const radiansToDegrees = radians => {\n  return radians * 180 / Math.PI;\n};\nexport const calculateAccuracy = (targetAngles, currentAngles) => {\n  if (!Array.isArray(targetAngles) || !Array.isArray(currentAngles)) {\n    return 0;\n  }\n  const totalError = currentAngles.reduce((sum, angle, index) => {\n    const error = Math.abs(angle - (targetAngles[index] || 0));\n    return sum + error;\n  }, 0);\n  const maxPossibleError = 180 * currentAngles.length;\n  const accuracy = Math.max(0, (maxPossibleError - totalError) / maxPossibleError * 100);\n  return Math.round(accuracy);\n};\nexport const formatDate = dateString => {\n  if (!dateString) return 'Unknown';\n  try {\n    const date = new Date(dateString);\n    return date.toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  } catch (error) {\n    return 'Invalid Date';\n  }\n};\nexport const debounce = (func, wait) => {\n  let timeout;\n  return function executedFunction(...args) {\n    const later = () => {\n      clearTimeout(timeout);\n      func(...args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n};\nexport const throttle = (func, limit) => {\n  let inThrottle;\n  return function () {\n    const args = arguments;\n    const context = this;\n    if (!inThrottle) {\n      func.apply(context, args);\n      inThrottle = true;\n      setTimeout(() => inThrottle = false, limit);\n    }\n  };\n};\n\n// =================================================================","map":{"version":3,"names":["SCORE_THRESHOLDS","RANK_THRESHOLDS","DIFFICULTY_LEVELS","getScoreColor","score","EXCELLENT","GOOD","FAIR","POOR","getRank","challengesCompleted","totalScore","averageScore","ranks","Object","entries","rank","requirements","challenges","avgScore","replace","l","toUpperCase","formatDuration","seconds","hrs","Math","floor","mins","secs","getDifficultyColor","difficulty","toLowerCase","BEGINNER","INTERMEDIATE","ADVANCED","EXPERT","calculateProgress","completedChallenges","totalChallenges","round","generateRandomAngles","limits","defaultLimits","min","max","jointLimits","map","limit","random","clampAngle","angle","degreesToRadians","degrees","PI","radiansToDegrees","radians","calculateAccuracy","targetAngles","currentAngles","Array","isArray","totalError","reduce","sum","index","error","abs","maxPossibleError","length","accuracy","formatDate","dateString","date","Date","toLocaleDateString","year","month","day","hour","minute","debounce","func","wait","timeout","executedFunction","args","later","clearTimeout","setTimeout","throttle","inThrottle","arguments","context","apply"],"sources":["C:/Users/misch/Downloads/absix-workstation-web-main/absix-workstation-web-main/frontend/src/utils/helpers.js"],"sourcesContent":["// src/utils/helpers.js (Enhanced version)\nimport { SCORE_THRESHOLDS, RANK_THRESHOLDS, DIFFICULTY_LEVELS } from './constants';\n\nexport const getScoreColor = (score) => {\n  if (score >= SCORE_THRESHOLDS.EXCELLENT) return '#4CAF50'; // Green\n  if (score >= SCORE_THRESHOLDS.GOOD) return '#8BC34A'; // Light Green\n  if (score >= SCORE_THRESHOLDS.FAIR) return '#CDDC39'; // Lime\n  if (score >= SCORE_THRESHOLDS.POOR) return '#FF9800'; // Orange\n  if (score >= 50) return '#FF5722'; // Deep Orange\n  return '#F44336'; // Red\n};\n\nexport const getRank = (challengesCompleted, totalScore) => {\n  const averageScore = challengesCompleted > 0 ? totalScore / challengesCompleted : 0;\n  \n  const ranks = Object.entries(RANK_THRESHOLDS);\n  \n  for (const [rank, requirements] of ranks) {\n    if (challengesCompleted >= requirements.challenges && averageScore >= requirements.avgScore) {\n      return rank.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase());\n    }\n  }\n  \n  return 'Rookie';\n};\n\nexport const formatDuration = (seconds) => {\n  const hrs = Math.floor(seconds / 3600);\n  const mins = Math.floor((seconds % 3600) / 60);\n  const secs = seconds % 60;\n  \n  if (hrs > 0) {\n    return `${hrs}h ${mins}m ${secs}s`;\n  } else if (mins > 0) {\n    return `${mins}m ${secs}s`;\n  } else {\n    return `${secs}s`;\n  }\n};\n\nexport const getDifficultyColor = (difficulty) => {\n  switch (difficulty?.toLowerCase()) {\n    case DIFFICULTY_LEVELS.BEGINNER: return '#4CAF50';\n    case DIFFICULTY_LEVELS.INTERMEDIATE: return '#FF9800';\n    case DIFFICULTY_LEVELS.ADVANCED: return '#F44336';\n    case DIFFICULTY_LEVELS.EXPERT: return '#9C27B0';\n    default: return '#757575';\n  }\n};\n\nexport const calculateProgress = (completedChallenges, totalChallenges) => {\n  if (totalChallenges === 0) return 0;\n  return Math.round((completedChallenges / totalChallenges) * 100);\n};\n\nexport const generateRandomAngles = (limits = null) => {\n  const defaultLimits = [\n    { min: -150, max: 150 },\n    { min: -90, max: 90 },\n    { min: -90, max: 90 }\n  ];\n  \n  const jointLimits = limits || defaultLimits;\n  \n  return jointLimits.map(limit => \n    Math.floor(Math.random() * (limit.max - limit.min + 1)) + limit.min\n  );\n};\n\nexport const clampAngle = (angle, min = -180, max = 180) => {\n  return Math.max(min, Math.min(max, angle));\n};\n\nexport const degreesToRadians = (degrees) => {\n  return (degrees * Math.PI) / 180;\n};\n\nexport const radiansToDegrees = (radians) => {\n  return (radians * 180) / Math.PI;\n};\n\nexport const calculateAccuracy = (targetAngles, currentAngles) => {\n  if (!Array.isArray(targetAngles) || !Array.isArray(currentAngles)) {\n    return 0;\n  }\n  \n  const totalError = currentAngles.reduce((sum, angle, index) => {\n    const error = Math.abs(angle - (targetAngles[index] || 0));\n    return sum + error;\n  }, 0);\n  \n  const maxPossibleError = 180 * currentAngles.length;\n  const accuracy = Math.max(0, ((maxPossibleError - totalError) / maxPossibleError) * 100);\n  return Math.round(accuracy);\n};\n\nexport const formatDate = (dateString) => {\n  if (!dateString) return 'Unknown';\n  \n  try {\n    const date = new Date(dateString);\n    return date.toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  } catch (error) {\n    return 'Invalid Date';\n  }\n};\n\nexport const debounce = (func, wait) => {\n  let timeout;\n  return function executedFunction(...args) {\n    const later = () => {\n      clearTimeout(timeout);\n      func(...args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n};\n\nexport const throttle = (func, limit) => {\n  let inThrottle;\n  return function() {\n    const args = arguments;\n    const context = this;\n    if (!inThrottle) {\n      func.apply(context, args);\n      inThrottle = true;\n      setTimeout(() => inThrottle = false, limit);\n    }\n  };\n};\n\n// ================================================================="],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}