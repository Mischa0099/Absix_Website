{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { BREAKPOINTS, DEFAULT_PREFERENCES, ANIMATIONS } from '../utils/constants';\n\n// Initial state\nconst initialState = {\n  // Theme and appearance\n  theme: 'dark',\n  primaryColor: '#667eea',\n  accentColor: '#10b981',\n  // Layout\n  sidebarOpen: true,\n  sidebarCollapsed: false,\n  headerHeight: 64,\n  sidebarWidth: 280,\n  // Navigation\n  currentPage: 'dashboard',\n  breadcrumbs: [],\n  // Modal and overlay states\n  modals: {\n    settings: false,\n    profile: false,\n    challengeDetail: false,\n    robotSettings: false,\n    help: false\n  },\n  // Loading states\n  globalLoading: false,\n  pageLoading: false,\n  componentLoading: {},\n  // Notifications\n  notifications: [],\n  toasts: [],\n  // User preferences\n  preferences: {\n    ...DEFAULT_PREFERENCES,\n    animations: true,\n    soundEffects: true,\n    autoSave: true,\n    chartUpdateRate: 100,\n    debugMode: false,\n    compactMode: false,\n    highContrast: false\n  },\n  // Responsive design\n  screenSize: 'desktop',\n  // mobile, tablet, desktop\n  viewport: {\n    width: window.innerWidth,\n    height: window.innerHeight\n  },\n  isMobile: false,\n  isTablet: false,\n  // Component states\n  expandedCards: {},\n  collapsedPanels: {},\n  selectedTabs: {},\n  // Tutorial and help\n  showTutorial: false,\n  tutorialStep: 0,\n  showTooltips: true,\n  helpSectionOpen: false,\n  // Performance\n  performanceMode: false,\n  reducedMotion: false,\n  // Search and filters\n  searchQuery: '',\n  filters: {},\n  sortBy: 'name',\n  sortOrder: 'asc',\n  // Page-specific UI states\n  dashboard: {\n    gridLayout: 'default',\n    widgetVisibility: {\n      progress: true,\n      challenges: true,\n      robot: true,\n      activity: true\n    }\n  },\n  challenges: {\n    viewMode: 'grid',\n    // grid, list\n    filterBy: 'all',\n    // all, completed, available, locked\n    sortBy: 'difficulty'\n  },\n  robot: {\n    chartType: 'line',\n    // line, bar, area\n    dataRange: '5min',\n    // 1min, 5min, 15min, 1hour\n    showAdvanced: false,\n    autoScroll: true\n  },\n  // Error states\n  errors: {},\n  // Feature flags for UI\n  features: {\n    betaFeatures: false,\n    advancedMode: false,\n    experimentalUI: false\n  }\n};\n\n// UI slice\nconst uiSlice = createSlice({\n  name: 'ui',\n  initialState,\n  reducers: {\n    // Theme management\n    setTheme: (state, action) => {\n      state.theme = action.payload;\n    },\n    toggleTheme: state => {\n      state.theme = state.theme === 'dark' ? 'light' : 'dark';\n    },\n    setPrimaryColor: (state, action) => {\n      state.primaryColor = action.payload;\n    },\n    setAccentColor: (state, action) => {\n      state.accentColor = action.payload;\n    },\n    // Layout management\n    setSidebarOpen: (state, action) => {\n      state.sidebarOpen = action.payload;\n    },\n    toggleSidebar: state => {\n      state.sidebarOpen = !state.sidebarOpen;\n    },\n    setSidebarCollapsed: (state, action) => {\n      state.sidebarCollapsed = action.payload;\n    },\n    toggleSidebarCollapsed: state => {\n      state.sidebarCollapsed = !state.sidebarCollapsed;\n    },\n    setSidebarWidth: (state, action) => {\n      state.sidebarWidth = action.payload;\n    },\n    setHeaderHeight: (state, action) => {\n      state.headerHeight = action.payload;\n    },\n    // Navigation\n    setCurrentPage: (state, action) => {\n      state.currentPage = action.payload;\n    },\n    setBreadcrumbs: (state, action) => {\n      state.breadcrumbs = action.payload;\n    },\n    addBreadcrumb: (state, action) => {\n      state.breadcrumbs.push(action.payload);\n    },\n    // Modal management\n    openModal: (state, action) => {\n      const modalName = action.payload;\n      state.modals[modalName] = true;\n    },\n    closeModal: (state, action) => {\n      const modalName = action.payload;\n      state.modals[modalName] = false;\n    },\n    toggleModal: (state, action) => {\n      const modalName = action.payload;\n      state.modals[modalName] = !state.modals[modalName];\n    },\n    closeAllModals: state => {\n      Object.keys(state.modals).forEach(key => {\n        state.modals[key] = false;\n      });\n    },\n    // Loading states\n    setGlobalLoading: (state, action) => {\n      state.globalLoading = action.payload;\n    },\n    setPageLoading: (state, action) => {\n      state.pageLoading = action.payload;\n    },\n    setComponentLoading: (state, action) => {\n      const {\n        component,\n        loading\n      } = action.payload;\n      state.componentLoading[component] = loading;\n    },\n    // Notifications\n    addNotification: (state, action) => {\n      const notification = {\n        id: Date.now().toString(),\n        timestamp: Date.now(),\n        read: false,\n        ...action.payload\n      };\n      state.notifications.unshift(notification);\n\n      // Keep only last 50 notifications\n      if (state.notifications.length > 50) {\n        state.notifications = state.notifications.slice(0, 50);\n      }\n    },\n    markNotificationRead: (state, action) => {\n      const notificationId = action.payload;\n      const notification = state.notifications.find(n => n.id === notificationId);\n      if (notification) {\n        notification.read = true;\n      }\n    },\n    removeNotification: (state, action) => {\n      const notificationId = action.payload;\n      state.notifications = state.notifications.filter(n => n.id !== notificationId);\n    },\n    clearNotifications: state => {\n      state.notifications = [];\n    },\n    markAllNotificationsRead: state => {\n      state.notifications.forEach(notification => {\n        notification.read = true;\n      });\n    },\n    // Toast messages\n    addToast: (state, action) => {\n      const toast = {\n        id: Date.now().toString(),\n        timestamp: Date.now(),\n        duration: 4000,\n        ...action.payload\n      };\n      state.toasts.push(toast);\n    },\n    removeToast: (state, action) => {\n      const toastId = action.payload;\n      state.toasts = state.toasts.filter(t => t.id !== toastId);\n    },\n    clearToasts: state => {\n      state.toasts = [];\n    },\n    // Preferences\n    updatePreferences: (state, action) => {\n      state.preferences = {\n        ...state.preferences,\n        ...action.payload\n      };\n    },\n    resetPreferences: state => {\n      state.preferences = {\n        ...DEFAULT_PREFERENCES\n      };\n    },\n    // Responsive design\n    setViewport: (state, action) => {\n      const {\n        width,\n        height\n      } = action.payload;\n      state.viewport = {\n        width,\n        height\n      };\n\n      // Update screen size classification\n      if (width < BREAKPOINTS.SM) {\n        state.screenSize = 'mobile';\n        state.isMobile = true;\n        state.isTablet = false;\n      } else if (width < BREAKPOINTS.LG) {\n        state.screenSize = 'tablet';\n        state.isMobile = false;\n        state.isTablet = true;\n      } else {\n        state.screenSize = 'desktop';\n        state.isMobile = false;\n        state.isTablet = false;\n      }\n\n      // Auto-collapse sidebar on mobile\n      if (state.isMobile && state.sidebarOpen) {\n        state.sidebarOpen = false;\n      }\n    },\n    // Component states\n    toggleCardExpanded: (state, action) => {\n      const cardId = action.payload;\n      state.expandedCards[cardId] = !state.expandedCards[cardId];\n    },\n    setCardExpanded: (state, action) => {\n      const {\n        cardId,\n        expanded\n      } = action.payload;\n      state.expandedCards[cardId] = expanded;\n    },\n    togglePanelCollapsed: (state, action) => {\n      const panelId = action.payload;\n      state.collapsedPanels[panelId] = !state.collapsedPanels[panelId];\n    },\n    setSelectedTab: (state, action) => {\n      const {\n        tabGroupId,\n        tabId\n      } = action.payload;\n      state.selectedTabs[tabGroupId] = tabId;\n    },\n    // Tutorial and help\n    setShowTutorial: (state, action) => {\n      state.showTutorial = action.payload;\n    },\n    nextTutorialStep: state => {\n      state.tutorialStep += 1;\n    },\n    previousTutorialStep: state => {\n      state.tutorialStep = Math.max(0, state.tutorialStep - 1);\n    },\n    setTutorialStep: (state, action) => {\n      state.tutorialStep = action.payload;\n    },\n    setShowTooltips: (state, action) => {\n      state.showTooltips = action.payload;\n    },\n    toggleHelpSection: state => {\n      state.helpSectionOpen = !state.helpSectionOpen;\n    },\n    // Performance\n    setPerformanceMode: (state, action) => {\n      state.performanceMode = action.payload;\n\n      // Auto-adjust preferences for performance\n      if (action.payload) {\n        state.preferences.animations = false;\n        state.preferences.chartUpdateRate = 500;\n      }\n    },\n    setReducedMotion: (state, action) => {\n      state.reducedMotion = action.payload;\n      if (action.payload) {\n        state.preferences.animations = false;\n      }\n    },\n    // Search and filters\n    setSearchQuery: (state, action) => {\n      state.searchQuery = action.payload;\n    },\n    setFilters: (state, action) => {\n      state.filters = {\n        ...state.filters,\n        ...action.payload\n      };\n    },\n    clearFilters: state => {\n      state.filters = {};\n      state.searchQuery = '';\n    },\n    setSortBy: (state, action) => {\n      state.sortBy = action.payload;\n    },\n    setSortOrder: (state, action) => {\n      state.sortOrder = action.payload;\n    },\n    toggleSortOrder: state => {\n      state.sortOrder = state.sortOrder === 'asc' ? 'desc' : 'asc';\n    },\n    // Page-specific states\n    updateDashboardSettings: (state, action) => {\n      state.dashboard = {\n        ...state.dashboard,\n        ...action.payload\n      };\n    },\n    updateChallengesSettings: (state, action) => {\n      state.challenges = {\n        ...state.challenges,\n        ...action.payload\n      };\n    },\n    updateRobotSettings: (state, action) => {\n      state.robot = {\n        ...state.robot,\n        ...action.payload\n      };\n    },\n    // Error management\n    setError: (state, action) => {\n      const {\n        component,\n        error\n      } = action.payload;\n      state.errors[component] = error;\n    },\n    clearError: (state, action) => {\n      const component = action.payload;\n      delete state.errors[component];\n    },\n    clearAllErrors: state => {\n      state.errors = {};\n    },\n    // Features\n    toggleFeature: (state, action) => {\n      const feature = action.payload;\n      state.features[feature] = !state.features[feature];\n    },\n    setFeature: (state, action) => {\n      const {\n        feature,\n        enabled\n      } = action.payload;\n      state.features[feature] = enabled;\n    },\n    // Reset UI state\n    resetUIState: () => initialState\n  }\n});\n\n// Export actions\nexport const {\n  setTheme,\n  toggleTheme,\n  setPrimaryColor,\n  setAccentColor,\n  setSidebarOpen,\n  toggleSidebar,\n  setSidebarCollapsed,\n  toggleSidebarCollapsed,\n  setSidebarWidth,\n  setHeaderHeight,\n  setCurrentPage,\n  setBreadcrumbs,\n  addBreadcrumb,\n  openModal,\n  closeModal,\n  toggleModal,\n  closeAllModals,\n  setGlobalLoading,\n  setPageLoading,\n  setComponentLoading,\n  addNotification,\n  markNotificationRead,\n  removeNotification,\n  clearNotifications,\n  markAllNotificationsRead,\n  addToast,\n  removeToast,\n  clearToasts,\n  updatePreferences,\n  resetPreferences,\n  setViewport,\n  toggleCardExpanded,\n  setCardExpanded,\n  togglePanelCollapsed,\n  setSelectedTab,\n  setShowTutorial,\n  nextTutorialStep,\n  previousTutorialStep,\n  setTutorialStep,\n  setShowTooltips,\n  toggleHelpSection,\n  setPerformanceMode,\n  setReducedMotion,\n  setSearchQuery,\n  setFilters,\n  clearFilters,\n  setSortBy,\n  setSortOrder,\n  toggleSortOrder,\n  updateDashboardSettings,\n  updateChallengesSettings,\n  updateRobotSettings,\n  setError,\n  clearError,\n  clearAllErrors,\n  toggleFeature,\n  setFeature,\n  resetUIState\n} = uiSlice.actions;\n\n// Selectors\nexport const selectUI = state => state.ui;\nexport const selectTheme = state => state.ui.theme;\nexport const selectSidebarState = state => ({\n  open: state.ui.sidebarOpen,\n  collapsed: state.ui.sidebarCollapsed,\n  width: state.ui.sidebarWidth\n});\nexport const selectModals = state => state.ui.modals;\nexport const selectNotifications = state => state.ui.notifications;\nexport const selectPreferences = state => state.ui.preferences;\nexport const selectViewport = state => state.ui.viewport;\nexport const selectIsMobile = state => state.ui.isMobile;\nexport const selectIsTablet = state => state.ui.isTablet;\nexport const selectScreenSize = state => state.ui.screenSize;\nexport const selectLoadingStates = state => ({\n  global: state.ui.globalLoading,\n  page: state.ui.pageLoading,\n  components: state.ui.componentLoading\n});\n\n// Export reducer\nexport default uiSlice.reducer;","map":{"version":3,"names":["createSlice","BREAKPOINTS","DEFAULT_PREFERENCES","ANIMATIONS","initialState","theme","primaryColor","accentColor","sidebarOpen","sidebarCollapsed","headerHeight","sidebarWidth","currentPage","breadcrumbs","modals","settings","profile","challengeDetail","robotSettings","help","globalLoading","pageLoading","componentLoading","notifications","toasts","preferences","animations","soundEffects","autoSave","chartUpdateRate","debugMode","compactMode","highContrast","screenSize","viewport","width","window","innerWidth","height","innerHeight","isMobile","isTablet","expandedCards","collapsedPanels","selectedTabs","showTutorial","tutorialStep","showTooltips","helpSectionOpen","performanceMode","reducedMotion","searchQuery","filters","sortBy","sortOrder","dashboard","gridLayout","widgetVisibility","progress","challenges","robot","activity","viewMode","filterBy","chartType","dataRange","showAdvanced","autoScroll","errors","features","betaFeatures","advancedMode","experimentalUI","uiSlice","name","reducers","setTheme","state","action","payload","toggleTheme","setPrimaryColor","setAccentColor","setSidebarOpen","toggleSidebar","setSidebarCollapsed","toggleSidebarCollapsed","setSidebarWidth","setHeaderHeight","setCurrentPage","setBreadcrumbs","addBreadcrumb","push","openModal","modalName","closeModal","toggleModal","closeAllModals","Object","keys","forEach","key","setGlobalLoading","setPageLoading","setComponentLoading","component","loading","addNotification","notification","id","Date","now","toString","timestamp","read","unshift","length","slice","markNotificationRead","notificationId","find","n","removeNotification","filter","clearNotifications","markAllNotificationsRead","addToast","toast","duration","removeToast","toastId","t","clearToasts","updatePreferences","resetPreferences","setViewport","SM","LG","toggleCardExpanded","cardId","setCardExpanded","expanded","togglePanelCollapsed","panelId","setSelectedTab","tabGroupId","tabId","setShowTutorial","nextTutorialStep","previousTutorialStep","Math","max","setTutorialStep","setShowTooltips","toggleHelpSection","setPerformanceMode","setReducedMotion","setSearchQuery","setFilters","clearFilters","setSortBy","setSortOrder","toggleSortOrder","updateDashboardSettings","updateChallengesSettings","updateRobotSettings","setError","error","clearError","clearAllErrors","toggleFeature","feature","setFeature","enabled","resetUIState","actions","selectUI","ui","selectTheme","selectSidebarState","open","collapsed","selectModals","selectNotifications","selectPreferences","selectViewport","selectIsMobile","selectIsTablet","selectScreenSize","selectLoadingStates","global","page","components","reducer"],"sources":["C:/Users/misch/Downloads/absix-workstation-web-main/absix-workstation-web-main/frontend/src/store/uiSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport { BREAKPOINTS, DEFAULT_PREFERENCES, ANIMATIONS } from '../utils/constants';\r\n\r\n// Initial state\r\nconst initialState = {\r\n  // Theme and appearance\r\n  theme: 'dark',\r\n  primaryColor: '#667eea',\r\n  accentColor: '#10b981',\r\n  \r\n  // Layout\r\n  sidebarOpen: true,\r\n  sidebarCollapsed: false,\r\n  headerHeight: 64,\r\n  sidebarWidth: 280,\r\n  \r\n  // Navigation\r\n  currentPage: 'dashboard',\r\n  breadcrumbs: [],\r\n  \r\n  // Modal and overlay states\r\n  modals: {\r\n    settings: false,\r\n    profile: false,\r\n    challengeDetail: false,\r\n    robotSettings: false,\r\n    help: false,\r\n  },\r\n  \r\n  // Loading states\r\n  globalLoading: false,\r\n  pageLoading: false,\r\n  componentLoading: {},\r\n  \r\n  // Notifications\r\n  notifications: [],\r\n  toasts: [],\r\n  \r\n  // User preferences\r\n  preferences: {\r\n    ...DEFAULT_PREFERENCES,\r\n    animations: true,\r\n    soundEffects: true,\r\n    autoSave: true,\r\n    chartUpdateRate: 100,\r\n    debugMode: false,\r\n    compactMode: false,\r\n    highContrast: false,\r\n  },\r\n  \r\n  // Responsive design\r\n  screenSize: 'desktop', // mobile, tablet, desktop\r\n  viewport: {\r\n    width: window.innerWidth,\r\n    height: window.innerHeight,\r\n  },\r\n  isMobile: false,\r\n  isTablet: false,\r\n  \r\n  // Component states\r\n  expandedCards: {},\r\n  collapsedPanels: {},\r\n  selectedTabs: {},\r\n  \r\n  // Tutorial and help\r\n  showTutorial: false,\r\n  tutorialStep: 0,\r\n  showTooltips: true,\r\n  helpSectionOpen: false,\r\n  \r\n  // Performance\r\n  performanceMode: false,\r\n  reducedMotion: false,\r\n  \r\n  // Search and filters\r\n  searchQuery: '',\r\n  filters: {},\r\n  sortBy: 'name',\r\n  sortOrder: 'asc',\r\n  \r\n  // Page-specific UI states\r\n  dashboard: {\r\n    gridLayout: 'default',\r\n    widgetVisibility: {\r\n      progress: true,\r\n      challenges: true,\r\n      robot: true,\r\n      activity: true,\r\n    },\r\n  },\r\n  \r\n  challenges: {\r\n    viewMode: 'grid', // grid, list\r\n    filterBy: 'all', // all, completed, available, locked\r\n    sortBy: 'difficulty',\r\n  },\r\n  \r\n  robot: {\r\n    chartType: 'line', // line, bar, area\r\n    dataRange: '5min', // 1min, 5min, 15min, 1hour\r\n    showAdvanced: false,\r\n    autoScroll: true,\r\n  },\r\n  \r\n  // Error states\r\n  errors: {},\r\n  \r\n  // Feature flags for UI\r\n  features: {\r\n    betaFeatures: false,\r\n    advancedMode: false,\r\n    experimentalUI: false,\r\n  },\r\n};\r\n\r\n// UI slice\r\nconst uiSlice = createSlice({\r\n  name: 'ui',\r\n  initialState,\r\n  reducers: {\r\n    // Theme management\r\n    setTheme: (state, action) => {\r\n      state.theme = action.payload;\r\n    },\r\n    \r\n    toggleTheme: (state) => {\r\n      state.theme = state.theme === 'dark' ? 'light' : 'dark';\r\n    },\r\n    \r\n    setPrimaryColor: (state, action) => {\r\n      state.primaryColor = action.payload;\r\n    },\r\n    \r\n    setAccentColor: (state, action) => {\r\n      state.accentColor = action.payload;\r\n    },\r\n    \r\n    // Layout management\r\n    setSidebarOpen: (state, action) => {\r\n      state.sidebarOpen = action.payload;\r\n    },\r\n    \r\n    toggleSidebar: (state) => {\r\n      state.sidebarOpen = !state.sidebarOpen;\r\n    },\r\n    \r\n    setSidebarCollapsed: (state, action) => {\r\n      state.sidebarCollapsed = action.payload;\r\n    },\r\n    \r\n    toggleSidebarCollapsed: (state) => {\r\n      state.sidebarCollapsed = !state.sidebarCollapsed;\r\n    },\r\n    \r\n    setSidebarWidth: (state, action) => {\r\n      state.sidebarWidth = action.payload;\r\n    },\r\n    \r\n    setHeaderHeight: (state, action) => {\r\n      state.headerHeight = action.payload;\r\n    },\r\n    \r\n    // Navigation\r\n    setCurrentPage: (state, action) => {\r\n      state.currentPage = action.payload;\r\n    },\r\n    \r\n    setBreadcrumbs: (state, action) => {\r\n      state.breadcrumbs = action.payload;\r\n    },\r\n    \r\n    addBreadcrumb: (state, action) => {\r\n      state.breadcrumbs.push(action.payload);\r\n    },\r\n    \r\n    // Modal management\r\n    openModal: (state, action) => {\r\n      const modalName = action.payload;\r\n      state.modals[modalName] = true;\r\n    },\r\n    \r\n    closeModal: (state, action) => {\r\n      const modalName = action.payload;\r\n      state.modals[modalName] = false;\r\n    },\r\n    \r\n    toggleModal: (state, action) => {\r\n      const modalName = action.payload;\r\n      state.modals[modalName] = !state.modals[modalName];\r\n    },\r\n    \r\n    closeAllModals: (state) => {\r\n      Object.keys(state.modals).forEach(key => {\r\n        state.modals[key] = false;\r\n      });\r\n    },\r\n    \r\n    // Loading states\r\n    setGlobalLoading: (state, action) => {\r\n      state.globalLoading = action.payload;\r\n    },\r\n    \r\n    setPageLoading: (state, action) => {\r\n      state.pageLoading = action.payload;\r\n    },\r\n    \r\n    setComponentLoading: (state, action) => {\r\n      const { component, loading } = action.payload;\r\n      state.componentLoading[component] = loading;\r\n    },\r\n    \r\n    // Notifications\r\n    addNotification: (state, action) => {\r\n      const notification = {\r\n        id: Date.now().toString(),\r\n        timestamp: Date.now(),\r\n        read: false,\r\n        ...action.payload,\r\n      };\r\n      state.notifications.unshift(notification);\r\n      \r\n      // Keep only last 50 notifications\r\n      if (state.notifications.length > 50) {\r\n        state.notifications = state.notifications.slice(0, 50);\r\n      }\r\n    },\r\n    \r\n    markNotificationRead: (state, action) => {\r\n      const notificationId = action.payload;\r\n      const notification = state.notifications.find(n => n.id === notificationId);\r\n      if (notification) {\r\n        notification.read = true;\r\n      }\r\n    },\r\n    \r\n    removeNotification: (state, action) => {\r\n      const notificationId = action.payload;\r\n      state.notifications = state.notifications.filter(n => n.id !== notificationId);\r\n    },\r\n    \r\n    clearNotifications: (state) => {\r\n      state.notifications = [];\r\n    },\r\n    \r\n    markAllNotificationsRead: (state) => {\r\n      state.notifications.forEach(notification => {\r\n        notification.read = true;\r\n      });\r\n    },\r\n    \r\n    // Toast messages\r\n    addToast: (state, action) => {\r\n      const toast = {\r\n        id: Date.now().toString(),\r\n        timestamp: Date.now(),\r\n        duration: 4000,\r\n        ...action.payload,\r\n      };\r\n      state.toasts.push(toast);\r\n    },\r\n    \r\n    removeToast: (state, action) => {\r\n      const toastId = action.payload;\r\n      state.toasts = state.toasts.filter(t => t.id !== toastId);\r\n    },\r\n    \r\n    clearToasts: (state) => {\r\n      state.toasts = [];\r\n    },\r\n    \r\n    // Preferences\r\n    updatePreferences: (state, action) => {\r\n      state.preferences = {\r\n        ...state.preferences,\r\n        ...action.payload,\r\n      };\r\n    },\r\n    \r\n    resetPreferences: (state) => {\r\n      state.preferences = { ...DEFAULT_PREFERENCES };\r\n    },\r\n    \r\n    // Responsive design\r\n    setViewport: (state, action) => {\r\n      const { width, height } = action.payload;\r\n      state.viewport = { width, height };\r\n      \r\n      // Update screen size classification\r\n      if (width < BREAKPOINTS.SM) {\r\n        state.screenSize = 'mobile';\r\n        state.isMobile = true;\r\n        state.isTablet = false;\r\n      } else if (width < BREAKPOINTS.LG) {\r\n        state.screenSize = 'tablet';\r\n        state.isMobile = false;\r\n        state.isTablet = true;\r\n      } else {\r\n        state.screenSize = 'desktop';\r\n        state.isMobile = false;\r\n        state.isTablet = false;\r\n      }\r\n      \r\n      // Auto-collapse sidebar on mobile\r\n      if (state.isMobile && state.sidebarOpen) {\r\n        state.sidebarOpen = false;\r\n      }\r\n    },\r\n    \r\n    // Component states\r\n    toggleCardExpanded: (state, action) => {\r\n      const cardId = action.payload;\r\n      state.expandedCards[cardId] = !state.expandedCards[cardId];\r\n    },\r\n    \r\n    setCardExpanded: (state, action) => {\r\n      const { cardId, expanded } = action.payload;\r\n      state.expandedCards[cardId] = expanded;\r\n    },\r\n    \r\n    togglePanelCollapsed: (state, action) => {\r\n      const panelId = action.payload;\r\n      state.collapsedPanels[panelId] = !state.collapsedPanels[panelId];\r\n    },\r\n    \r\n    setSelectedTab: (state, action) => {\r\n      const { tabGroupId, tabId } = action.payload;\r\n      state.selectedTabs[tabGroupId] = tabId;\r\n    },\r\n    \r\n    // Tutorial and help\r\n    setShowTutorial: (state, action) => {\r\n      state.showTutorial = action.payload;\r\n    },\r\n    \r\n    nextTutorialStep: (state) => {\r\n      state.tutorialStep += 1;\r\n    },\r\n    \r\n    previousTutorialStep: (state) => {\r\n      state.tutorialStep = Math.max(0, state.tutorialStep - 1);\r\n    },\r\n    \r\n    setTutorialStep: (state, action) => {\r\n      state.tutorialStep = action.payload;\r\n    },\r\n    \r\n    setShowTooltips: (state, action) => {\r\n      state.showTooltips = action.payload;\r\n    },\r\n    \r\n    toggleHelpSection: (state) => {\r\n      state.helpSectionOpen = !state.helpSectionOpen;\r\n    },\r\n    \r\n    // Performance\r\n    setPerformanceMode: (state, action) => {\r\n      state.performanceMode = action.payload;\r\n      \r\n      // Auto-adjust preferences for performance\r\n      if (action.payload) {\r\n        state.preferences.animations = false;\r\n        state.preferences.chartUpdateRate = 500;\r\n      }\r\n    },\r\n    \r\n    setReducedMotion: (state, action) => {\r\n      state.reducedMotion = action.payload;\r\n      \r\n      if (action.payload) {\r\n        state.preferences.animations = false;\r\n      }\r\n    },\r\n    \r\n    // Search and filters\r\n    setSearchQuery: (state, action) => {\r\n      state.searchQuery = action.payload;\r\n    },\r\n    \r\n    setFilters: (state, action) => {\r\n      state.filters = {\r\n        ...state.filters,\r\n        ...action.payload,\r\n      };\r\n    },\r\n    \r\n    clearFilters: (state) => {\r\n      state.filters = {};\r\n      state.searchQuery = '';\r\n    },\r\n    \r\n    setSortBy: (state, action) => {\r\n      state.sortBy = action.payload;\r\n    },\r\n    \r\n    setSortOrder: (state, action) => {\r\n      state.sortOrder = action.payload;\r\n    },\r\n    \r\n    toggleSortOrder: (state) => {\r\n      state.sortOrder = state.sortOrder === 'asc' ? 'desc' : 'asc';\r\n    },\r\n    \r\n    // Page-specific states\r\n    updateDashboardSettings: (state, action) => {\r\n      state.dashboard = {\r\n        ...state.dashboard,\r\n        ...action.payload,\r\n      };\r\n    },\r\n    \r\n    updateChallengesSettings: (state, action) => {\r\n      state.challenges = {\r\n        ...state.challenges,\r\n        ...action.payload,\r\n      };\r\n    },\r\n    \r\n    updateRobotSettings: (state, action) => {\r\n      state.robot = {\r\n        ...state.robot,\r\n        ...action.payload,\r\n      };\r\n    },\r\n    \r\n    // Error management\r\n    setError: (state, action) => {\r\n      const { component, error } = action.payload;\r\n      state.errors[component] = error;\r\n    },\r\n    \r\n    clearError: (state, action) => {\r\n      const component = action.payload;\r\n      delete state.errors[component];\r\n    },\r\n    \r\n    clearAllErrors: (state) => {\r\n      state.errors = {};\r\n    },\r\n    \r\n    // Features\r\n    toggleFeature: (state, action) => {\r\n      const feature = action.payload;\r\n      state.features[feature] = !state.features[feature];\r\n    },\r\n    \r\n    setFeature: (state, action) => {\r\n      const { feature, enabled } = action.payload;\r\n      state.features[feature] = enabled;\r\n    },\r\n    \r\n    // Reset UI state\r\n    resetUIState: () => initialState,\r\n  },\r\n});\r\n\r\n// Export actions\r\nexport const {\r\n  setTheme,\r\n  toggleTheme,\r\n  setPrimaryColor,\r\n  setAccentColor,\r\n  setSidebarOpen,\r\n  toggleSidebar,\r\n  setSidebarCollapsed,\r\n  toggleSidebarCollapsed,\r\n  setSidebarWidth,\r\n  setHeaderHeight,\r\n  setCurrentPage,\r\n  setBreadcrumbs,\r\n  addBreadcrumb,\r\n  openModal,\r\n  closeModal,\r\n  toggleModal,\r\n  closeAllModals,\r\n  setGlobalLoading,\r\n  setPageLoading,\r\n  setComponentLoading,\r\n  addNotification,\r\n  markNotificationRead,\r\n  removeNotification,\r\n  clearNotifications,\r\n  markAllNotificationsRead,\r\n  addToast,\r\n  removeToast,\r\n  clearToasts,\r\n  updatePreferences,\r\n  resetPreferences,\r\n  setViewport,\r\n  toggleCardExpanded,\r\n  setCardExpanded,\r\n  togglePanelCollapsed,\r\n  setSelectedTab,\r\n  setShowTutorial,\r\n  nextTutorialStep,\r\n  previousTutorialStep,\r\n  setTutorialStep,\r\n  setShowTooltips,\r\n  toggleHelpSection,\r\n  setPerformanceMode,\r\n  setReducedMotion,\r\n  setSearchQuery,\r\n  setFilters,\r\n  clearFilters,\r\n  setSortBy,\r\n  setSortOrder,\r\n  toggleSortOrder,\r\n  updateDashboardSettings,\r\n  updateChallengesSettings,\r\n  updateRobotSettings,\r\n  setError,\r\n  clearError,\r\n  clearAllErrors,\r\n  toggleFeature,\r\n  setFeature,\r\n  resetUIState,\r\n} = uiSlice.actions;\r\n\r\n// Selectors\r\nexport const selectUI = (state) => state.ui;\r\nexport const selectTheme = (state) => state.ui.theme;\r\nexport const selectSidebarState = (state) => ({\r\n  open: state.ui.sidebarOpen,\r\n  collapsed: state.ui.sidebarCollapsed,\r\n  width: state.ui.sidebarWidth,\r\n});\r\nexport const selectModals = (state) => state.ui.modals;\r\nexport const selectNotifications = (state) => state.ui.notifications;\r\nexport const selectPreferences = (state) => state.ui.preferences;\r\nexport const selectViewport = (state) => state.ui.viewport;\r\nexport const selectIsMobile = (state) => state.ui.isMobile;\r\nexport const selectIsTablet = (state) => state.ui.isTablet;\r\nexport const selectScreenSize = (state) => state.ui.screenSize;\r\nexport const selectLoadingStates = (state) => ({\r\n  global: state.ui.globalLoading,\r\n  page: state.ui.pageLoading,\r\n  components: state.ui.componentLoading,\r\n});\r\n\r\n// Export reducer\r\nexport default uiSlice.reducer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}