{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\misch\\\\Downloads\\\\absix-workstation-web-main\\\\absix-workstation-web-main\\\\frontend\\\\src\\\\components\\\\auth\\\\ProtectedRoute.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport LoadingSpinner from '../common/LoadingSpinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children\n}) => {\n  _s();\n  const {\n    isAuthenticated,\n    loading\n  } = useSelector(state => state.auth);\n  const location = useLocation();\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n      message: \"Checking authentication...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  }\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\",\n      state: {\n        from: location\n      },\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }, this);\n  }\n  return children;\n};\n_s(ProtectedRoute, \"fOayQyXlEEr8ek2aWeMP53aUQPs=\", false, function () {\n  return [useSelector, useLocation];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","useLocation","useSelector","LoadingSpinner","jsxDEV","_jsxDEV","ProtectedRoute","children","_s","isAuthenticated","loading","state","auth","location","message","fileName","_jsxFileName","lineNumber","columnNumber","to","from","replace","_c","$RefreshReg$"],"sources":["C:/Users/misch/Downloads/absix-workstation-web-main/absix-workstation-web-main/frontend/src/components/auth/ProtectedRoute.jsx"],"sourcesContent":["import React from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport LoadingSpinner from '../common/LoadingSpinner';\n\nconst ProtectedRoute = ({ children }) => {\n  const { isAuthenticated, loading } = useSelector(state => state.auth);\n  const location = useLocation();\n\n  if (loading) {\n    return <LoadingSpinner message=\"Checking authentication...\" />;\n  }\n\n  if (!isAuthenticated) {\n    return <Navigate to=\"/\" state={{ from: location }} replace />;\n  }\n\n  return children;\n};\n\nexport default ProtectedRoute;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AACxD,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAOC,cAAc,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAM;IAAEC,eAAe;IAAEC;EAAQ,CAAC,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC;EACrE,MAAMC,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAE9B,IAAIS,OAAO,EAAE;IACX,oBAAOL,OAAA,CAACF,cAAc;MAACW,OAAO,EAAC;IAA4B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAChE;EAEA,IAAI,CAACT,eAAe,EAAE;IACpB,oBAAOJ,OAAA,CAACL,QAAQ;MAACmB,EAAE,EAAC,GAAG;MAACR,KAAK,EAAE;QAAES,IAAI,EAAEP;MAAS,CAAE;MAACQ,OAAO;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC/D;EAEA,OAAOX,QAAQ;AACjB,CAAC;AAACC,EAAA,CAbIF,cAAc;EAAA,QACmBJ,WAAW,EAC/BD,WAAW;AAAA;AAAAqB,EAAA,GAFxBhB,cAAc;AAepB,eAAeA,cAAc;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}