{"ast":null,"code":"// src/store/authSlice.js\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport authService from '../services/authService';\n\n// Async thunks for authentication\nexport const loginUser = createAsyncThunk('auth/login', async ({\n  username,\n  password\n}, {\n  rejectWithValue\n}) => {\n  try {\n    var _response$data, _response$data2;\n    console.log('🔐 Auth slice: Starting login...');\n    const response = await authService.login(username, password);\n    console.log('🔐 Auth slice: Login response:', {\n      status: response.status,\n      hasToken: !!((_response$data = response.data) !== null && _response$data !== void 0 && _response$data.access_token),\n      hasUser: !!((_response$data2 = response.data) !== null && _response$data2 !== void 0 && _response$data2.user)\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    console.error('🔐 Auth slice: Login error:', error);\n    return rejectWithValue(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || error.message || 'Login failed');\n  }\n});\nexport const registerUser = createAsyncThunk('auth/register', async ({\n  username,\n  password,\n  email\n}, {\n  rejectWithValue\n}) => {\n  try {\n    var _response$data3, _response$data4;\n    console.log('👤 Auth slice: Starting registration...');\n    const response = await authService.register(username, password, email);\n    console.log('👤 Auth slice: Registration response:', {\n      status: response.status,\n      hasToken: !!((_response$data3 = response.data) !== null && _response$data3 !== void 0 && _response$data3.access_token),\n      hasUser: !!((_response$data4 = response.data) !== null && _response$data4 !== void 0 && _response$data4.user)\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    console.error('👤 Auth slice: Registration error:', error);\n    return rejectWithValue(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.detail) || error.message || 'Registration failed');\n  }\n});\nexport const logoutUser = createAsyncThunk('auth/logout', async (_, {\n  dispatch\n}) => {\n  try {\n    await authService.logout();\n    console.log('🚪 Auth slice: Logout completed');\n    return null;\n  } catch (error) {\n    console.error('🚪 Auth slice: Logout error:', error);\n    // Continue with logout even if API call fails\n    return null;\n  }\n});\nexport const getCurrentUser = createAsyncThunk('auth/getCurrentUser', async (_, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await authService.getCurrentUser();\n    return response.data;\n  } catch (error) {\n    var _error$response3, _error$response3$data;\n    console.error('👤 Auth slice: Get current user error:', error);\n    return rejectWithValue(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.detail) || error.message);\n  }\n});\nexport const updateUserProfile = createAsyncThunk('auth/updateProfile', async (userData, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await authService.updateProfile(userData);\n    return response.data;\n  } catch (error) {\n    var _error$response4, _error$response4$data;\n    console.error('👤 Auth slice: Update profile error:', error);\n    return rejectWithValue(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.detail) || error.message);\n  }\n});\n\n// Initial state with token from localStorage\nconst getInitialState = () => {\n  const token = localStorage.getItem('token');\n  const userStr = localStorage.getItem('user');\n  let user = null;\n  if (userStr) {\n    try {\n      user = JSON.parse(userStr);\n    } catch (error) {\n      console.error('Failed to parse stored user data:', error);\n      localStorage.removeItem('user');\n    }\n  }\n  console.log('🏁 Auth slice initial state:', {\n    hasToken: !!token,\n    hasUser: !!user,\n    isAuthenticated: !!(token && user && authService.isTokenValid())\n  });\n  return {\n    user: user,\n    token: token,\n    isAuthenticated: !!(token && user && authService.isTokenValid()),\n    loading: false,\n    error: null\n  };\n};\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState: getInitialState(),\n  reducers: {\n    setUser: (state, action) => {\n      console.log('📝 Auth slice: Setting user:', action.payload);\n      state.user = action.payload;\n      state.isAuthenticated = !!(state.token && action.payload);\n      if (action.payload) {\n        localStorage.setItem('user', JSON.stringify(action.payload));\n      }\n    },\n    setToken: (state, action) => {\n      console.log('🔑 Auth slice: Setting token');\n      state.token = action.payload;\n      state.isAuthenticated = !!(action.payload && state.user);\n      if (action.payload) {\n        localStorage.setItem('token', action.payload);\n      } else {\n        localStorage.removeItem('token');\n      }\n    },\n    clearError: state => {\n      state.error = null;\n    },\n    resetAuth: state => {\n      console.log('🔄 Auth slice: Resetting auth state');\n      state.user = null;\n      state.token = null;\n      state.isAuthenticated = false;\n      state.loading = false;\n      state.error = null;\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n    }\n  },\n  extraReducers: builder => {\n    builder\n    // Login cases\n    .addCase(loginUser.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(loginUser.fulfilled, (state, action) => {\n      var _action$payload, _action$payload2;\n      console.log('✅ Auth slice: Login fulfilled');\n      state.loading = false;\n      state.error = null;\n      if ((_action$payload = action.payload) !== null && _action$payload !== void 0 && _action$payload.access_token && (_action$payload2 = action.payload) !== null && _action$payload2 !== void 0 && _action$payload2.user) {\n        state.token = action.payload.access_token;\n        state.user = action.payload.user;\n        state.isAuthenticated = true;\n        localStorage.setItem('token', action.payload.access_token);\n        localStorage.setItem('user', JSON.stringify(action.payload.user));\n      }\n    }).addCase(loginUser.rejected, (state, action) => {\n      console.error('❌ Auth slice: Login rejected');\n      state.loading = false;\n      state.error = action.payload || 'Login failed';\n      state.isAuthenticated = false;\n    })\n\n    // Registration cases\n    .addCase(registerUser.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(registerUser.fulfilled, (state, action) => {\n      var _action$payload3, _action$payload4;\n      console.log('✅ Auth slice: Registration fulfilled');\n      state.loading = false;\n      state.error = null;\n      if ((_action$payload3 = action.payload) !== null && _action$payload3 !== void 0 && _action$payload3.access_token && (_action$payload4 = action.payload) !== null && _action$payload4 !== void 0 && _action$payload4.user) {\n        state.token = action.payload.access_token;\n        state.user = action.payload.user;\n        state.isAuthenticated = true;\n        localStorage.setItem('token', action.payload.access_token);\n        localStorage.setItem('user', JSON.stringify(action.payload.user));\n      }\n    }).addCase(registerUser.rejected, (state, action) => {\n      console.error('❌ Auth slice: Registration rejected');\n      state.loading = false;\n      state.error = action.payload || 'Registration failed';\n      state.isAuthenticated = false;\n    })\n\n    // Logout cases\n    .addCase(logoutUser.fulfilled, state => {\n      console.log('✅ Auth slice: Logout fulfilled');\n      state.user = null;\n      state.token = null;\n      state.isAuthenticated = false;\n      state.error = null;\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n    })\n\n    // Get current user cases\n    .addCase(getCurrentUser.pending, state => {\n      state.loading = true;\n    }).addCase(getCurrentUser.fulfilled, (state, action) => {\n      state.loading = false;\n      state.user = action.payload.user;\n      state.isAuthenticated = true;\n      localStorage.setItem('user', JSON.stringify(action.payload.user));\n    }).addCase(getCurrentUser.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n      // Don't log out automatically on getCurrentUser failure\n    })\n\n    // Update profile cases\n    .addCase(updateUserProfile.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(updateUserProfile.fulfilled, (state, action) => {\n      state.loading = false;\n      state.user = action.payload.user;\n      localStorage.setItem('user', JSON.stringify(action.payload.user));\n    }).addCase(updateUserProfile.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport const {\n  setUser,\n  setToken,\n  clearError,\n  resetAuth\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","authService","loginUser","username","password","rejectWithValue","_response$data","_response$data2","console","log","response","login","status","hasToken","data","access_token","hasUser","user","error","_error$response","_error$response$data","detail","message","registerUser","email","_response$data3","_response$data4","register","_error$response2","_error$response2$data","logoutUser","_","dispatch","logout","getCurrentUser","_error$response3","_error$response3$data","updateUserProfile","userData","updateProfile","_error$response4","_error$response4$data","getInitialState","token","localStorage","getItem","userStr","JSON","parse","removeItem","isAuthenticated","isTokenValid","loading","authSlice","name","initialState","reducers","setUser","state","action","payload","setItem","stringify","setToken","clearError","resetAuth","extraReducers","builder","addCase","pending","fulfilled","_action$payload","_action$payload2","rejected","_action$payload3","_action$payload4","actions","reducer"],"sources":["C:/Users/misch/Downloads/absix-workstation-web-main/absix-workstation-web-main/frontend/src/store/authSlice.js"],"sourcesContent":["// src/store/authSlice.js\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport authService from '../services/authService';\n\n// Async thunks for authentication\nexport const loginUser = createAsyncThunk(\n  'auth/login',\n  async ({ username, password }, { rejectWithValue }) => {\n    try {\n      console.log('🔐 Auth slice: Starting login...');\n      \n      const response = await authService.login(username, password);\n      \n      console.log('🔐 Auth slice: Login response:', {\n        status: response.status,\n        hasToken: !!response.data?.access_token,\n        hasUser: !!response.data?.user\n      });\n      \n      return response.data;\n    } catch (error) {\n      console.error('🔐 Auth slice: Login error:', error);\n      return rejectWithValue(error.response?.data?.detail || error.message || 'Login failed');\n    }\n  }\n);\n\nexport const registerUser = createAsyncThunk(\n  'auth/register',\n  async ({ username, password, email }, { rejectWithValue }) => {\n    try {\n      console.log('👤 Auth slice: Starting registration...');\n      \n      const response = await authService.register(username, password, email);\n      \n      console.log('👤 Auth slice: Registration response:', {\n        status: response.status,\n        hasToken: !!response.data?.access_token,\n        hasUser: !!response.data?.user\n      });\n      \n      return response.data;\n    } catch (error) {\n      console.error('👤 Auth slice: Registration error:', error);\n      return rejectWithValue(error.response?.data?.detail || error.message || 'Registration failed');\n    }\n  }\n);\n\nexport const logoutUser = createAsyncThunk(\n  'auth/logout',\n  async (_, { dispatch }) => {\n    try {\n      await authService.logout();\n      console.log('🚪 Auth slice: Logout completed');\n      return null;\n    } catch (error) {\n      console.error('🚪 Auth slice: Logout error:', error);\n      // Continue with logout even if API call fails\n      return null;\n    }\n  }\n);\n\nexport const getCurrentUser = createAsyncThunk(\n  'auth/getCurrentUser',\n  async (_, { rejectWithValue }) => {\n    try {\n      const response = await authService.getCurrentUser();\n      return response.data;\n    } catch (error) {\n      console.error('👤 Auth slice: Get current user error:', error);\n      return rejectWithValue(error.response?.data?.detail || error.message);\n    }\n  }\n);\n\nexport const updateUserProfile = createAsyncThunk(\n  'auth/updateProfile',\n  async (userData, { rejectWithValue }) => {\n    try {\n      const response = await authService.updateProfile(userData);\n      return response.data;\n    } catch (error) {\n      console.error('👤 Auth slice: Update profile error:', error);\n      return rejectWithValue(error.response?.data?.detail || error.message);\n    }\n  }\n);\n\n// Initial state with token from localStorage\nconst getInitialState = () => {\n  const token = localStorage.getItem('token');\n  const userStr = localStorage.getItem('user');\n  let user = null;\n  \n  if (userStr) {\n    try {\n      user = JSON.parse(userStr);\n    } catch (error) {\n      console.error('Failed to parse stored user data:', error);\n      localStorage.removeItem('user');\n    }\n  }\n  \n  console.log('🏁 Auth slice initial state:', {\n    hasToken: !!token,\n    hasUser: !!user,\n    isAuthenticated: !!(token && user && authService.isTokenValid())\n  });\n  \n  return {\n    user: user,\n    token: token,\n    isAuthenticated: !!(token && user && authService.isTokenValid()),\n    loading: false,\n    error: null,\n  };\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState: getInitialState(),\n  reducers: {\n    setUser: (state, action) => {\n      console.log('📝 Auth slice: Setting user:', action.payload);\n      state.user = action.payload;\n      state.isAuthenticated = !!(state.token && action.payload);\n      \n      if (action.payload) {\n        localStorage.setItem('user', JSON.stringify(action.payload));\n      }\n    },\n    \n    setToken: (state, action) => {\n      console.log('🔑 Auth slice: Setting token');\n      state.token = action.payload;\n      state.isAuthenticated = !!(action.payload && state.user);\n      \n      if (action.payload) {\n        localStorage.setItem('token', action.payload);\n      } else {\n        localStorage.removeItem('token');\n      }\n    },\n    \n    clearError: (state) => {\n      state.error = null;\n    },\n    \n    resetAuth: (state) => {\n      console.log('🔄 Auth slice: Resetting auth state');\n      state.user = null;\n      state.token = null;\n      state.isAuthenticated = false;\n      state.loading = false;\n      state.error = null;\n      \n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n    },\n  },\n  \n  extraReducers: (builder) => {\n    builder\n      // Login cases\n      .addCase(loginUser.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(loginUser.fulfilled, (state, action) => {\n        console.log('✅ Auth slice: Login fulfilled');\n        \n        state.loading = false;\n        state.error = null;\n        \n        if (action.payload?.access_token && action.payload?.user) {\n          state.token = action.payload.access_token;\n          state.user = action.payload.user;\n          state.isAuthenticated = true;\n          \n          localStorage.setItem('token', action.payload.access_token);\n          localStorage.setItem('user', JSON.stringify(action.payload.user));\n        }\n      })\n      .addCase(loginUser.rejected, (state, action) => {\n        console.error('❌ Auth slice: Login rejected');\n        state.loading = false;\n        state.error = action.payload || 'Login failed';\n        state.isAuthenticated = false;\n      })\n      \n      // Registration cases\n      .addCase(registerUser.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(registerUser.fulfilled, (state, action) => {\n        console.log('✅ Auth slice: Registration fulfilled');\n        \n        state.loading = false;\n        state.error = null;\n        \n        if (action.payload?.access_token && action.payload?.user) {\n          state.token = action.payload.access_token;\n          state.user = action.payload.user;\n          state.isAuthenticated = true;\n          \n          localStorage.setItem('token', action.payload.access_token);\n          localStorage.setItem('user', JSON.stringify(action.payload.user));\n        }\n      })\n      .addCase(registerUser.rejected, (state, action) => {\n        console.error('❌ Auth slice: Registration rejected');\n        state.loading = false;\n        state.error = action.payload || 'Registration failed';\n        state.isAuthenticated = false;\n      })\n      \n      // Logout cases\n      .addCase(logoutUser.fulfilled, (state) => {\n        console.log('✅ Auth slice: Logout fulfilled');\n        state.user = null;\n        state.token = null;\n        state.isAuthenticated = false;\n        state.error = null;\n        \n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n      })\n      \n      // Get current user cases\n      .addCase(getCurrentUser.pending, (state) => {\n        state.loading = true;\n      })\n      .addCase(getCurrentUser.fulfilled, (state, action) => {\n        state.loading = false;\n        state.user = action.payload.user;\n        state.isAuthenticated = true;\n        \n        localStorage.setItem('user', JSON.stringify(action.payload.user));\n      })\n      .addCase(getCurrentUser.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload;\n        // Don't log out automatically on getCurrentUser failure\n      })\n      \n      // Update profile cases\n      .addCase(updateUserProfile.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(updateUserProfile.fulfilled, (state, action) => {\n        state.loading = false;\n        state.user = action.payload.user;\n        \n        localStorage.setItem('user', JSON.stringify(action.payload.user));\n      })\n      .addCase(updateUserProfile.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload;\n      });\n  },\n});\n\nexport const { setUser, setToken, clearError, resetAuth } = authSlice.actions;\n\nexport default authSlice.reducer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}