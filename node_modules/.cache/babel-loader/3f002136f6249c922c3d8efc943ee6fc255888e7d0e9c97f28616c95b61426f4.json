{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\misch\\\\Downloads\\\\absix-workstation-web-main\\\\absix-workstation-web-main\\\\frontend\\\\src\\\\components\\\\challenges\\\\Challenge1.jsx\",\n  _s = $RefreshSig$();\n// src/challenges/Challenge1.jsx\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { Box, Typography, Paper, Button, Alert, Grid, Chip, Card, CardContent, LinearProgress, Dialog, DialogTitle, DialogContent, DialogActions } from '@mui/material';\nimport { Usb, UsbOff, Search, PowerSettingsNew, PowerOff, Home, Warning, PlayArrow, ReadMore, CheckCircle, SkipNext, Refresh, RestartAlt, Clear } from '@mui/icons-material';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Challenge1 = () => {\n  _s();\n  // WebSerial state\n  const [port, setPort] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const [connectionStartTime, setConnectionStartTime] = useState(null);\n  const [uptime, setUptime] = useState('00:00:00');\n\n  // Challenge state\n  const [currentTask, setCurrentTask] = useState(0);\n  const [tasks, setTasks] = useState([]);\n  const [taskResults, setTaskResults] = useState([]);\n  const [currentAngles, setCurrentAngles] = useState([0, 0, 0]);\n  const [targetAngles, setTargetAngles] = useState([0, 0, 0]);\n  const [errors, setErrors] = useState([0, 0, 0]);\n  const [maxError, setMaxError] = useState(0);\n\n  // UI state\n  const [showResults, setShowResults] = useState(false);\n  const [showFinalResults, setShowFinalResults] = useState(false);\n  const [logs, setLogs] = useState([]);\n  const [motorIndex, setMotorIndex] = useState(0);\n  const [challengeStarted, setChallengeStarted] = useState(false);\n  const [webSerialSupported, setWebSerialSupported] = useState(true);\n\n  // Refs\n  const canvasRef = useRef(null);\n  const readerRef = useRef(null);\n  const writerRef = useRef(null);\n  const dataBufferRef = useRef('');\n  const uptimeIntervalRef = useRef(null);\n  const totalTasks = 3;\n\n  // Check WebSerial support on mount\n  useEffect(() => {\n    if (!('serial' in navigator)) {\n      setWebSerialSupported(false);\n    }\n    generateTasks();\n    startCurrentTask();\n  }, []);\n\n  // Update canvas when angles change\n  useEffect(() => {\n    drawRobot();\n    updateErrorDisplay();\n  }, [currentAngles, targetAngles, currentTask]);\n\n  // Uptime counter\n  useEffect(() => {\n    if (isConnected && connectionStartTime) {\n      uptimeIntervalRef.current = setInterval(() => {\n        const elapsed = Date.now() - connectionStartTime;\n        const hours = Math.floor(elapsed / 3600000);\n        const minutes = Math.floor(elapsed % 3600000 / 60000);\n        const seconds = Math.floor(elapsed % 60000 / 1000);\n        setUptime(`${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`);\n      }, 1000);\n    } else {\n      if (uptimeIntervalRef.current) {\n        clearInterval(uptimeIntervalRef.current);\n        setUptime('00:00:00');\n      }\n    }\n    return () => {\n      if (uptimeIntervalRef.current) {\n        clearInterval(uptimeIntervalRef.current);\n      }\n    };\n  }, [isConnected, connectionStartTime]);\n  const generateTasks = useCallback(() => {\n    const taskTypes = ['absolute', 'relative', 'absolute'];\n    const newTasks = [];\n    for (let i = 0; i < 3; i++) {\n      const task = {\n        type: taskTypes[i],\n        targetAngles: generateRandomAngles(taskTypes[i]),\n        initialAngles: i === 0 ? [0, 0, 0] : [...currentAngles]\n      };\n      newTasks.push(task);\n    }\n    setTasks(newTasks);\n  }, [currentAngles]);\n  const generateRandomAngles = type => {\n    if (type === 'absolute') {\n      return [Math.round((Math.random() * 300 - 150) / 5) * 5, Math.round((Math.random() * 180 - 90) / 5) * 5, Math.round((Math.random() * 180 - 90) / 5) * 5];\n    } else {\n      return [Math.round((Math.random() * 120 - 60) / 5) * 5, Math.round((Math.random() * 120 - 60) / 5) * 5, Math.round((Math.random() * 120 - 60) / 5) * 5];\n    }\n  };\n  const logMessage = useCallback((message, type = 'info') => {\n    const timestamp = new Date().toLocaleTimeString();\n    const newLog = {\n      id: Date.now(),\n      timestamp,\n      message,\n      type\n    };\n    setLogs(prevLogs => {\n      const updatedLogs = [...prevLogs, newLog];\n      return updatedLogs.slice(-100);\n    });\n  }, []);\n  const sendCommand = useCallback(async command => {\n    if (!isConnected || !writerRef.current) {\n      logMessage('Not connected to ESP32', 'error');\n      return;\n    }\n    try {\n      const data = new TextEncoder().encode(command + ';');\n      await writerRef.current.write(data);\n      logMessage(`Sent: ${command}`, 'info');\n    } catch (error) {\n      logMessage(`Send error: ${error.message}`, 'error');\n    }\n  }, [isConnected, logMessage]);\n  const processSerialData = useCallback(data => {\n    logMessage(`Received: ${data}`, 'info');\n    if (data.startsWith('REL_ANGLE:')) {\n      const angleValue = parseFloat(data.substring(10));\n      const angleDeg = angleValue * 180 / Math.PI;\n      logMessage(`Relative angle: ${angleValue} rad (${angleDeg.toFixed(1)}Â°)`, 'info');\n      setMotorIndex(prevIndex => {\n        const newIndex = prevIndex < 3 ? prevIndex : 0;\n        setCurrentAngles(prevAngles => {\n          const newAngles = [...prevAngles];\n          newAngles[newIndex] = angleDeg;\n          return newAngles;\n        });\n        return newIndex + 1;\n      });\n    }\n\n    // Handle other serial data types...\n    if (data === 'PING_OK') {\n      logMessage('Motor ping successful', 'success');\n    }\n    if (data === 'ESP32_DYNAMIXEL_CONTROLLER_READY') {\n      logMessage('ESP32 controller is ready!', 'success');\n    }\n  }, [logMessage]);\n  const readLoop = useCallback(async () => {\n    try {\n      while (port && port.readable && readerRef.current) {\n        const {\n          value,\n          done\n        } = await readerRef.current.read();\n        if (done) break;\n        const text = new TextDecoder().decode(value);\n        dataBufferRef.current += text;\n        const lines = dataBufferRef.current.split('\\n');\n        dataBufferRef.current = lines.pop() || '';\n        for (const line of lines) {\n          if (line.trim()) {\n            processSerialData(line.trim());\n          }\n        }\n      }\n    } catch (error) {\n      if (isConnected) {\n        logMessage(`Read error: ${error.message}`, 'error');\n      }\n    }\n  }, [port, isConnected, processSerialData, logMessage]);\n  const connect = async () => {\n    try {\n      const selectedPort = await navigator.serial.requestPort();\n      await selectedPort.open({\n        baudRate: 115200\n      });\n      setPort(selectedPort);\n      setIsConnected(true);\n      setConnectionStartTime(Date.now());\n      readerRef.current = selectedPort.readable.getReader();\n      writerRef.current = selectedPort.writable.getWriter();\n      logMessage('Connected to ESP32 successfully', 'success');\n      readLoop();\n    } catch (error) {\n      logMessage(`Connection failed: ${error.message}`, 'error');\n    }\n  };\n  const disconnect = async () => {\n    try {\n      if (readerRef.current) {\n        await readerRef.current.cancel();\n        await readerRef.current.releaseLock();\n      }\n      if (writerRef.current) {\n        await writerRef.current.releaseLock();\n      }\n      if (port) {\n        await port.close();\n      }\n      setPort(null);\n      setIsConnected(false);\n      setConnectionStartTime(null);\n      readerRef.current = null;\n      writerRef.current = null;\n      logMessage('Disconnected from ESP32', 'warning');\n    } catch (error) {\n      logMessage(`Disconnect error: ${error.message}`, 'error');\n    }\n  };\n  const startChallenge = async () => {\n    if (!isConnected) {\n      logMessage('Connect to ESP32 first!', 'error');\n      return;\n    }\n    await sendCommand('DISABLE_TORQUE:1');\n    await sendCommand('DISABLE_TORQUE:2');\n    await sendCommand('DISABLE_TORQUE:3');\n    setChallengeStarted(true);\n    logMessage('Challenge started! Torque disabled - you can now manually move the robot joints.', 'success');\n  };\n  const completeTask = async () => {\n    if (!isConnected) {\n      logMessage('Connect to ESP32 first!', 'error');\n      return;\n    }\n    logMessage('Reading final positions...', 'info');\n    for (let id = 1; id <= 3; id++) {\n      await sendCommand(`GET_REL_ANGLE:${id}`);\n      await new Promise(resolve => setTimeout(resolve, 100));\n    }\n    setTimeout(() => {\n      const task = tasks[currentTask];\n      let actualTarget = [...task.targetAngles];\n      if (task.type === 'relative') {\n        actualTarget = task.initialAngles.map((initial, i) => initial + task.targetAngles[i]);\n      }\n      const taskErrors = actualTarget.map((target, i) => Math.abs(currentAngles[i] - target));\n      const taskMaxError = Math.max(...taskErrors);\n      const avgError = taskErrors.reduce((a, b) => a + b, 0) / taskErrors.length;\n      let score = 100;\n      if (taskMaxError > 5) score = Math.max(0, 100 - (taskMaxError - 5) * 10);else if (taskMaxError > 2) score = Math.max(90, 100 - (taskMaxError - 2) * 3);\n      const result = {\n        score: Math.round(score),\n        maxError: taskMaxError.toFixed(1),\n        avgError: avgError.toFixed(1),\n        errors: taskErrors.map(e => e.toFixed(1))\n      };\n      setTaskResults(prev => [...prev, result]);\n      setShowResults(true);\n      logMessage(`Task ${currentTask + 1} completed! Score: ${result.score}/100`, result.score >= 90 ? 'success' : result.score >= 70 ? 'info' : 'warning');\n    }, 2000);\n  };\n  const startCurrentTask = useCallback(() => {\n    if (tasks.length === 0) return;\n    const task = tasks[currentTask];\n    if (!task) return;\n    setTargetAngles([...task.targetAngles]);\n    setShowResults(false);\n    setShowFinalResults(false);\n    logMessage(`Started ${task.type} positioning task ${currentTask + 1}`, 'info');\n  }, [tasks, currentTask, logMessage]);\n  const updateErrorDisplay = useCallback(() => {\n    if (tasks.length === 0 || !tasks[currentTask]) return;\n    const task = tasks[currentTask];\n    let actualTarget = [...task.targetAngles];\n    if (task.type === 'relative') {\n      actualTarget = task.initialAngles.map((initial, i) => initial + task.targetAngles[i]);\n    }\n    const newErrors = actualTarget.map((target, i) => Math.abs(currentAngles[i] - target));\n    const newMaxError = Math.max(...newErrors);\n    setErrors(newErrors);\n    setMaxError(newMaxError);\n  }, [tasks, currentTask, currentAngles]);\n  const drawRobot = useCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    const width = canvas.width = canvas.offsetWidth;\n    const height = canvas.height = canvas.offsetHeight;\n    ctx.clearRect(0, 0, width, height);\n    const baseX = width / 2;\n    const baseY = height - 80;\n    const link1Length = Math.min(width, height) * 0.15;\n    const link2Length = Math.min(width, height) * 0.12;\n    const link3Length = Math.min(width, height) * 0.10;\n    const angle1 = currentAngles[0] * Math.PI / 180;\n    const angle2 = currentAngles[1] * Math.PI / 180;\n    const angle3 = currentAngles[2] * Math.PI / 180;\n    const joint1X = baseX + link1Length * Math.cos(angle1 - Math.PI / 2);\n    const joint1Y = baseY + link1Length * Math.sin(angle1 - Math.PI / 2);\n    const joint2X = joint1X + link2Length * Math.cos(angle1 + angle2 - Math.PI / 2);\n    const joint2Y = joint1Y + link2Length * Math.sin(angle1 + angle2 - Math.PI / 2);\n    const joint3X = joint2X + link3Length * Math.cos(angle1 + angle2 + angle3 - Math.PI / 2);\n    const joint3Y = joint2Y + link3Length * Math.sin(angle1 + angle2 + angle3 - Math.PI / 2);\n\n    // Draw links\n    ctx.strokeStyle = '#0cc0df';\n    ctx.lineWidth = 8;\n    ctx.lineCap = 'round';\n    ctx.beginPath();\n    ctx.moveTo(baseX, baseY);\n    ctx.lineTo(joint1X, joint1Y);\n    ctx.stroke();\n    ctx.strokeStyle = '#007acc';\n    ctx.beginPath();\n    ctx.moveTo(joint1X, joint1Y);\n    ctx.lineTo(joint2X, joint2Y);\n    ctx.stroke();\n    ctx.strokeStyle = '#ffd60a';\n    ctx.beginPath();\n    ctx.moveTo(joint2X, joint2Y);\n    ctx.lineTo(joint3X, joint3Y);\n    ctx.stroke();\n\n    // Draw joints\n    const jointPositions = [[baseX, baseY, '#ef4444'], [joint1X, joint1Y, '#f59e0b'], [joint2X, joint2Y, '#10b981'], [joint3X, joint3Y, '#8b5cf6']];\n    jointPositions.forEach(([x, y, color]) => {\n      ctx.fillStyle = color;\n      ctx.beginPath();\n      ctx.arc(x, y, 8, 0, 2 * Math.PI);\n      ctx.fill();\n      ctx.strokeStyle = 'white';\n      ctx.lineWidth = 2;\n      ctx.stroke();\n    });\n    ctx.fillStyle = '#374151';\n    ctx.fillRect(baseX - 20, baseY, 40, 25);\n    ctx.fillStyle = 'white';\n    ctx.font = '14px Arial';\n    ctx.fillText(`Î¸1: ${currentAngles[0].toFixed(1)}Â°`, 10, 25);\n    ctx.fillText(`Î¸2: ${currentAngles[1].toFixed(1)}Â°`, 10, 45);\n    ctx.fillText(`Î¸3: ${currentAngles[2].toFixed(1)}Â°`, 10, 65);\n  }, [currentAngles]);\n  const getErrorColor = error => {\n    if (error <= 2) return '#059669';\n    if (error <= 5) return '#d97706';\n    return '#dc2626';\n  };\n  const getLogColor = type => {\n    switch (type) {\n      case 'success':\n        return '#34d399';\n      case 'warning':\n        return '#fbbf24';\n      case 'error':\n        return '#f87171';\n      default:\n        return '#60a5fa';\n    }\n  };\n  const nextTask = () => {\n    const newTaskIndex = currentTask + 1;\n    if (newTaskIndex >= totalTasks) {\n      setShowFinalResults(true);\n      setShowResults(false);\n    } else {\n      setCurrentTask(newTaskIndex);\n      startCurrentTask();\n    }\n  };\n  const clearLog = () => {\n    setLogs([{\n      id: Date.now(),\n      timestamp: new Date().toLocaleTimeString(),\n      message: 'Challenge 1 initialized. Connect to ESP32 to begin.',\n      type: 'info'\n    }]);\n  };\n  const currentTaskData = tasks[currentTask];\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [!webSerialSupported && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"warning\",\n      sx: {\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"\\u26A0\\uFE0F WebSerial API not supported!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 11\n      }, this), \"This interface requires a browser that supports WebSerial API (Chrome 89+, Edge 89+).\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        mb: 3,\n        background: 'linear-gradient(135deg, #0cc0df, #007acc)',\n        color: 'white'\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"\\uD83D\\uDCD6 Mission Background\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          sx: {\n            mb: 2\n          },\n          children: \"You are a fresh recruit in the World Space Agency and you have been identified as the roboticist who can embark on space missions and program the onboard robot for various purposes during the mission.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Your Task:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 13\n          }, this), \" Connect to the ESP32 controller and manually move the robot joints to match the specified target angles. You'll work with both absolute and relative positioning to master robot control.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            bgcolor: 'rgba(0, 8, 20, 0.9)',\n            border: '1px solid rgba(12, 192, 223, 0.3)',\n            borderRadius: '16px'\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              sx: {\n                color: '#ffd60a',\n                mb: 2\n              },\n              children: \"\\uD83D\\uDD0C ESP32 Connection\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 511,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mb: 3\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  gap: 2,\n                  mb: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(Chip, {\n                  icon: isConnected ? /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"\\uD83D\\uDFE2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 518,\n                    columnNumber: 41\n                  }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"\\uD83D\\uDD34\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 518,\n                    columnNumber: 59\n                  }, this),\n                  label: isConnected ? 'Connected' : 'Disconnected',\n                  color: isConnected ? 'success' : 'default',\n                  sx: {\n                    fontWeight: 'bold'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 517,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"rgba(168, 218, 220, 0.8)\",\n                  children: [\"Uptime: \", uptime]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 523,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 516,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  gap: 1,\n                  flexWrap: 'wrap',\n                  mb: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  startIcon: /*#__PURE__*/_jsxDEV(Usb, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 531,\n                    columnNumber: 32\n                  }, this),\n                  onClick: connect,\n                  disabled: isConnected || !webSerialSupported,\n                  sx: {\n                    background: 'linear-gradient(45deg, #28a745, #20c997)',\n                    '&:hover': {\n                      background: 'linear-gradient(45deg, #20c997, #28a745)'\n                    }\n                  },\n                  children: \"Connect ESP32\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 529,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  startIcon: /*#__PURE__*/_jsxDEV(UsbOff, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 543,\n                    columnNumber: 32\n                  }, this),\n                  onClick: disconnect,\n                  disabled: !isConnected,\n                  color: \"error\",\n                  children: \"Disconnect\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 541,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 528,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              sx: {\n                color: '#ffd60a',\n                mb: 2\n              },\n              children: \"\\uD83C\\uDFAF Challenge Controls\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 553,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                gap: 1,\n                flexWrap: 'wrap'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                startIcon: /*#__PURE__*/_jsxDEV(PlayArrow, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 559,\n                  columnNumber: 30\n                }, this),\n                onClick: startChallenge,\n                disabled: !isConnected || challengeStarted,\n                sx: {\n                  background: 'linear-gradient(45deg, #28a745, #20c997)',\n                  '&:hover': {\n                    background: 'linear-gradient(45deg, #20c997, #28a745)'\n                  }\n                },\n                children: \"Start Challenge\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 557,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                startIcon: /*#__PURE__*/_jsxDEV(CheckCircle, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 571,\n                  columnNumber: 30\n                }, this),\n                onClick: completeTask,\n                disabled: !challengeStarted,\n                sx: {\n                  background: 'linear-gradient(45deg, #28a745, #20c997)',\n                  '&:hover': {\n                    background: 'linear-gradient(45deg, #20c997, #28a745)'\n                  }\n                },\n                children: \"Complete Task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 569,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 556,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            bgcolor: 'rgba(0, 8, 20, 0.9)',\n            border: '1px solid rgba(12, 192, 223, 0.3)',\n            borderRadius: '16px'\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              sx: {\n                color: '#ffd60a',\n                mb: 2\n              },\n              children: \"\\uD83D\\uDCCB Current Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 594,\n              columnNumber: 15\n            }, this), currentTaskData && /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                p: 2,\n                bgcolor: 'rgba(12, 192, 223, 0.1)',\n                borderRadius: 2,\n                border: '1px solid rgba(12, 192, 223, 0.3)',\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                sx: {\n                  color: '#0cc0df',\n                  mb: 1\n                },\n                children: [\"Task \", currentTask + 1, \": \", currentTaskData.type === 'absolute' ? 'Absolute' : 'Relative', \" Positioning\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 606,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  p: 1.5,\n                  bgcolor: 'rgba(255, 193, 7, 0.1)',\n                  borderRadius: 1,\n                  border: '1px solid rgba(255, 193, 7, 0.3)',\n                  mb: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  sx: {\n                    color: '#ffc107',\n                    fontWeight: 'bold',\n                    mb: 0.5\n                  },\n                  children: \"\\uD83C\\uDFAF Target Angles:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 617,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"white\",\n                  sx: {\n                    fontFamily: 'monospace'\n                  },\n                  children: [\"Joint 1: \", targetAngles[0], \"\\xB0, Joint 2: \", targetAngles[1], \"\\xB0, Joint 3: \", targetAngles[2], \"\\xB0\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 620,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 610,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  p: 1.5,\n                  bgcolor: 'rgba(16, 185, 129, 0.1)',\n                  borderRadius: 1,\n                  border: '1px solid rgba(16, 185, 129, 0.3)',\n                  mb: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  sx: {\n                    color: '#10b981',\n                    fontWeight: 'bold',\n                    mb: 0.5\n                  },\n                  children: \"\\uD83D\\uDCCF Current Angles:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 632,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"white\",\n                  sx: {\n                    fontFamily: 'monospace'\n                  },\n                  children: [\"Joint 1: \", currentAngles[0].toFixed(1), \"\\xB0, Joint 2: \", currentAngles[1].toFixed(1), \"\\xB0, Joint 3: \", currentAngles[2].toFixed(1), \"\\xB0\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 635,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 625,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n                variant: \"determinate\",\n                value: currentTask / totalTasks * 100,\n                sx: {\n                  height: 8,\n                  borderRadius: 4,\n                  bgcolor: 'rgba(255, 255, 255, 0.1)',\n                  '& .MuiLinearProgress-bar': {\n                    background: 'linear-gradient(90deg, #0cc0df, #007acc)'\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 640,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"rgba(168, 218, 220, 0.9)\",\n                sx: {\n                  mt: 1\n                },\n                children: [\"Task \", currentTask + 1, \" of \", totalTasks]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 652,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 599,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              sx: {\n                color: '#ffd60a',\n                mb: 2\n              },\n              children: \"\\uD83D\\uDCCA Task Accuracy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 658,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                p: 2,\n                bgcolor: 'rgba(255, 255, 255, 0.05)',\n                borderRadius: 1,\n                fontFamily: 'monospace',\n                fontSize: '0.875rem'\n              },\n              children: [errors.map((error, index) => /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  mb: 0.5\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Joint \", index + 1, \" Error:\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 670,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    color: getErrorColor(error),\n                    fontWeight: 'bold'\n                  },\n                  children: [error.toFixed(1), \"\\xB0\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 671,\n                  columnNumber: 21\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 669,\n                columnNumber: 19\n              }, this)), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  mt: 1,\n                  pt: 1,\n                  borderTop: '1px solid rgba(255,255,255,0.1)'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    fontWeight: 'bold'\n                  },\n                  children: \"Max Error:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 677,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    color: getErrorColor(maxError),\n                    fontWeight: 'bold'\n                  },\n                  children: [maxError.toFixed(1), \"\\xB0\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 678,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 676,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 661,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 593,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 588,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 587,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        mt: 3,\n        bgcolor: 'rgba(0, 8, 20, 0.9)',\n        border: '1px solid rgba(12, 192, 223, 0.3)',\n        borderRadius: '16px'\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            color: '#ffd60a',\n            mb: 2\n          },\n          children: \"\\uD83E\\uDDBE Robot Arm Visualization\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 696,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            width: '100%',\n            height: 400,\n            bgcolor: 'rgba(248, 250, 252, 0.05)',\n            border: '2px solid rgba(229, 231, 235, 0.1)',\n            borderRadius: 2,\n            position: 'relative'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n            ref: canvasRef,\n            style: {\n              width: '100%',\n              height: '100%',\n              borderRadius: '8px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 707,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 699,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 695,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 689,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        mt: 3,\n        bgcolor: 'rgba(0, 8, 20, 0.9)',\n        border: '1px solid rgba(12, 192, 223, 0.3)',\n        borderRadius: '16px'\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            sx: {\n              color: '#ffd60a'\n            },\n            children: \"\\uD83D\\uDCE1 Communication Log\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 728,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            startIcon: /*#__PURE__*/_jsxDEV(Clear, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 732,\n              columnNumber: 26\n            }, this),\n            onClick: clearLog,\n            size: \"small\",\n            sx: {\n              color: 'rgba(168, 218, 220, 0.8)'\n            },\n            children: \"Clear Log\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 731,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 727,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            bgcolor: '#1f2937',\n            borderRadius: 1,\n            p: 2,\n            maxHeight: 300,\n            overflowY: 'auto',\n            fontFamily: 'monospace',\n            fontSize: '0.875rem'\n          },\n          children: logs.map(log => /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 0.5,\n              wordWrap: 'break-word'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: '#9ca3af',\n                fontWeight: 500\n              },\n              children: [\"[\", log.timestamp, \"]\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 751,\n              columnNumber: 17\n            }, this), ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: getLogColor(log.type)\n              },\n              children: log.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 754,\n              columnNumber: 17\n            }, this)]\n          }, log.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 750,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 740,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 726,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 720,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: showResults,\n      onClose: () => setShowResults(false),\n      maxWidth: \"md\",\n      fullWidth: true,\n      PaperProps: {\n        sx: {\n          bgcolor: 'rgba(0, 8, 20, 0.95)',\n          backdropFilter: 'blur(20px)',\n          border: '1px solid rgba(12, 192, 223, 0.3)',\n          borderRadius: '16px',\n          color: 'white'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        sx: {\n          bgcolor: 'rgba(12, 192, 223, 0.1)',\n          borderBottom: '1px solid rgba(12, 192, 223, 0.3)'\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          sx: {\n            color: '#0cc0df',\n            fontWeight: 'bold'\n          },\n          children: [\"\\uD83D\\uDCCA Task \", currentTask + 1, \" Results\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 783,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 779,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        sx: {\n          p: 3\n        },\n        children: taskResults[currentTask] && /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              textAlign: 'center',\n              mb: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h3\",\n              sx: {\n                fontWeight: 'bold',\n                color: taskResults[currentTask].score >= 90 ? '#059669' : taskResults[currentTask].score >= 70 ? '#d97706' : '#dc2626'\n              },\n              children: [taskResults[currentTask].score, \"/100\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 791,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              color: \"rgba(168, 218, 220, 0.9)\",\n              children: taskResults[currentTask].score >= 90 ? 'ð Excellent! Perfect positioning!' : taskResults[currentTask].score >= 70 ? 'ð Good job! Close to target.' : 'ð Keep practicing! Try to get closer to the target.'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 801,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 790,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"rgba(168, 218, 220, 0.8)\",\n                children: \"Maximum Error\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 810,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                color: \"white\",\n                children: [taskResults[currentTask].maxError, \"\\xB0\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 813,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 809,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"rgba(168, 218, 220, 0.8)\",\n                children: \"Average Error\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 818,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                color: \"white\",\n                children: [taskResults[currentTask].avgError, \"\\xB0\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 821,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 817,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 808,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 789,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 787,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        sx: {\n          p: 3,\n          borderTop: '1px solid rgba(12, 192, 223, 0.3)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setShowResults(false),\n          startIcon: /*#__PURE__*/_jsxDEV(Refresh, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 832,\n            columnNumber: 24\n          }, this),\n          sx: {\n            color: 'rgba(168, 218, 220, 0.8)'\n          },\n          children: \"Retry Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 830,\n          columnNumber: 11\n        }, this), currentTask < totalTasks - 1 && /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: nextTask,\n          startIcon: /*#__PURE__*/_jsxDEV(SkipNext, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 841,\n            columnNumber: 26\n          }, this),\n          sx: {\n            background: 'linear-gradient(45deg, #0cc0df, #007acc)',\n            '&:hover': {\n              background: 'linear-gradient(45deg, #007acc, #0cc0df)'\n            }\n          },\n          children: \"Next Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 838,\n          columnNumber: 13\n        }, this), currentTask === totalTasks - 1 && /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: () => setShowFinalResults(true),\n          startIcon: /*#__PURE__*/_jsxDEV(CheckCircle, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 854,\n            columnNumber: 26\n          }, this),\n          sx: {\n            background: 'linear-gradient(45deg, #28a745, #20c997)',\n            '&:hover': {\n              background: 'linear-gradient(45deg, #20c997, #28a745)'\n            }\n          },\n          children: \"View Final Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 851,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 829,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 764,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: showFinalResults,\n      onClose: () => setShowFinalResults(false),\n      maxWidth: \"md\",\n      fullWidth: true,\n      PaperProps: {\n        sx: {\n          bgcolor: 'rgba(0, 8, 20, 0.95)',\n          backdropFilter: 'blur(20px)',\n          border: '1px solid rgba(12, 192, 223, 0.3)',\n          borderRadius: '16px',\n          color: 'white'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        sx: {\n          bgcolor: 'rgba(12, 192, 223, 0.1)',\n          borderBottom: '1px solid rgba(12, 192, 223, 0.3)'\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          sx: {\n            color: '#0cc0df',\n            fontWeight: 'bold'\n          },\n          children: \"\\uD83C\\uDFC6 Challenge Complete!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 886,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 882,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        sx: {\n          p: 3\n        },\n        children: taskResults.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              textAlign: 'center',\n              mb: 3\n            },\n            children: (() => {\n              const totalScore = taskResults.reduce((sum, result) => sum + result.score, 0);\n              const avgScore = Math.round(totalScore / totalTasks);\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h2\",\n                  sx: {\n                    fontWeight: 'bold',\n                    color: avgScore >= 90 ? '#059669' : avgScore >= 70 ? '#d97706' : '#dc2626'\n                  },\n                  children: [totalScore, \"/\", totalTasks * 100]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 899,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  color: \"rgba(168, 218, 220, 0.9)\",\n                  children: avgScore >= 90 ? 'ð Outstanding! You\\'re ready for space missions!' : avgScore >= 70 ? 'â­ Well done! Good robot control skills.' : 'ð Keep practicing! Robot control takes time to master.'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 908,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true);\n            })()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 893,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            sx: {\n              color: '#ffd60a',\n              mb: 2\n            },\n            children: \"Task Breakdown:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 918,\n            columnNumber: 15\n          }, this), taskResults.map((result, i) => /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 2,\n              p: 2,\n              bgcolor: 'rgba(255, 255, 255, 0.05)',\n              borderRadius: 1\n            },\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 3,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  color: \"white\",\n                  fontWeight: \"bold\",\n                  children: [\"Task \", i + 1, \":\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 925,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 924,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 3,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  sx: {\n                    color: result.score >= 90 ? '#059669' : result.score >= 70 ? '#d97706' : '#dc2626',\n                    fontWeight: 'bold'\n                  },\n                  children: [result.score, \"/100\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 930,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 929,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"rgba(168, 218, 220, 0.8)\",\n                  children: [\"Max Error: \", result.maxError, \"\\xB0\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 938,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 937,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 923,\n              columnNumber: 19\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 922,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 892,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 890,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        sx: {\n          p: 3,\n          borderTop: '1px solid rgba(12, 192, 223, 0.3)'\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: () => {\n            setCurrentTask(0);\n            setTaskResults([]);\n            setChallengeStarted(false);\n            setShowFinalResults(false);\n            generateTasks();\n          },\n          startIcon: /*#__PURE__*/_jsxDEV(RestartAlt, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 958,\n            columnNumber: 24\n          }, this),\n          sx: {\n            background: 'linear-gradient(45deg, #0cc0df, #007acc)',\n            '&:hover': {\n              background: 'linear-gradient(45deg, #007acc, #0cc0df)'\n            }\n          },\n          children: \"Restart Challenge\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 949,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 948,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 867,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 476,\n    columnNumber: 5\n  }, this);\n};\n_s(Challenge1, \"Ponw2ODFD72WEzjV+ixGKEd4mlY=\");\n_c = Challenge1;\nexport default Challenge1;\nvar _c;\n$RefreshReg$(_c, \"Challenge1\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","Box","Typography","Paper","Button","Alert","Grid","Chip","Card","CardContent","LinearProgress","Dialog","DialogTitle","DialogContent","DialogActions","Usb","UsbOff","Search","PowerSettingsNew","PowerOff","Home","Warning","PlayArrow","ReadMore","CheckCircle","SkipNext","Refresh","RestartAlt","Clear","jsxDEV","_jsxDEV","Fragment","_Fragment","Challenge1","_s","port","setPort","isConnected","setIsConnected","connectionStartTime","setConnectionStartTime","uptime","setUptime","currentTask","setCurrentTask","tasks","setTasks","taskResults","setTaskResults","currentAngles","setCurrentAngles","targetAngles","setTargetAngles","errors","setErrors","maxError","setMaxError","showResults","setShowResults","showFinalResults","setShowFinalResults","logs","setLogs","motorIndex","setMotorIndex","challengeStarted","setChallengeStarted","webSerialSupported","setWebSerialSupported","canvasRef","readerRef","writerRef","dataBufferRef","uptimeIntervalRef","totalTasks","navigator","generateTasks","startCurrentTask","drawRobot","updateErrorDisplay","current","setInterval","elapsed","Date","now","hours","Math","floor","minutes","seconds","toString","padStart","clearInterval","taskTypes","newTasks","i","task","type","generateRandomAngles","initialAngles","push","round","random","logMessage","message","timestamp","toLocaleTimeString","newLog","id","prevLogs","updatedLogs","slice","sendCommand","command","data","TextEncoder","encode","write","error","processSerialData","startsWith","angleValue","parseFloat","substring","angleDeg","PI","toFixed","prevIndex","newIndex","prevAngles","newAngles","readLoop","readable","value","done","read","text","TextDecoder","decode","lines","split","pop","line","trim","connect","selectedPort","serial","requestPort","open","baudRate","getReader","writable","getWriter","disconnect","cancel","releaseLock","close","startChallenge","completeTask","Promise","resolve","setTimeout","actualTarget","map","initial","taskErrors","target","abs","taskMaxError","max","avgError","reduce","a","b","length","score","result","e","prev","newErrors","newMaxError","canvas","ctx","getContext","width","offsetWidth","height","offsetHeight","clearRect","baseX","baseY","link1Length","min","link2Length","link3Length","angle1","angle2","angle3","joint1X","cos","joint1Y","sin","joint2X","joint2Y","joint3X","joint3Y","strokeStyle","lineWidth","lineCap","beginPath","moveTo","lineTo","stroke","jointPositions","forEach","x","y","color","fillStyle","arc","fill","fillRect","font","fillText","getErrorColor","getLogColor","nextTask","newTaskIndex","clearLog","currentTaskData","children","severity","sx","mb","fileName","_jsxFileName","lineNumber","columnNumber","background","variant","gutterBottom","container","spacing","item","xs","md","bgcolor","border","borderRadius","display","alignItems","gap","icon","label","fontWeight","flexWrap","startIcon","onClick","disabled","p","fontFamily","mt","fontSize","index","justifyContent","style","pt","borderTop","position","ref","size","maxHeight","overflowY","log","wordWrap","onClose","maxWidth","fullWidth","PaperProps","backdropFilter","borderBottom","textAlign","totalScore","sum","avgScore","_c","$RefreshReg$"],"sources":["C:/Users/misch/Downloads/absix-workstation-web-main/absix-workstation-web-main/frontend/src/components/challenges/Challenge1.jsx"],"sourcesContent":["// src/challenges/Challenge1.jsx\r\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Paper,\r\n  Button,\r\n  Alert,\r\n  Grid,\r\n  Chip,\r\n  Card,\r\n  CardContent,\r\n  LinearProgress,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions\r\n} from '@mui/material';\r\nimport {\r\n  Usb,\r\n  UsbOff,\r\n  Search,\r\n  PowerSettingsNew,\r\n  PowerOff,\r\n  Home,\r\n  Warning,\r\n  PlayArrow,\r\n  ReadMore,\r\n  CheckCircle,\r\n  SkipNext,\r\n  Refresh,\r\n  RestartAlt,\r\n  Clear\r\n} from '@mui/icons-material';\r\n\r\nconst Challenge1 = () => {\r\n  // WebSerial state\r\n  const [port, setPort] = useState(null);\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const [connectionStartTime, setConnectionStartTime] = useState(null);\r\n  const [uptime, setUptime] = useState('00:00:00');\r\n  \r\n  // Challenge state\r\n  const [currentTask, setCurrentTask] = useState(0);\r\n  const [tasks, setTasks] = useState([]);\r\n  const [taskResults, setTaskResults] = useState([]);\r\n  const [currentAngles, setCurrentAngles] = useState([0, 0, 0]);\r\n  const [targetAngles, setTargetAngles] = useState([0, 0, 0]);\r\n  const [errors, setErrors] = useState([0, 0, 0]);\r\n  const [maxError, setMaxError] = useState(0);\r\n  \r\n  // UI state\r\n  const [showResults, setShowResults] = useState(false);\r\n  const [showFinalResults, setShowFinalResults] = useState(false);\r\n  const [logs, setLogs] = useState([]);\r\n  const [motorIndex, setMotorIndex] = useState(0);\r\n  const [challengeStarted, setChallengeStarted] = useState(false);\r\n  const [webSerialSupported, setWebSerialSupported] = useState(true);\r\n  \r\n  // Refs\r\n  const canvasRef = useRef(null);\r\n  const readerRef = useRef(null);\r\n  const writerRef = useRef(null);\r\n  const dataBufferRef = useRef('');\r\n  const uptimeIntervalRef = useRef(null);\r\n\r\n  const totalTasks = 3;\r\n\r\n  // Check WebSerial support on mount\r\n  useEffect(() => {\r\n    if (!('serial' in navigator)) {\r\n      setWebSerialSupported(false);\r\n    }\r\n    generateTasks();\r\n    startCurrentTask();\r\n  }, []);\r\n\r\n  // Update canvas when angles change\r\n  useEffect(() => {\r\n    drawRobot();\r\n    updateErrorDisplay();\r\n  }, [currentAngles, targetAngles, currentTask]);\r\n\r\n  // Uptime counter\r\n  useEffect(() => {\r\n    if (isConnected && connectionStartTime) {\r\n      uptimeIntervalRef.current = setInterval(() => {\r\n        const elapsed = Date.now() - connectionStartTime;\r\n        const hours = Math.floor(elapsed / 3600000);\r\n        const minutes = Math.floor((elapsed % 3600000) / 60000);\r\n        const seconds = Math.floor((elapsed % 60000) / 1000);\r\n        setUptime(`${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`);\r\n      }, 1000);\r\n    } else {\r\n      if (uptimeIntervalRef.current) {\r\n        clearInterval(uptimeIntervalRef.current);\r\n        setUptime('00:00:00');\r\n      }\r\n    }\r\n\r\n    return () => {\r\n      if (uptimeIntervalRef.current) {\r\n        clearInterval(uptimeIntervalRef.current);\r\n      }\r\n    };\r\n  }, [isConnected, connectionStartTime]);\r\n\r\n  const generateTasks = useCallback(() => {\r\n    const taskTypes = ['absolute', 'relative', 'absolute'];\r\n    const newTasks = [];\r\n    \r\n    for (let i = 0; i < 3; i++) {\r\n      const task = {\r\n        type: taskTypes[i],\r\n        targetAngles: generateRandomAngles(taskTypes[i]),\r\n        initialAngles: i === 0 ? [0, 0, 0] : [...currentAngles]\r\n      };\r\n      newTasks.push(task);\r\n    }\r\n    setTasks(newTasks);\r\n  }, [currentAngles]);\r\n\r\n  const generateRandomAngles = (type) => {\r\n    if (type === 'absolute') {\r\n      return [\r\n        Math.round((Math.random() * 300 - 150) / 5) * 5,\r\n        Math.round((Math.random() * 180 - 90) / 5) * 5,\r\n        Math.round((Math.random() * 180 - 90) / 5) * 5\r\n      ];\r\n    } else {\r\n      return [\r\n        Math.round((Math.random() * 120 - 60) / 5) * 5,\r\n        Math.round((Math.random() * 120 - 60) / 5) * 5,\r\n        Math.round((Math.random() * 120 - 60) / 5) * 5\r\n      ];\r\n    }\r\n  };\r\n\r\n  const logMessage = useCallback((message, type = 'info') => {\r\n    const timestamp = new Date().toLocaleTimeString();\r\n    const newLog = {\r\n      id: Date.now(),\r\n      timestamp,\r\n      message,\r\n      type\r\n    };\r\n    \r\n    setLogs(prevLogs => {\r\n      const updatedLogs = [...prevLogs, newLog];\r\n      return updatedLogs.slice(-100);\r\n    });\r\n  }, []);\r\n\r\n  const sendCommand = useCallback(async (command) => {\r\n    if (!isConnected || !writerRef.current) {\r\n      logMessage('Not connected to ESP32', 'error');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      const data = new TextEncoder().encode(command + ';');\r\n      await writerRef.current.write(data);\r\n      logMessage(`Sent: ${command}`, 'info');\r\n    } catch (error) {\r\n      logMessage(`Send error: ${error.message}`, 'error');\r\n    }\r\n  }, [isConnected, logMessage]);\r\n\r\n  const processSerialData = useCallback((data) => {\r\n    logMessage(`Received: ${data}`, 'info');\r\n    \r\n    if (data.startsWith('REL_ANGLE:')) {\r\n      const angleValue = parseFloat(data.substring(10));\r\n      const angleDeg = angleValue * 180 / Math.PI;\r\n      logMessage(`Relative angle: ${angleValue} rad (${angleDeg.toFixed(1)}Â°)`, 'info');\r\n      \r\n      setMotorIndex(prevIndex => {\r\n        const newIndex = prevIndex < 3 ? prevIndex : 0;\r\n        setCurrentAngles(prevAngles => {\r\n          const newAngles = [...prevAngles];\r\n          newAngles[newIndex] = angleDeg;\r\n          return newAngles;\r\n        });\r\n        return newIndex + 1;\r\n      });\r\n    }\r\n    \r\n    // Handle other serial data types...\r\n    if (data === 'PING_OK') {\r\n      logMessage('Motor ping successful', 'success');\r\n    }\r\n    \r\n    if (data === 'ESP32_DYNAMIXEL_CONTROLLER_READY') {\r\n      logMessage('ESP32 controller is ready!', 'success');\r\n    }\r\n  }, [logMessage]);\r\n\r\n  const readLoop = useCallback(async () => {\r\n    try {\r\n      while (port && port.readable && readerRef.current) {\r\n        const { value, done } = await readerRef.current.read();\r\n        if (done) break;\r\n        \r\n        const text = new TextDecoder().decode(value);\r\n        dataBufferRef.current += text;\r\n        \r\n        const lines = dataBufferRef.current.split('\\n');\r\n        dataBufferRef.current = lines.pop() || '';\r\n        \r\n        for (const line of lines) {\r\n          if (line.trim()) {\r\n            processSerialData(line.trim());\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      if (isConnected) {\r\n        logMessage(`Read error: ${error.message}`, 'error');\r\n      }\r\n    }\r\n  }, [port, isConnected, processSerialData, logMessage]);\r\n\r\n  const connect = async () => {\r\n    try {\r\n      const selectedPort = await navigator.serial.requestPort();\r\n      await selectedPort.open({ baudRate: 115200 });\r\n      \r\n      setPort(selectedPort);\r\n      setIsConnected(true);\r\n      setConnectionStartTime(Date.now());\r\n      \r\n      readerRef.current = selectedPort.readable.getReader();\r\n      writerRef.current = selectedPort.writable.getWriter();\r\n      \r\n      logMessage('Connected to ESP32 successfully', 'success');\r\n      readLoop();\r\n      \r\n    } catch (error) {\r\n      logMessage(`Connection failed: ${error.message}`, 'error');\r\n    }\r\n  };\r\n\r\n  const disconnect = async () => {\r\n    try {\r\n      if (readerRef.current) {\r\n        await readerRef.current.cancel();\r\n        await readerRef.current.releaseLock();\r\n      }\r\n      if (writerRef.current) {\r\n        await writerRef.current.releaseLock();\r\n      }\r\n      if (port) {\r\n        await port.close();\r\n      }\r\n      \r\n      setPort(null);\r\n      setIsConnected(false);\r\n      setConnectionStartTime(null);\r\n      readerRef.current = null;\r\n      writerRef.current = null;\r\n      \r\n      logMessage('Disconnected from ESP32', 'warning');\r\n      \r\n    } catch (error) {\r\n      logMessage(`Disconnect error: ${error.message}`, 'error');\r\n    }\r\n  };\r\n\r\n  const startChallenge = async () => {\r\n    if (!isConnected) {\r\n      logMessage('Connect to ESP32 first!', 'error');\r\n      return;\r\n    }\r\n    \r\n    await sendCommand('DISABLE_TORQUE:1');\r\n    await sendCommand('DISABLE_TORQUE:2');\r\n    await sendCommand('DISABLE_TORQUE:3');\r\n    \r\n    setChallengeStarted(true);\r\n    logMessage('Challenge started! Torque disabled - you can now manually move the robot joints.', 'success');\r\n  };\r\n\r\n  const completeTask = async () => {\r\n    if (!isConnected) {\r\n      logMessage('Connect to ESP32 first!', 'error');\r\n      return;\r\n    }\r\n    \r\n    logMessage('Reading final positions...', 'info');\r\n    \r\n    for (let id = 1; id <= 3; id++) {\r\n      await sendCommand(`GET_REL_ANGLE:${id}`);\r\n      await new Promise(resolve => setTimeout(resolve, 100));\r\n    }\r\n    \r\n    setTimeout(() => {\r\n      const task = tasks[currentTask];\r\n      let actualTarget = [...task.targetAngles];\r\n      \r\n      if (task.type === 'relative') {\r\n        actualTarget = task.initialAngles.map((initial, i) => initial + task.targetAngles[i]);\r\n      }\r\n      \r\n      const taskErrors = actualTarget.map((target, i) => Math.abs(currentAngles[i] - target));\r\n      const taskMaxError = Math.max(...taskErrors);\r\n      const avgError = taskErrors.reduce((a, b) => a + b, 0) / taskErrors.length;\r\n      \r\n      let score = 100;\r\n      if (taskMaxError > 5) score = Math.max(0, 100 - (taskMaxError - 5) * 10);\r\n      else if (taskMaxError > 2) score = Math.max(90, 100 - (taskMaxError - 2) * 3);\r\n      \r\n      const result = {\r\n        score: Math.round(score),\r\n        maxError: taskMaxError.toFixed(1),\r\n        avgError: avgError.toFixed(1),\r\n        errors: taskErrors.map(e => e.toFixed(1))\r\n      };\r\n      \r\n      setTaskResults(prev => [...prev, result]);\r\n      setShowResults(true);\r\n      \r\n      logMessage(`Task ${currentTask + 1} completed! Score: ${result.score}/100`, \r\n                result.score >= 90 ? 'success' : result.score >= 70 ? 'info' : 'warning');\r\n      \r\n    }, 2000);\r\n  };\r\n\r\n  const startCurrentTask = useCallback(() => {\r\n    if (tasks.length === 0) return;\r\n    \r\n    const task = tasks[currentTask];\r\n    if (!task) return;\r\n    \r\n    setTargetAngles([...task.targetAngles]);\r\n    setShowResults(false);\r\n    setShowFinalResults(false);\r\n    \r\n    logMessage(`Started ${task.type} positioning task ${currentTask + 1}`, 'info');\r\n  }, [tasks, currentTask, logMessage]);\r\n\r\n  const updateErrorDisplay = useCallback(() => {\r\n    if (tasks.length === 0 || !tasks[currentTask]) return;\r\n    \r\n    const task = tasks[currentTask];\r\n    let actualTarget = [...task.targetAngles];\r\n    \r\n    if (task.type === 'relative') {\r\n      actualTarget = task.initialAngles.map((initial, i) => initial + task.targetAngles[i]);\r\n    }\r\n    \r\n    const newErrors = actualTarget.map((target, i) => Math.abs(currentAngles[i] - target));\r\n    const newMaxError = Math.max(...newErrors);\r\n    \r\n    setErrors(newErrors);\r\n    setMaxError(newMaxError);\r\n  }, [tasks, currentTask, currentAngles]);\r\n\r\n  const drawRobot = useCallback(() => {\r\n    const canvas = canvasRef.current;\r\n    if (!canvas) return;\r\n    \r\n    const ctx = canvas.getContext('2d');\r\n    const width = canvas.width = canvas.offsetWidth;\r\n    const height = canvas.height = canvas.offsetHeight;\r\n    \r\n    ctx.clearRect(0, 0, width, height);\r\n    \r\n    const baseX = width / 2;\r\n    const baseY = height - 80;\r\n    const link1Length = Math.min(width, height) * 0.15;\r\n    const link2Length = Math.min(width, height) * 0.12;\r\n    const link3Length = Math.min(width, height) * 0.10;\r\n    \r\n    const angle1 = (currentAngles[0] * Math.PI) / 180;\r\n    const angle2 = (currentAngles[1] * Math.PI) / 180;\r\n    const angle3 = (currentAngles[2] * Math.PI) / 180;\r\n    \r\n    const joint1X = baseX + link1Length * Math.cos(angle1 - Math.PI/2);\r\n    const joint1Y = baseY + link1Length * Math.sin(angle1 - Math.PI/2);\r\n    \r\n    const joint2X = joint1X + link2Length * Math.cos(angle1 + angle2 - Math.PI/2);\r\n    const joint2Y = joint1Y + link2Length * Math.sin(angle1 + angle2 - Math.PI/2);\r\n    \r\n    const joint3X = joint2X + link3Length * Math.cos(angle1 + angle2 + angle3 - Math.PI/2);\r\n    const joint3Y = joint2Y + link3Length * Math.sin(angle1 + angle2 + angle3 - Math.PI/2);\r\n    \r\n    // Draw links\r\n    ctx.strokeStyle = '#0cc0df';\r\n    ctx.lineWidth = 8;\r\n    ctx.lineCap = 'round';\r\n    \r\n    ctx.beginPath();\r\n    ctx.moveTo(baseX, baseY);\r\n    ctx.lineTo(joint1X, joint1Y);\r\n    ctx.stroke();\r\n    \r\n    ctx.strokeStyle = '#007acc';\r\n    ctx.beginPath();\r\n    ctx.moveTo(joint1X, joint1Y);\r\n    ctx.lineTo(joint2X, joint2Y);\r\n    ctx.stroke();\r\n    \r\n    ctx.strokeStyle = '#ffd60a';\r\n    ctx.beginPath();\r\n    ctx.moveTo(joint2X, joint2Y);\r\n    ctx.lineTo(joint3X, joint3Y);\r\n    ctx.stroke();\r\n    \r\n    // Draw joints\r\n    const jointPositions = [\r\n      [baseX, baseY, '#ef4444'],\r\n      [joint1X, joint1Y, '#f59e0b'],\r\n      [joint2X, joint2Y, '#10b981'],\r\n      [joint3X, joint3Y, '#8b5cf6']\r\n    ];\r\n    \r\n    jointPositions.forEach(([x, y, color]) => {\r\n      ctx.fillStyle = color;\r\n      ctx.beginPath();\r\n      ctx.arc(x, y, 8, 0, 2 * Math.PI);\r\n      ctx.fill();\r\n      \r\n      ctx.strokeStyle = 'white';\r\n      ctx.lineWidth = 2;\r\n      ctx.stroke();\r\n    });\r\n    \r\n    ctx.fillStyle = '#374151';\r\n    ctx.fillRect(baseX - 20, baseY, 40, 25);\r\n    \r\n    ctx.fillStyle = 'white';\r\n    ctx.font = '14px Arial';\r\n    ctx.fillText(`Î¸1: ${currentAngles[0].toFixed(1)}Â°`, 10, 25);\r\n    ctx.fillText(`Î¸2: ${currentAngles[1].toFixed(1)}Â°`, 10, 45);\r\n    ctx.fillText(`Î¸3: ${currentAngles[2].toFixed(1)}Â°`, 10, 65);\r\n  }, [currentAngles]);\r\n\r\n  const getErrorColor = (error) => {\r\n    if (error <= 2) return '#059669';\r\n    if (error <= 5) return '#d97706';\r\n    return '#dc2626';\r\n  };\r\n\r\n  const getLogColor = (type) => {\r\n    switch (type) {\r\n      case 'success': return '#34d399';\r\n      case 'warning': return '#fbbf24';\r\n      case 'error': return '#f87171';\r\n      default: return '#60a5fa';\r\n    }\r\n  };\r\n\r\n  const nextTask = () => {\r\n    const newTaskIndex = currentTask + 1;\r\n    if (newTaskIndex >= totalTasks) {\r\n      setShowFinalResults(true);\r\n      setShowResults(false);\r\n    } else {\r\n      setCurrentTask(newTaskIndex);\r\n      startCurrentTask();\r\n    }\r\n  };\r\n\r\n  const clearLog = () => {\r\n    setLogs([{ \r\n      id: Date.now(), \r\n      timestamp: new Date().toLocaleTimeString(), \r\n      message: 'Challenge 1 initialized. Connect to ESP32 to begin.', \r\n      type: 'info' \r\n    }]);\r\n  };\r\n\r\n  const currentTaskData = tasks[currentTask];\r\n\r\n  return (\r\n    <Box>\r\n      {/* WebSerial Warning */}\r\n      {!webSerialSupported && (\r\n        <Alert severity=\"warning\" sx={{ mb: 3 }}>\r\n          <strong>â ï¸ WebSerial API not supported!</strong> \r\n          This interface requires a browser that supports WebSerial API (Chrome 89+, Edge 89+).\r\n        </Alert>\r\n      )}\r\n\r\n      {/* Mission Background */}\r\n      <Card sx={{ \r\n        mb: 3, \r\n        background: 'linear-gradient(135deg, #0cc0df, #007acc)', \r\n        color: 'white' \r\n      }}>\r\n        <CardContent>\r\n          <Typography variant=\"h6\" gutterBottom>ð Mission Background</Typography>\r\n          <Typography variant=\"body1\" sx={{ mb: 2 }}>\r\n            You are a fresh recruit in the World Space Agency and you have been identified as the roboticist who can embark on space missions and program the onboard robot for various purposes during the mission.\r\n          </Typography>\r\n          <Typography variant=\"body1\">\r\n            <strong>Your Task:</strong> Connect to the ESP32 controller and manually move the robot joints to match the specified target angles. You'll work with both absolute and relative positioning to master robot control.\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      <Grid container spacing={3}>\r\n        {/* Connection Panel */}\r\n        <Grid item xs={12} md={6}>\r\n          <Card sx={{ \r\n            bgcolor: 'rgba(0, 8, 20, 0.9)',\r\n            border: '1px solid rgba(12, 192, 223, 0.3)',\r\n            borderRadius: '16px'\r\n          }}>\r\n            <CardContent>\r\n              <Typography variant=\"h6\" sx={{ color: '#ffd60a', mb: 2 }}>\r\n                ð ESP32 Connection\r\n              </Typography>\r\n              \r\n              <Box sx={{ mb: 3 }}>\r\n                <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, mb: 2 }}>\r\n                  <Chip\r\n                    icon={isConnected ? <span>ð¢</span> : <span>ð´</span>}\r\n                    label={isConnected ? 'Connected' : 'Disconnected'}\r\n                    color={isConnected ? 'success' : 'default'}\r\n                    sx={{ fontWeight: 'bold' }}\r\n                  />\r\n                  <Typography variant=\"body2\" color=\"rgba(168, 218, 220, 0.8)\">\r\n                    Uptime: {uptime}\r\n                  </Typography>\r\n                </Box>\r\n                \r\n                <Box sx={{ display: 'flex', gap: 1, flexWrap: 'wrap', mb: 2 }}>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    startIcon={<Usb />}\r\n                    onClick={connect}\r\n                    disabled={isConnected || !webSerialSupported}\r\n                    sx={{ \r\n                      background: 'linear-gradient(45deg, #28a745, #20c997)',\r\n                      '&:hover': { background: 'linear-gradient(45deg, #20c997, #28a745)' }\r\n                    }}\r\n                  >\r\n                    Connect ESP32\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    startIcon={<UsbOff />}\r\n                    onClick={disconnect}\r\n                    disabled={!isConnected}\r\n                    color=\"error\"\r\n                  >\r\n                    Disconnect\r\n                  </Button>\r\n                </Box>\r\n              </Box>\r\n\r\n              <Typography variant=\"h6\" sx={{ color: '#ffd60a', mb: 2 }}>\r\n                ð¯ Challenge Controls\r\n              </Typography>\r\n              <Box sx={{ display: 'flex', gap: 1, flexWrap: 'wrap' }}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  startIcon={<PlayArrow />}\r\n                  onClick={startChallenge}\r\n                  disabled={!isConnected || challengeStarted}\r\n                  sx={{ \r\n                    background: 'linear-gradient(45deg, #28a745, #20c997)',\r\n                    '&:hover': { background: 'linear-gradient(45deg, #20c997, #28a745)' }\r\n                  }}\r\n                >\r\n                  Start Challenge\r\n                </Button>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  startIcon={<CheckCircle />}\r\n                  onClick={completeTask}\r\n                  disabled={!challengeStarted}\r\n                  sx={{ \r\n                    background: 'linear-gradient(45deg, #28a745, #20c997)',\r\n                    '&:hover': { background: 'linear-gradient(45deg, #20c997, #28a745)' }\r\n                  }}\r\n                >\r\n                  Complete Task\r\n                </Button>\r\n              </Box>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        {/* Task Information Panel */}\r\n        <Grid item xs={12} md={6}>\r\n          <Card sx={{ \r\n            bgcolor: 'rgba(0, 8, 20, 0.9)',\r\n            border: '1px solid rgba(12, 192, 223, 0.3)',\r\n            borderRadius: '16px'\r\n          }}>\r\n            <CardContent>\r\n              <Typography variant=\"h6\" sx={{ color: '#ffd60a', mb: 2 }}>\r\n                ð Current Task\r\n              </Typography>\r\n              \r\n              {currentTaskData && (\r\n                <Box sx={{ \r\n                  p: 2, \r\n                  bgcolor: 'rgba(12, 192, 223, 0.1)', \r\n                  borderRadius: 2, \r\n                  border: '1px solid rgba(12, 192, 223, 0.3)',\r\n                  mb: 2\r\n                }}>\r\n                  <Typography variant=\"h6\" sx={{ color: '#0cc0df', mb: 1 }}>\r\n                    Task {currentTask + 1}: {currentTaskData.type === 'absolute' ? 'Absolute' : 'Relative'} Positioning\r\n                  </Typography>\r\n                  \r\n                  <Box sx={{ \r\n                    p: 1.5, \r\n                    bgcolor: 'rgba(255, 193, 7, 0.1)', \r\n                    borderRadius: 1, \r\n                    border: '1px solid rgba(255, 193, 7, 0.3)',\r\n                    mb: 1\r\n                  }}>\r\n                    <Typography variant=\"body2\" sx={{ color: '#ffc107', fontWeight: 'bold', mb: 0.5 }}>\r\n                      ð¯ Target Angles:\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"white\" sx={{ fontFamily: 'monospace' }}>\r\n                      Joint 1: {targetAngles[0]}Â°, Joint 2: {targetAngles[1]}Â°, Joint 3: {targetAngles[2]}Â°\r\n                    </Typography>\r\n                  </Box>\r\n                  \r\n                  <Box sx={{ \r\n                    p: 1.5, \r\n                    bgcolor: 'rgba(16, 185, 129, 0.1)', \r\n                    borderRadius: 1, \r\n                    border: '1px solid rgba(16, 185, 129, 0.3)',\r\n                    mb: 1\r\n                  }}>\r\n                    <Typography variant=\"body2\" sx={{ color: '#10b981', fontWeight: 'bold', mb: 0.5 }}>\r\n                      ð Current Angles:\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"white\" sx={{ fontFamily: 'monospace' }}>\r\n                      Joint 1: {currentAngles[0].toFixed(1)}Â°, Joint 2: {currentAngles[1].toFixed(1)}Â°, Joint 3: {currentAngles[2].toFixed(1)}Â°\r\n                    </Typography>\r\n                  </Box>\r\n                  \r\n                  <LinearProgress \r\n                    variant=\"determinate\" \r\n                    value={((currentTask) / totalTasks) * 100}\r\n                    sx={{ \r\n                      height: 8, \r\n                      borderRadius: 4,\r\n                      bgcolor: 'rgba(255, 255, 255, 0.1)',\r\n                      '& .MuiLinearProgress-bar': {\r\n                        background: 'linear-gradient(90deg, #0cc0df, #007acc)'\r\n                      }\r\n                    }}\r\n                  />\r\n                  <Typography variant=\"body2\" color=\"rgba(168, 218, 220, 0.9)\" sx={{ mt: 1 }}>\r\n                    Task {currentTask + 1} of {totalTasks}\r\n                  </Typography>\r\n                </Box>\r\n              )}\r\n              \r\n              <Typography variant=\"h6\" sx={{ color: '#ffd60a', mb: 2 }}>\r\n                ð Task Accuracy\r\n              </Typography>\r\n              <Box sx={{ \r\n                p: 2, \r\n                bgcolor: 'rgba(255, 255, 255, 0.05)', \r\n                borderRadius: 1,\r\n                fontFamily: 'monospace',\r\n                fontSize: '0.875rem'\r\n              }}>\r\n                {errors.map((error, index) => (\r\n                  <Box key={index} sx={{ display: 'flex', justifyContent: 'space-between', mb: 0.5 }}>\r\n                    <span>Joint {index + 1} Error:</span>\r\n                    <span style={{ color: getErrorColor(error), fontWeight: 'bold' }}>\r\n                      {error.toFixed(1)}Â°\r\n                    </span>\r\n                  </Box>\r\n                ))}\r\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', mt: 1, pt: 1, borderTop: '1px solid rgba(255,255,255,0.1)' }}>\r\n                  <span style={{ fontWeight: 'bold' }}>Max Error:</span>\r\n                  <span style={{ color: getErrorColor(maxError), fontWeight: 'bold' }}>\r\n                    {maxError.toFixed(1)}Â°\r\n                  </span>\r\n                </Box>\r\n              </Box>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* Robot Visualization */}\r\n      <Card sx={{ \r\n        mt: 3, \r\n        bgcolor: 'rgba(0, 8, 20, 0.9)',\r\n        border: '1px solid rgba(12, 192, 223, 0.3)',\r\n        borderRadius: '16px'\r\n      }}>\r\n        <CardContent>\r\n          <Typography variant=\"h6\" sx={{ color: '#ffd60a', mb: 2 }}>\r\n            ð¦¾ Robot Arm Visualization\r\n          </Typography>\r\n          <Box sx={{ \r\n            width: '100%', \r\n            height: 400, \r\n            bgcolor: 'rgba(248, 250, 252, 0.05)', \r\n            border: '2px solid rgba(229, 231, 235, 0.1)', \r\n            borderRadius: 2,\r\n            position: 'relative'\r\n          }}>\r\n            <canvas\r\n              ref={canvasRef}\r\n              style={{ \r\n                width: '100%', \r\n                height: '100%', \r\n                borderRadius: '8px'\r\n              }}\r\n            />\r\n          </Box>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Communication Log */}\r\n      <Card sx={{ \r\n        mt: 3, \r\n        bgcolor: 'rgba(0, 8, 20, 0.9)',\r\n        border: '1px solid rgba(12, 192, 223, 0.3)',\r\n        borderRadius: '16px'\r\n      }}>\r\n        <CardContent>\r\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\r\n            <Typography variant=\"h6\" sx={{ color: '#ffd60a' }}>\r\n              ð¡ Communication Log\r\n            </Typography>\r\n            <Button\r\n              startIcon={<Clear />}\r\n              onClick={clearLog}\r\n              size=\"small\"\r\n              sx={{ color: 'rgba(168, 218, 220, 0.8)' }}\r\n            >\r\n              Clear Log\r\n            </Button>\r\n          </Box>\r\n          <Box sx={{ \r\n            bgcolor: '#1f2937', \r\n            borderRadius: 1, \r\n            p: 2, \r\n            maxHeight: 300, \r\n            overflowY: 'auto',\r\n            fontFamily: 'monospace',\r\n            fontSize: '0.875rem'\r\n          }}>\r\n            {logs.map((log) => (\r\n              <Box key={log.id} sx={{ mb: 0.5, wordWrap: 'break-word' }}>\r\n                <span style={{ color: '#9ca3af', fontWeight: 500 }}>\r\n                  [{log.timestamp}]\r\n                </span>{' '}\r\n                <span style={{ color: getLogColor(log.type) }}>\r\n                  {log.message}\r\n                </span>\r\n              </Box>\r\n            ))}\r\n          </Box>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Task Results Dialog */}\r\n      <Dialog\r\n        open={showResults}\r\n        onClose={() => setShowResults(false)}\r\n        maxWidth=\"md\"\r\n        fullWidth\r\n        PaperProps={{\r\n          sx: {\r\n            bgcolor: 'rgba(0, 8, 20, 0.95)',\r\n            backdropFilter: 'blur(20px)',\r\n            border: '1px solid rgba(12, 192, 223, 0.3)',\r\n            borderRadius: '16px',\r\n            color: 'white'\r\n          }\r\n        }}\r\n      >\r\n        <DialogTitle sx={{ \r\n          bgcolor: 'rgba(12, 192, 223, 0.1)',\r\n          borderBottom: '1px solid rgba(12, 192, 223, 0.3)'\r\n        }}>\r\n          <Typography variant=\"h5\" sx={{ color: '#0cc0df', fontWeight: 'bold' }}>\r\n            ð Task {currentTask + 1} Results\r\n          </Typography>\r\n        </DialogTitle>\r\n        <DialogContent sx={{ p: 3 }}>\r\n          {taskResults[currentTask] && (\r\n            <Box>\r\n              <Box sx={{ textAlign: 'center', mb: 3 }}>\r\n                <Typography \r\n                  variant=\"h3\" \r\n                  sx={{ \r\n                    fontWeight: 'bold',\r\n                    color: taskResults[currentTask].score >= 90 ? '#059669' : \r\n                           taskResults[currentTask].score >= 70 ? '#d97706' : '#dc2626'\r\n                  }}\r\n                >\r\n                  {taskResults[currentTask].score}/100\r\n                </Typography>\r\n                <Typography variant=\"h6\" color=\"rgba(168, 218, 220, 0.9)\">\r\n                  {taskResults[currentTask].score >= 90 ? 'ð Excellent! Perfect positioning!' :\r\n                   taskResults[currentTask].score >= 70 ? 'ð Good job! Close to target.' :\r\n                   'ð Keep practicing! Try to get closer to the target.'}\r\n                </Typography>\r\n              </Box>\r\n              \r\n              <Grid container spacing={2}>\r\n                <Grid item xs={6}>\r\n                  <Typography variant=\"body2\" color=\"rgba(168, 218, 220, 0.8)\">\r\n                    Maximum Error\r\n                  </Typography>\r\n                  <Typography variant=\"h6\" color=\"white\">\r\n                    {taskResults[currentTask].maxError}Â°\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <Typography variant=\"body2\" color=\"rgba(168, 218, 220, 0.8)\">\r\n                    Average Error\r\n                  </Typography>\r\n                  <Typography variant=\"h6\" color=\"white\">\r\n                    {taskResults[currentTask].avgError}Â°\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions sx={{ p: 3, borderTop: '1px solid rgba(12, 192, 223, 0.3)' }}>\r\n          <Button \r\n            onClick={() => setShowResults(false)} \r\n            startIcon={<Refresh />}\r\n            sx={{ color: 'rgba(168, 218, 220, 0.8)' }}\r\n          >\r\n            Retry Task\r\n          </Button>\r\n          {currentTask < totalTasks - 1 && (\r\n            <Button\r\n              variant=\"contained\"\r\n              onClick={nextTask}\r\n              startIcon={<SkipNext />}\r\n              sx={{ \r\n                background: 'linear-gradient(45deg, #0cc0df, #007acc)',\r\n                '&:hover': { background: 'linear-gradient(45deg, #007acc, #0cc0df)' }\r\n              }}\r\n            >\r\n              Next Task\r\n            </Button>\r\n          )}\r\n          {currentTask === totalTasks - 1 && (\r\n            <Button\r\n              variant=\"contained\"\r\n              onClick={() => setShowFinalResults(true)}\r\n              startIcon={<CheckCircle />}\r\n              sx={{ \r\n                background: 'linear-gradient(45deg, #28a745, #20c997)',\r\n                '&:hover': { background: 'linear-gradient(45deg, #20c997, #28a745)' }\r\n              }}\r\n            >\r\n              View Final Results\r\n            </Button>\r\n          )}\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Final Results Dialog */}\r\n      <Dialog\r\n        open={showFinalResults}\r\n        onClose={() => setShowFinalResults(false)}\r\n        maxWidth=\"md\"\r\n        fullWidth\r\n        PaperProps={{\r\n          sx: {\r\n            bgcolor: 'rgba(0, 8, 20, 0.95)',\r\n            backdropFilter: 'blur(20px)',\r\n            border: '1px solid rgba(12, 192, 223, 0.3)',\r\n            borderRadius: '16px',\r\n            color: 'white'\r\n          }\r\n        }}\r\n      >\r\n        <DialogTitle sx={{ \r\n          bgcolor: 'rgba(12, 192, 223, 0.1)',\r\n          borderBottom: '1px solid rgba(12, 192, 223, 0.3)'\r\n        }}>\r\n          <Typography variant=\"h5\" sx={{ color: '#0cc0df', fontWeight: 'bold' }}>\r\n            ð Challenge Complete!\r\n          </Typography>\r\n        </DialogTitle>\r\n        <DialogContent sx={{ p: 3 }}>\r\n          {taskResults.length > 0 && (\r\n            <Box>\r\n              <Box sx={{ textAlign: 'center', mb: 3 }}>\r\n                {(() => {\r\n                  const totalScore = taskResults.reduce((sum, result) => sum + result.score, 0);\r\n                  const avgScore = Math.round(totalScore / totalTasks);\r\n                  return (\r\n                    <>\r\n                      <Typography \r\n                        variant=\"h2\" \r\n                        sx={{ \r\n                          fontWeight: 'bold',\r\n                          color: avgScore >= 90 ? '#059669' : avgScore >= 70 ? '#d97706' : '#dc2626'\r\n                        }}\r\n                      >\r\n                        {totalScore}/{totalTasks * 100}\r\n                      </Typography>\r\n                      <Typography variant=\"h6\" color=\"rgba(168, 218, 220, 0.9)\">\r\n                        {avgScore >= 90 ? 'ð Outstanding! You\\'re ready for space missions!' :\r\n                         avgScore >= 70 ? 'â­ Well done! Good robot control skills.' :\r\n                         'ð Keep practicing! Robot control takes time to master.'}\r\n                      </Typography>\r\n                    </>\r\n                  );\r\n                })()}\r\n              </Box>\r\n              \r\n              <Typography variant=\"h6\" sx={{ color: '#ffd60a', mb: 2 }}>\r\n                Task Breakdown:\r\n              </Typography>\r\n              {taskResults.map((result, i) => (\r\n                <Box key={i} sx={{ mb: 2, p: 2, bgcolor: 'rgba(255, 255, 255, 0.05)', borderRadius: 1 }}>\r\n                  <Grid container spacing={2} alignItems=\"center\">\r\n                    <Grid item xs={3}>\r\n                      <Typography variant=\"body1\" color=\"white\" fontWeight=\"bold\">\r\n                        Task {i + 1}:\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                      <Typography variant=\"h6\" sx={{ \r\n                        color: result.score >= 90 ? '#059669' : result.score >= 70 ? '#d97706' : '#dc2626',\r\n                        fontWeight: 'bold'\r\n                      }}>\r\n                        {result.score}/100\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                      <Typography variant=\"body2\" color=\"rgba(168, 218, 220, 0.8)\">\r\n                        Max Error: {result.maxError}Â°\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Box>\r\n              ))}\r\n            </Box>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions sx={{ p: 3, borderTop: '1px solid rgba(12, 192, 223, 0.3)' }}>\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={() => {\r\n              setCurrentTask(0);\r\n              setTaskResults([]);\r\n              setChallengeStarted(false);\r\n              setShowFinalResults(false);\r\n              generateTasks();\r\n            }}\r\n            startIcon={<RestartAlt />}\r\n            sx={{ \r\n              background: 'linear-gradient(45deg, #0cc0df, #007acc)',\r\n              '&:hover': { background: 'linear-gradient(45deg, #007acc, #0cc0df)' }\r\n            }}\r\n          >\r\n            Restart Challenge\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Challenge1;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}