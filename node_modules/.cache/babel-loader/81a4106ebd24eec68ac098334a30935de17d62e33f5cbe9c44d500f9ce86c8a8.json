{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\misch\\\\Downloads\\\\absix-workstation-web-main\\\\absix-workstation-web-main\\\\frontend\\\\src\\\\components\\\\challenges\\\\RobotVisualizer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState, useCallback } from 'react';\nimport { Box, IconButton, Tooltip, Switch, FormControlLabel, Slider, Typography } from '@mui/material';\nimport { Visibility, VisibilityOff, Speed, CenterFocusStrong, Timeline } from '@mui/icons-material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RobotVisualizer = ({\n  jointAngles = [0, 0, 0],\n  targetAngles = null,\n  isAnimating = false,\n  showWorkspace = true,\n  showTrajectory = true,\n  showTargetReached = false,\n  config = {}\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const animationRef = useRef(null);\n  const trajectoryRef = useRef([]);\n\n  // State for visualization controls\n  const [currentAngles, setCurrentAngles] = useState([0, 0, 0]);\n  const [visualConfig, setVisualConfig] = useState({\n    showWorkspace: showWorkspace,\n    showTrajectory: showTrajectory,\n    showGrid: true,\n    showJointLabels: true,\n    showVelocityVectors: false,\n    animationSpeed: 0.05,\n    zoom: 1.0,\n    centerX: 0,\n    centerY: 0,\n    ...config\n  });\n\n  // Robot physical parameters\n  const robotConfig = {\n    links: [{\n      length: 140,\n      width: 24,\n      color: '#e53e3e',\n      name: 'Link 1',\n      maxAngle: 150\n    }, {\n      length: 120,\n      width: 20,\n      color: '#38a169',\n      name: 'Link 2',\n      maxAngle: 120\n    }, {\n      length: 100,\n      width: 16,\n      color: '#805ad5',\n      name: 'Link 3',\n      maxAngle: 90\n    }],\n    joints: [{\n      radius: 18,\n      color: '#2d3748',\n      limits: [-150, 150]\n    }, {\n      radius: 15,\n      color: '#4a5568',\n      limits: [-120, 120]\n    }, {\n      radius: 12,\n      color: '#718096',\n      limits: [-90, 90]\n    }],\n    base: {\n      radius: 30,\n      height: 35,\n      color: '#3182ce'\n    },\n    endEffector: {\n      radius: 14,\n      color: '#ed8936'\n    }\n  };\n\n  // Smooth animation with easing\n  useEffect(() => {\n    if (isAnimating && targetAngles) {\n      const animate = () => {\n        setCurrentAngles(prevAngles => {\n          const newAngles = prevAngles.map((current, i) => {\n            const target = targetAngles[i] * Math.PI / 180;\n            const diff = target - current;\n            return current + diff * visualConfig.animationSpeed;\n          });\n          const hasReached = newAngles.every((angle, i) => Math.abs(angle - targetAngles[i] * Math.PI / 180) < 0.01);\n          if (!hasReached) {\n            animationRef.current = requestAnimationFrame(animate);\n          }\n          return newAngles;\n        });\n      };\n      animationRef.current = requestAnimationFrame(animate);\n    }\n    return () => {\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n      }\n    };\n  }, [isAnimating, targetAngles, visualConfig.animationSpeed]);\n\n  // Update current angles when joint angles change\n  useEffect(() => {\n    if (!isAnimating) {\n      setCurrentAngles(jointAngles.map(angle => angle * Math.PI / 180));\n    }\n  }, [jointAngles, isAnimating]);\n\n  // Calculate forward kinematics\n  const calculateForwardKinematics = useCallback(angles => {\n    const [θ1, θ2, θ3] = angles;\n    const [L1, L2, L3] = robotConfig.links.map(link => link.length);\n    const positions = [];\n\n    // Base position (origin)\n    positions.push({\n      x: 0,\n      y: 0,\n      angle: 0\n    });\n\n    // Joint 1 position\n    positions.push({\n      x: L1 * Math.cos(θ1),\n      y: L1 * Math.sin(θ1),\n      angle: θ1\n    });\n\n    // Joint 2 position\n    positions.push({\n      x: positions[1].x + L2 * Math.cos(θ1 + θ2),\n      y: positions[1].y + L2 * Math.sin(θ1 + θ2),\n      angle: θ1 + θ2\n    });\n\n    // End effector position\n    positions.push({\n      x: positions[2].x + L3 * Math.cos(θ1 + θ2 + θ3),\n      y: positions[2].y + L3 * Math.sin(θ1 + θ2 + θ3),\n      angle: θ1 + θ2 + θ3\n    });\n    return positions;\n  }, []);\n\n  // Update trajectory\n  useEffect(() => {\n    const positions = calculateForwardKinematics(currentAngles);\n    const endEffector = positions[positions.length - 1];\n    if (visualConfig.showTrajectory && isAnimating) {\n      trajectoryRef.current.push({\n        ...endEffector,\n        timestamp: Date.now()\n      });\n      // Keep only last 100 points\n      if (trajectoryRef.current.length > 100) {\n        trajectoryRef.current = trajectoryRef.current.slice(-100);\n      }\n    }\n  }, [currentAngles, visualConfig.showTrajectory, isAnimating, calculateForwardKinematics]);\n\n  // Clear trajectory when needed\n  const clearTrajectory = () => {\n    trajectoryRef.current = [];\n  };\n\n  // Drawing functions\n  const drawGrid = (ctx, canvas, centerX, centerY) => {\n    if (!visualConfig.showGrid) return;\n    ctx.save();\n    ctx.strokeStyle = '#f7fafc';\n    ctx.lineWidth = 1;\n    const gridSize = 40 * visualConfig.zoom;\n    const offsetX = (centerX + visualConfig.centerX) % gridSize;\n    const offsetY = (centerY + visualConfig.centerY) % gridSize;\n\n    // Vertical lines\n    for (let x = offsetX; x < canvas.width; x += gridSize) {\n      ctx.beginPath();\n      ctx.moveTo(x, 0);\n      ctx.lineTo(x, canvas.height);\n      ctx.stroke();\n    }\n\n    // Horizontal lines\n    for (let y = offsetY; y < canvas.height; y += gridSize) {\n      ctx.beginPath();\n      ctx.moveTo(0, y);\n      ctx.lineTo(canvas.width, y);\n      ctx.stroke();\n    }\n    ctx.restore();\n  };\n  const drawWorkspace = (ctx, centerX, centerY) => {\n    if (!visualConfig.showWorkspace) return;\n    const [L1, L2, L3] = robotConfig.links.map(link => link.length * visualConfig.zoom);\n    const maxReach = L1 + L2 + L3;\n    const minReach = Math.abs(L1 - L2 - L3);\n    ctx.save();\n    ctx.strokeStyle = '#e2e8f0';\n    ctx.lineWidth = 2;\n    ctx.setLineDash([8, 4]);\n\n    // Maximum reach circle\n    ctx.beginPath();\n    ctx.arc(centerX, centerY, maxReach, 0, 2 * Math.PI);\n    ctx.stroke();\n\n    // Minimum reach circle (if exists)\n    if (minReach > 10) {\n      ctx.strokeStyle = '#fed7d7';\n      ctx.beginPath();\n      ctx.arc(centerX, centerY, minReach, 0, 2 * Math.PI);\n      ctx.stroke();\n    }\n\n    // Add workspace labels\n    ctx.fillStyle = '#a0aec0';\n    ctx.font = '12px Arial';\n    ctx.fillText(`Max: ${(maxReach / visualConfig.zoom).toFixed(0)}px`, centerX + maxReach + 10, centerY);\n    ctx.restore();\n  };\n  const drawCoordinateSystem = (ctx, centerX, centerY) => {\n    ctx.save();\n    ctx.lineWidth = 3;\n    const axisLength = 80 * visualConfig.zoom;\n\n    // X-axis (red)\n    ctx.strokeStyle = '#f56565';\n    ctx.beginPath();\n    ctx.moveTo(centerX, centerY);\n    ctx.lineTo(centerX + axisLength, centerY);\n    ctx.stroke();\n\n    // Arrow head for X\n    ctx.fillStyle = '#f56565';\n    ctx.beginPath();\n    ctx.moveTo(centerX + axisLength, centerY);\n    ctx.lineTo(centerX + axisLength - 12, centerY - 6);\n    ctx.lineTo(centerX + axisLength - 12, centerY + 6);\n    ctx.fill();\n\n    // Y-axis (green)\n    ctx.strokeStyle = '#48bb78';\n    ctx.beginPath();\n    ctx.moveTo(centerX, centerY);\n    ctx.lineTo(centerX, centerY - axisLength);\n    ctx.stroke();\n\n    // Arrow head for Y\n    ctx.fillStyle = '#48bb78';\n    ctx.beginPath();\n    ctx.moveTo(centerX, centerY - axisLength);\n    ctx.lineTo(centerX - 6, centerY - axisLength + 12);\n    ctx.lineTo(centerX + 6, centerY - axisLength + 12);\n    ctx.fill();\n\n    // Labels\n    ctx.font = 'bold 16px Arial';\n    ctx.fillStyle = '#f56565';\n    ctx.fillText('X', centerX + axisLength + 15, centerY + 6);\n    ctx.fillStyle = '#48bb78';\n    ctx.fillText('Y', centerX + 8, centerY - axisLength - 10);\n    ctx.restore();\n  };\n  const drawRobotBase = (ctx, centerX, centerY) => {\n    const {\n      radius,\n      height,\n      color\n    } = robotConfig.base;\n    const scaledRadius = radius * visualConfig.zoom;\n    const scaledHeight = height * visualConfig.zoom;\n\n    // Base shadow\n    ctx.save();\n    ctx.fillStyle = 'rgba(0, 0, 0, 0.15)';\n    ctx.beginPath();\n    ctx.ellipse(centerX + 4, centerY + 4, scaledRadius, scaledRadius * 0.3, 0, 0, 2 * Math.PI);\n    ctx.fill();\n\n    // Base cylinder\n    const gradient = ctx.createLinearGradient(centerX - scaledRadius, centerY, centerX + scaledRadius, centerY);\n    gradient.addColorStop(0, '#2b6cb7');\n    gradient.addColorStop(0.5, color);\n    gradient.addColorStop(1, '#1a4780');\n    ctx.fillStyle = gradient;\n    ctx.fillRect(centerX - scaledRadius, centerY - scaledHeight / 2, scaledRadius * 2, scaledHeight);\n\n    // Base top\n    ctx.fillStyle = '#4299e1';\n    ctx.beginPath();\n    ctx.ellipse(centerX, centerY - scaledHeight / 2, scaledRadius, scaledRadius * 0.3, 0, 0, 2 * Math.PI);\n    ctx.fill();\n\n    // Base bottom\n    ctx.fillStyle = '#1a4780';\n    ctx.beginPath();\n    ctx.ellipse(centerX, centerY + scaledHeight / 2, scaledRadius, scaledRadius * 0.3, 0, 0, 2 * Math.PI);\n    ctx.fill();\n    ctx.restore();\n  };\n  const drawLink = (ctx, start, end, link, linkIndex) => {\n    const dx = end.x - start.x;\n    const dy = end.y - start.y;\n    const length = Math.sqrt(dx * dx + dy * dy);\n    const angle = Math.atan2(dy, dx);\n    const width = link.width * visualConfig.zoom;\n    ctx.save();\n    ctx.translate(start.x, start.y);\n    ctx.rotate(angle);\n\n    // Link shadow\n    ctx.fillStyle = 'rgba(0, 0, 0, 0.1)';\n    ctx.fillRect(3, 3, length, width);\n\n    // Link gradient\n    const gradient = ctx.createLinearGradient(0, -width / 2, 0, width / 2);\n    gradient.addColorStop(0, '#ffffff');\n    gradient.addColorStop(0.3, link.color);\n    gradient.addColorStop(0.7, link.color);\n    gradient.addColorStop(1, '#000000');\n    ctx.fillStyle = gradient;\n    ctx.fillRect(0, -width / 2, length, width);\n\n    // Link outline\n    ctx.strokeStyle = '#2d3748';\n    ctx.lineWidth = 1;\n    ctx.strokeRect(0, -width / 2, length, width);\n\n    // Link label\n    if (visualConfig.showJointLabels) {\n      ctx.fillStyle = '#ffffff';\n      ctx.font = `bold ${Math.max(10, 12 * visualConfig.zoom)}px Arial`;\n      ctx.textAlign = 'center';\n      ctx.fillText(link.name, length / 2, 4);\n    }\n    ctx.restore();\n  };\n  const drawJoint = (ctx, position, joint, angle, index) => {\n    const radius = joint.radius * visualConfig.zoom;\n\n    // Joint shadow\n    ctx.save();\n    ctx.fillStyle = 'rgba(0, 0, 0, 0.2)';\n    ctx.beginPath();\n    ctx.arc(position.x + 3, position.y + 3, radius + 2, 0, 2 * Math.PI);\n    ctx.fill();\n\n    // Joint body gradient\n    const gradient = ctx.createRadialGradient(position.x - radius / 3, position.y - radius / 3, 0, position.x, position.y, radius);\n    gradient.addColorStop(0, '#e2e8f0');\n    gradient.addColorStop(1, joint.color);\n    ctx.fillStyle = gradient;\n    ctx.beginPath();\n    ctx.arc(position.x, position.y, radius, 0, 2 * Math.PI);\n    ctx.fill();\n\n    // Joint outline\n    ctx.strokeStyle = '#1a202c';\n    ctx.lineWidth = 2;\n    ctx.stroke();\n\n    // Angle indicator\n    if (Math.abs(angle) > 0.1) {\n      ctx.strokeStyle = '#fbb03b';\n      ctx.lineWidth = 4;\n      ctx.beginPath();\n      ctx.arc(position.x, position.y, radius - 4, 0, angle);\n      ctx.stroke();\n    }\n\n    // Joint label\n    if (visualConfig.showJointLabels) {\n      ctx.fillStyle = '#ffffff';\n      ctx.font = `bold ${Math.max(10, 14 * visualConfig.zoom)}px Arial`;\n      ctx.textAlign = 'center';\n      ctx.fillText(`J${index + 1}`, position.x, position.y + 5);\n    }\n    ctx.restore();\n  };\n  const drawEndEffector = (ctx, position, isAtTarget = false) => {\n    const radius = robotConfig.endEffector.radius * visualConfig.zoom;\n\n    // Glow effect if at target\n    if (isAtTarget || showTargetReached) {\n      ctx.save();\n      ctx.shadowColor = '#48bb78';\n      ctx.shadowBlur = 25 * visualConfig.zoom;\n      ctx.fillStyle = '#48bb78';\n      ctx.beginPath();\n      ctx.arc(position.x, position.y, radius + 8, 0, 2 * Math.PI);\n      ctx.fill();\n      ctx.restore();\n    }\n\n    // End effector gradient\n    const gradient = ctx.createRadialGradient(position.x - radius / 3, position.y - radius / 3, 0, position.x, position.y, radius);\n    gradient.addColorStop(0, '#fed7aa');\n    gradient.addColorStop(1, robotConfig.endEffector.color);\n    ctx.fillStyle = gradient;\n    ctx.beginPath();\n    ctx.arc(position.x, position.y, radius, 0, 2 * Math.PI);\n    ctx.fill();\n\n    // End effector cross\n    ctx.strokeStyle = '#ffffff';\n    ctx.lineWidth = 3;\n    ctx.beginPath();\n    ctx.moveTo(position.x - radius / 2, position.y);\n    ctx.lineTo(position.x + radius / 2, position.y);\n    ctx.moveTo(position.x, position.y - radius / 2);\n    ctx.lineTo(position.x, position.y + radius / 2);\n    ctx.stroke();\n\n    // Position coordinates\n    if (visualConfig.showJointLabels) {\n      ctx.fillStyle = '#2d3748';\n      ctx.font = `${Math.max(8, 10 * visualConfig.zoom)}px Arial`;\n      ctx.textAlign = 'center';\n      const x = ((position.x - canvasRef.current.width / 2 - visualConfig.centerX) / visualConfig.zoom).toFixed(0);\n      const y = (-(position.y - canvasRef.current.height / 2 - visualConfig.centerY) / visualConfig.zoom).toFixed(0);\n      ctx.fillText(`(${x}, ${y})`, position.x, position.y + radius + 15);\n    }\n  };\n  const drawTrajectory = (ctx, centerX, centerY) => {\n    if (!visualConfig.showTrajectory || trajectoryRef.current.length < 2) return;\n    ctx.save();\n    ctx.strokeStyle = '#9f7aea';\n    ctx.lineWidth = 3;\n    ctx.globalAlpha = 0.8;\n    ctx.setLineDash([5, 5]);\n    ctx.beginPath();\n    trajectoryRef.current.forEach((point, index) => {\n      const x = centerX + point.x * visualConfig.zoom + visualConfig.centerX;\n      const y = centerY - point.y * visualConfig.zoom + visualConfig.centerY;\n      if (index === 0) {\n        ctx.moveTo(x, y);\n      } else {\n        ctx.lineTo(x, y);\n      }\n    });\n    ctx.stroke();\n\n    // Draw trajectory points\n    trajectoryRef.current.forEach((point, index) => {\n      if (index % 5 === 0) {\n        // Every 5th point\n        const x = centerX + point.x * visualConfig.zoom + visualConfig.centerX;\n        const y = centerY - point.y * visualConfig.zoom + visualConfig.centerY;\n        ctx.fillStyle = '#9f7aea';\n        ctx.globalAlpha = 0.6;\n        ctx.beginPath();\n        ctx.arc(x, y, 3, 0, 2 * Math.PI);\n        ctx.fill();\n      }\n    });\n    ctx.restore();\n  };\n  const drawTargetPosition = (ctx, centerX, centerY) => {\n    if (!targetAngles) return;\n    const targetPositions = calculateForwardKinematics(targetAngles.map(angle => angle * Math.PI / 180));\n    const targetEnd = targetPositions[targetPositions.length - 1];\n    const x = centerX + targetEnd.x * visualConfig.zoom + visualConfig.centerX;\n    const y = centerY - targetEnd.y * visualConfig.zoom + visualConfig.centerY;\n\n    // Pulsing target marker\n    const time = Date.now() * 0.005;\n    const pulseRadius = (12 + Math.sin(time) * 4) * visualConfig.zoom;\n    ctx.save();\n\n    // Outer pulse\n    ctx.fillStyle = 'rgba(239, 68, 68, 0.3)';\n    ctx.beginPath();\n    ctx.arc(x, y, pulseRadius + 5, 0, 2 * Math.PI);\n    ctx.fill();\n\n    // Main target\n    ctx.fillStyle = '#ef4444';\n    ctx.beginPath();\n    ctx.arc(x, y, pulseRadius, 0, 2 * Math.PI);\n    ctx.fill();\n\n    // Target cross\n    ctx.strokeStyle = '#ffffff';\n    ctx.lineWidth = 2;\n    ctx.beginPath();\n    ctx.moveTo(x - pulseRadius / 2, y);\n    ctx.lineTo(x + pulseRadius / 2, y);\n    ctx.moveTo(x, y - pulseRadius / 2);\n    ctx.lineTo(x, y + pulseRadius / 2);\n    ctx.stroke();\n\n    // Target label\n    ctx.fillStyle = '#1a202c';\n    ctx.font = `bold ${Math.max(10, 12 * visualConfig.zoom)}px Arial`;\n    ctx.textAlign = 'center';\n    ctx.fillText('TARGET', x, y - pulseRadius - 10);\n    ctx.restore();\n  };\n\n  // Main drawing function\n  const drawRobot = useCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    const centerX = canvas.width / 2 + visualConfig.centerX;\n    const centerY = canvas.height / 2 + visualConfig.centerY;\n\n    // Clear canvas with gradient background\n    const bgGradient = ctx.createLinearGradient(0, 0, 0, canvas.height);\n    bgGradient.addColorStop(0, '#f7fafc');\n    bgGradient.addColorStop(1, '#edf2f7');\n    ctx.fillStyle = bgGradient;\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n    // Draw components in order\n    drawGrid(ctx, canvas, centerX, centerY);\n    drawWorkspace(ctx, centerX, centerY);\n    drawTrajectory(ctx, centerX, centerY);\n    drawCoordinateSystem(ctx, centerX, centerY);\n\n    // Calculate robot positions\n    const positions = calculateForwardKinematics(currentAngles);\n    const screenPositions = positions.map(pos => ({\n      x: centerX + pos.x * visualConfig.zoom,\n      y: centerY - pos.y * visualConfig.zoom,\n      angle: pos.angle\n    }));\n\n    // Draw robot components\n    drawRobotBase(ctx, centerX, centerY);\n\n    // Draw links\n    for (let i = 0; i < robotConfig.links.length; i++) {\n      drawLink(ctx, screenPositions[i], screenPositions[i + 1], robotConfig.links[i], i);\n    }\n\n    // Draw joints\n    robotConfig.joints.forEach((joint, index) => {\n      drawJoint(ctx, screenPositions[index], joint, currentAngles[index], index);\n    });\n\n    // Draw end effector\n    const isAtTarget = targetAngles && currentAngles.every((angle, i) => Math.abs(angle - targetAngles[i] * Math.PI / 180) < 0.05);\n    drawEndEffector(ctx, screenPositions[screenPositions.length - 1], isAtTarget);\n\n    // Draw target position\n    drawTargetPosition(ctx, centerX, centerY);\n\n    // Draw status information\n    drawStatusPanel(ctx, canvas);\n  }, [currentAngles, targetAngles, visualConfig, calculateForwardKinematics, showTargetReached]);\n  const drawStatusPanel = (ctx, canvas) => {\n    ctx.save();\n\n    // Status panel background\n    ctx.fillStyle = 'rgba(255, 255, 255, 0.95)';\n    ctx.fillRect(10, 10, 220, 140);\n    ctx.strokeStyle = '#e2e8f0';\n    ctx.lineWidth = 2;\n    ctx.strokeRect(10, 10, 220, 140);\n\n    // Status panel content\n    ctx.fillStyle = '#2d3748';\n    ctx.font = 'bold 16px Arial';\n    ctx.fillText('Robot Status', 20, 30);\n    ctx.font = '12px Arial';\n    currentAngles.forEach((angle, i) => {\n      const degrees = (angle * 180 / Math.PI).toFixed(1);\n      const isWithinLimits = Math.abs(parseFloat(degrees)) <= robotConfig.joints[i].limits[1];\n      ctx.fillStyle = isWithinLimits ? '#2d3748' : '#e53e3e';\n      ctx.fillText(`Joint ${i + 1}: ${degrees}°`, 20, 50 + i * 18);\n    });\n\n    // End effector position\n    const endPos = calculateForwardKinematics(currentAngles)[3];\n    ctx.fillStyle = '#2d3748';\n    ctx.fillText(`End Effector:`, 20, 110);\n    ctx.fillText(`X: ${endPos.x.toFixed(1)} Y: ${endPos.y.toFixed(1)}`, 20, 125);\n\n    // Performance info\n    ctx.fillStyle = '#718096';\n    ctx.font = '10px Arial';\n    ctx.fillText(`Zoom: ${(visualConfig.zoom * 100).toFixed(0)}%`, 20, 140);\n    ctx.restore();\n  };\n\n  // Update visualization when angles change\n  useEffect(() => {\n    drawRobot();\n  }, [drawRobot]);\n\n  // Handle mouse interactions\n  const handleMouseWheel = e => {\n    e.preventDefault();\n    const zoomFactor = e.deltaY > 0 ? 0.9 : 1.1;\n    setVisualConfig(prev => ({\n      ...prev,\n      zoom: Math.max(0.2, Math.min(3.0, prev.zoom * zoomFactor))\n    }));\n  };\n  const handleMouseMove = e => {\n    if (e.buttons === 1) {\n      // Left mouse button\n      const dx = e.movementX;\n      const dy = e.movementY;\n      setVisualConfig(prev => ({\n        ...prev,\n        centerX: prev.centerX + dx,\n        centerY: prev.centerY + dy\n      }));\n    }\n  };\n  const resetView = () => {\n    setVisualConfig(prev => ({\n      ...prev,\n      zoom: 1.0,\n      centerX: 0,\n      centerY: 0\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      position: 'relative',\n      width: '100%',\n      height: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: 600,\n      height: 450,\n      onWheel: handleMouseWheel,\n      onMouseMove: handleMouseMove,\n      style: {\n        border: '2px solid #e2e8f0',\n        borderRadius: '8px',\n        cursor: 'grab',\n        width: '100%',\n        height: '100%',\n        maxWidth: '600px',\n        maxHeight: '450px'\n      },\n      onMouseDown: e => {\n        e.target.style.cursor = 'grabbing';\n      },\n      onMouseUp: e => {\n        e.target.style.cursor = 'grab';\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 658,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        position: 'absolute',\n        top: 8,\n        right: 8,\n        bgcolor: 'rgba(255, 255, 255, 0.95)',\n        p: 1.5,\n        borderRadius: 2,\n        boxShadow: 2,\n        minWidth: '200px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle2\",\n        gutterBottom: true,\n        sx: {\n          fontWeight: 'bold'\n        },\n        children: \"Visualization Controls\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 692,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        flexDirection: \"column\",\n        gap: 1,\n        children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Switch, {\n            size: \"small\",\n            checked: visualConfig.showWorkspace,\n            onChange: e => setVisualConfig(prev => ({\n              ...prev,\n              showWorkspace: e.target.checked\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 699,\n            columnNumber: 15\n          }, this),\n          label: \"Workspace\",\n          sx: {\n            fontSize: '12px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 697,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Switch, {\n            size: \"small\",\n            checked: visualConfig.showTrajectory,\n            onChange: e => setVisualConfig(prev => ({\n              ...prev,\n              showTrajectory: e.target.checked\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 714,\n            columnNumber: 15\n          }, this),\n          label: \"Trajectory\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 712,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Switch, {\n            size: \"small\",\n            checked: visualConfig.showGrid,\n            onChange: e => setVisualConfig(prev => ({\n              ...prev,\n              showGrid: e.target.checked\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 728,\n            columnNumber: 15\n          }, this),\n          label: \"Grid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 726,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            gutterBottom: true,\n            children: \"Animation Speed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 741,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Slider, {\n            size: \"small\",\n            value: visualConfig.animationSpeed,\n            onChange: (e, value) => setVisualConfig(prev => ({\n              ...prev,\n              animationSpeed: value\n            })),\n            min: 0.01,\n            max: 0.2,\n            step: 0.01,\n            sx: {\n              width: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 744,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 740,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          gap: 1,\n          mt: 1,\n          children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Reset View\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"small\",\n              onClick: resetView,\n              children: /*#__PURE__*/_jsxDEV(CenterFocusStrong, {\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 761,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 760,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 759,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Clear Trajectory\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"small\",\n              onClick: clearTrajectory,\n              children: /*#__PURE__*/_jsxDEV(Timeline, {\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 767,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 766,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 765,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 758,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 696,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 682,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 656,\n    columnNumber: 5\n  }, this);\n};\n_s(RobotVisualizer, \"IuByPTOPWlp8CbH3EQBvXZwos+c=\");\n_c = RobotVisualizer;\nexport default RobotVisualizer;\nvar _c;\n$RefreshReg$(_c, \"RobotVisualizer\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useCallback","Box","IconButton","Tooltip","Switch","FormControlLabel","Slider","Typography","Visibility","VisibilityOff","Speed","CenterFocusStrong","Timeline","jsxDEV","_jsxDEV","RobotVisualizer","jointAngles","targetAngles","isAnimating","showWorkspace","showTrajectory","showTargetReached","config","_s","canvasRef","animationRef","trajectoryRef","currentAngles","setCurrentAngles","visualConfig","setVisualConfig","showGrid","showJointLabels","showVelocityVectors","animationSpeed","zoom","centerX","centerY","robotConfig","links","length","width","color","name","maxAngle","joints","radius","limits","base","height","endEffector","animate","prevAngles","newAngles","map","current","i","target","Math","PI","diff","hasReached","every","angle","abs","requestAnimationFrame","cancelAnimationFrame","calculateForwardKinematics","angles","θ1","θ2","θ3","L1","L2","L3","link","positions","push","x","y","cos","sin","timestamp","Date","now","slice","clearTrajectory","drawGrid","ctx","canvas","save","strokeStyle","lineWidth","gridSize","offsetX","offsetY","beginPath","moveTo","lineTo","stroke","restore","drawWorkspace","maxReach","minReach","setLineDash","arc","fillStyle","font","fillText","toFixed","drawCoordinateSystem","axisLength","fill","drawRobotBase","scaledRadius","scaledHeight","ellipse","gradient","createLinearGradient","addColorStop","fillRect","drawLink","start","end","linkIndex","dx","dy","sqrt","atan2","translate","rotate","strokeRect","max","textAlign","drawJoint","position","joint","index","createRadialGradient","drawEndEffector","isAtTarget","shadowColor","shadowBlur","drawTrajectory","globalAlpha","forEach","point","drawTargetPosition","targetPositions","targetEnd","time","pulseRadius","drawRobot","getContext","bgGradient","screenPositions","pos","drawStatusPanel","degrees","isWithinLimits","parseFloat","endPos","handleMouseWheel","e","preventDefault","zoomFactor","deltaY","prev","min","handleMouseMove","buttons","movementX","movementY","resetView","sx","children","ref","onWheel","onMouseMove","style","border","borderRadius","cursor","maxWidth","maxHeight","onMouseDown","onMouseUp","fileName","_jsxFileName","lineNumber","columnNumber","top","right","bgcolor","p","boxShadow","minWidth","variant","gutterBottom","fontWeight","display","flexDirection","gap","control","size","checked","onChange","label","fontSize","mt","value","step","title","onClick","_c","$RefreshReg$"],"sources":["C:/Users/misch/Downloads/absix-workstation-web-main/absix-workstation-web-main/frontend/src/components/challenges/RobotVisualizer.jsx"],"sourcesContent":["import React, { useRef, useEffect, useState, useCallback } from 'react';\r\nimport { Box, IconButton, Tooltip, Switch, FormControlLabel, Slider, Typography } from '@mui/material';\r\nimport { Visibility, VisibilityOff, Speed, CenterFocusStrong, Timeline } from '@mui/icons-material';\r\n\r\nconst RobotVisualizer = ({\r\n  jointAngles = [0, 0, 0],\r\n  targetAngles = null,\r\n  isAnimating = false,\r\n  showWorkspace = true,\r\n  showTrajectory = true,\r\n  showTargetReached = false,\r\n  config = {}\r\n}) => {\r\n  const canvasRef = useRef(null);\r\n  const animationRef = useRef(null);\r\n  const trajectoryRef = useRef([]);\r\n  \r\n  // State for visualization controls\r\n  const [currentAngles, setCurrentAngles] = useState([0, 0, 0]);\r\n  const [visualConfig, setVisualConfig] = useState({\r\n    showWorkspace: showWorkspace,\r\n    showTrajectory: showTrajectory,\r\n    showGrid: true,\r\n    showJointLabels: true,\r\n    showVelocityVectors: false,\r\n    animationSpeed: 0.05,\r\n    zoom: 1.0,\r\n    centerX: 0,\r\n    centerY: 0,\r\n    ...config\r\n  });\r\n  \r\n  // Robot physical parameters\r\n  const robotConfig = {\r\n    links: [\r\n      { length: 140, width: 24, color: '#e53e3e', name: 'Link 1', maxAngle: 150 },\r\n      { length: 120, width: 20, color: '#38a169', name: 'Link 2', maxAngle: 120 },\r\n      { length: 100, width: 16, color: '#805ad5', name: 'Link 3', maxAngle: 90 }\r\n    ],\r\n    joints: [\r\n      { radius: 18, color: '#2d3748', limits: [-150, 150] },\r\n      { radius: 15, color: '#4a5568', limits: [-120, 120] },\r\n      { radius: 12, color: '#718096', limits: [-90, 90] }\r\n    ],\r\n    base: { radius: 30, height: 35, color: '#3182ce' },\r\n    endEffector: { radius: 14, color: '#ed8936' }\r\n  };\r\n\r\n  // Smooth animation with easing\r\n  useEffect(() => {\r\n    if (isAnimating && targetAngles) {\r\n      const animate = () => {\r\n        setCurrentAngles(prevAngles => {\r\n          const newAngles = prevAngles.map((current, i) => {\r\n            const target = targetAngles[i] * Math.PI / 180;\r\n            const diff = target - current;\r\n            return current + diff * visualConfig.animationSpeed;\r\n          });\r\n          \r\n          const hasReached = newAngles.every((angle, i) => \r\n            Math.abs(angle - targetAngles[i] * Math.PI / 180) < 0.01\r\n          );\r\n          \r\n          if (!hasReached) {\r\n            animationRef.current = requestAnimationFrame(animate);\r\n          }\r\n          \r\n          return newAngles;\r\n        });\r\n      };\r\n      \r\n      animationRef.current = requestAnimationFrame(animate);\r\n    }\r\n    \r\n    return () => {\r\n      if (animationRef.current) {\r\n        cancelAnimationFrame(animationRef.current);\r\n      }\r\n    };\r\n  }, [isAnimating, targetAngles, visualConfig.animationSpeed]);\r\n\r\n  // Update current angles when joint angles change\r\n  useEffect(() => {\r\n    if (!isAnimating) {\r\n      setCurrentAngles(jointAngles.map(angle => angle * Math.PI / 180));\r\n    }\r\n  }, [jointAngles, isAnimating]);\r\n\r\n  // Calculate forward kinematics\r\n  const calculateForwardKinematics = useCallback((angles) => {\r\n    const [θ1, θ2, θ3] = angles;\r\n    const [L1, L2, L3] = robotConfig.links.map(link => link.length);\r\n    \r\n    const positions = [];\r\n    \r\n    // Base position (origin)\r\n    positions.push({ x: 0, y: 0, angle: 0 });\r\n    \r\n    // Joint 1 position\r\n    positions.push({\r\n      x: L1 * Math.cos(θ1),\r\n      y: L1 * Math.sin(θ1),\r\n      angle: θ1\r\n    });\r\n    \r\n    // Joint 2 position\r\n    positions.push({\r\n      x: positions[1].x + L2 * Math.cos(θ1 + θ2),\r\n      y: positions[1].y + L2 * Math.sin(θ1 + θ2),\r\n      angle: θ1 + θ2\r\n    });\r\n    \r\n    // End effector position\r\n    positions.push({\r\n      x: positions[2].x + L3 * Math.cos(θ1 + θ2 + θ3),\r\n      y: positions[2].y + L3 * Math.sin(θ1 + θ2 + θ3),\r\n      angle: θ1 + θ2 + θ3\r\n    });\r\n    \r\n    return positions;\r\n  }, []);\r\n\r\n  // Update trajectory\r\n  useEffect(() => {\r\n    const positions = calculateForwardKinematics(currentAngles);\r\n    const endEffector = positions[positions.length - 1];\r\n    \r\n    if (visualConfig.showTrajectory && isAnimating) {\r\n      trajectoryRef.current.push({ ...endEffector, timestamp: Date.now() });\r\n      // Keep only last 100 points\r\n      if (trajectoryRef.current.length > 100) {\r\n        trajectoryRef.current = trajectoryRef.current.slice(-100);\r\n      }\r\n    }\r\n  }, [currentAngles, visualConfig.showTrajectory, isAnimating, calculateForwardKinematics]);\r\n\r\n  // Clear trajectory when needed\r\n  const clearTrajectory = () => {\r\n    trajectoryRef.current = [];\r\n  };\r\n\r\n  // Drawing functions\r\n  const drawGrid = (ctx, canvas, centerX, centerY) => {\r\n    if (!visualConfig.showGrid) return;\r\n    \r\n    ctx.save();\r\n    ctx.strokeStyle = '#f7fafc';\r\n    ctx.lineWidth = 1;\r\n    \r\n    const gridSize = 40 * visualConfig.zoom;\r\n    const offsetX = (centerX + visualConfig.centerX) % gridSize;\r\n    const offsetY = (centerY + visualConfig.centerY) % gridSize;\r\n    \r\n    // Vertical lines\r\n    for (let x = offsetX; x < canvas.width; x += gridSize) {\r\n      ctx.beginPath();\r\n      ctx.moveTo(x, 0);\r\n      ctx.lineTo(x, canvas.height);\r\n      ctx.stroke();\r\n    }\r\n    \r\n    // Horizontal lines\r\n    for (let y = offsetY; y < canvas.height; y += gridSize) {\r\n      ctx.beginPath();\r\n      ctx.moveTo(0, y);\r\n      ctx.lineTo(canvas.width, y);\r\n      ctx.stroke();\r\n    }\r\n    \r\n    ctx.restore();\r\n  };\r\n\r\n  const drawWorkspace = (ctx, centerX, centerY) => {\r\n    if (!visualConfig.showWorkspace) return;\r\n    \r\n    const [L1, L2, L3] = robotConfig.links.map(link => link.length * visualConfig.zoom);\r\n    const maxReach = L1 + L2 + L3;\r\n    const minReach = Math.abs(L1 - L2 - L3);\r\n    \r\n    ctx.save();\r\n    ctx.strokeStyle = '#e2e8f0';\r\n    ctx.lineWidth = 2;\r\n    ctx.setLineDash([8, 4]);\r\n    \r\n    // Maximum reach circle\r\n    ctx.beginPath();\r\n    ctx.arc(centerX, centerY, maxReach, 0, 2 * Math.PI);\r\n    ctx.stroke();\r\n    \r\n    // Minimum reach circle (if exists)\r\n    if (minReach > 10) {\r\n      ctx.strokeStyle = '#fed7d7';\r\n      ctx.beginPath();\r\n      ctx.arc(centerX, centerY, minReach, 0, 2 * Math.PI);\r\n      ctx.stroke();\r\n    }\r\n    \r\n    // Add workspace labels\r\n    ctx.fillStyle = '#a0aec0';\r\n    ctx.font = '12px Arial';\r\n    ctx.fillText(`Max: ${(maxReach / visualConfig.zoom).toFixed(0)}px`, \r\n                centerX + maxReach + 10, centerY);\r\n    \r\n    ctx.restore();\r\n  };\r\n\r\n  const drawCoordinateSystem = (ctx, centerX, centerY) => {\r\n    ctx.save();\r\n    ctx.lineWidth = 3;\r\n    const axisLength = 80 * visualConfig.zoom;\r\n    \r\n    // X-axis (red)\r\n    ctx.strokeStyle = '#f56565';\r\n    ctx.beginPath();\r\n    ctx.moveTo(centerX, centerY);\r\n    ctx.lineTo(centerX + axisLength, centerY);\r\n    ctx.stroke();\r\n    \r\n    // Arrow head for X\r\n    ctx.fillStyle = '#f56565';\r\n    ctx.beginPath();\r\n    ctx.moveTo(centerX + axisLength, centerY);\r\n    ctx.lineTo(centerX + axisLength - 12, centerY - 6);\r\n    ctx.lineTo(centerX + axisLength - 12, centerY + 6);\r\n    ctx.fill();\r\n    \r\n    // Y-axis (green)\r\n    ctx.strokeStyle = '#48bb78';\r\n    ctx.beginPath();\r\n    ctx.moveTo(centerX, centerY);\r\n    ctx.lineTo(centerX, centerY - axisLength);\r\n    ctx.stroke();\r\n    \r\n    // Arrow head for Y\r\n    ctx.fillStyle = '#48bb78';\r\n    ctx.beginPath();\r\n    ctx.moveTo(centerX, centerY - axisLength);\r\n    ctx.lineTo(centerX - 6, centerY - axisLength + 12);\r\n    ctx.lineTo(centerX + 6, centerY - axisLength + 12);\r\n    ctx.fill();\r\n    \r\n    // Labels\r\n    ctx.font = 'bold 16px Arial';\r\n    ctx.fillStyle = '#f56565';\r\n    ctx.fillText('X', centerX + axisLength + 15, centerY + 6);\r\n    ctx.fillStyle = '#48bb78';\r\n    ctx.fillText('Y', centerX + 8, centerY - axisLength - 10);\r\n    \r\n    ctx.restore();\r\n  };\r\n\r\n  const drawRobotBase = (ctx, centerX, centerY) => {\r\n    const { radius, height, color } = robotConfig.base;\r\n    const scaledRadius = radius * visualConfig.zoom;\r\n    const scaledHeight = height * visualConfig.zoom;\r\n    \r\n    // Base shadow\r\n    ctx.save();\r\n    ctx.fillStyle = 'rgba(0, 0, 0, 0.15)';\r\n    ctx.beginPath();\r\n    ctx.ellipse(centerX + 4, centerY + 4, scaledRadius, scaledRadius * 0.3, 0, 0, 2 * Math.PI);\r\n    ctx.fill();\r\n    \r\n    // Base cylinder\r\n    const gradient = ctx.createLinearGradient(\r\n      centerX - scaledRadius, centerY, \r\n      centerX + scaledRadius, centerY\r\n    );\r\n    gradient.addColorStop(0, '#2b6cb7');\r\n    gradient.addColorStop(0.5, color);\r\n    gradient.addColorStop(1, '#1a4780');\r\n    \r\n    ctx.fillStyle = gradient;\r\n    ctx.fillRect(centerX - scaledRadius, centerY - scaledHeight/2, \r\n                scaledRadius * 2, scaledHeight);\r\n    \r\n    // Base top\r\n    ctx.fillStyle = '#4299e1';\r\n    ctx.beginPath();\r\n    ctx.ellipse(centerX, centerY - scaledHeight/2, scaledRadius, scaledRadius * 0.3, 0, 0, 2 * Math.PI);\r\n    ctx.fill();\r\n    \r\n    // Base bottom\r\n    ctx.fillStyle = '#1a4780';\r\n    ctx.beginPath();\r\n    ctx.ellipse(centerX, centerY + scaledHeight/2, scaledRadius, scaledRadius * 0.3, 0, 0, 2 * Math.PI);\r\n    ctx.fill();\r\n    \r\n    ctx.restore();\r\n  };\r\n\r\n  const drawLink = (ctx, start, end, link, linkIndex) => {\r\n    const dx = end.x - start.x;\r\n    const dy = end.y - start.y;\r\n    const length = Math.sqrt(dx * dx + dy * dy);\r\n    const angle = Math.atan2(dy, dx);\r\n    const width = link.width * visualConfig.zoom;\r\n    \r\n    ctx.save();\r\n    ctx.translate(start.x, start.y);\r\n    ctx.rotate(angle);\r\n    \r\n    // Link shadow\r\n    ctx.fillStyle = 'rgba(0, 0, 0, 0.1)';\r\n    ctx.fillRect(3, 3, length, width);\r\n    \r\n    // Link gradient\r\n    const gradient = ctx.createLinearGradient(0, -width/2, 0, width/2);\r\n    gradient.addColorStop(0, '#ffffff');\r\n    gradient.addColorStop(0.3, link.color);\r\n    gradient.addColorStop(0.7, link.color);\r\n    gradient.addColorStop(1, '#000000');\r\n    \r\n    ctx.fillStyle = gradient;\r\n    ctx.fillRect(0, -width/2, length, width);\r\n    \r\n    // Link outline\r\n    ctx.strokeStyle = '#2d3748';\r\n    ctx.lineWidth = 1;\r\n    ctx.strokeRect(0, -width/2, length, width);\r\n    \r\n    // Link label\r\n    if (visualConfig.showJointLabels) {\r\n      ctx.fillStyle = '#ffffff';\r\n      ctx.font = `bold ${Math.max(10, 12 * visualConfig.zoom)}px Arial`;\r\n      ctx.textAlign = 'center';\r\n      ctx.fillText(link.name, length/2, 4);\r\n    }\r\n    \r\n    ctx.restore();\r\n  };\r\n\r\n  const drawJoint = (ctx, position, joint, angle, index) => {\r\n    const radius = joint.radius * visualConfig.zoom;\r\n    \r\n    // Joint shadow\r\n    ctx.save();\r\n    ctx.fillStyle = 'rgba(0, 0, 0, 0.2)';\r\n    ctx.beginPath();\r\n    ctx.arc(position.x + 3, position.y + 3, radius + 2, 0, 2 * Math.PI);\r\n    ctx.fill();\r\n    \r\n    // Joint body gradient\r\n    const gradient = ctx.createRadialGradient(\r\n      position.x - radius/3, position.y - radius/3, 0,\r\n      position.x, position.y, radius\r\n    );\r\n    gradient.addColorStop(0, '#e2e8f0');\r\n    gradient.addColorStop(1, joint.color);\r\n    \r\n    ctx.fillStyle = gradient;\r\n    ctx.beginPath();\r\n    ctx.arc(position.x, position.y, radius, 0, 2 * Math.PI);\r\n    ctx.fill();\r\n    \r\n    // Joint outline\r\n    ctx.strokeStyle = '#1a202c';\r\n    ctx.lineWidth = 2;\r\n    ctx.stroke();\r\n    \r\n    // Angle indicator\r\n    if (Math.abs(angle) > 0.1) {\r\n      ctx.strokeStyle = '#fbb03b';\r\n      ctx.lineWidth = 4;\r\n      ctx.beginPath();\r\n      ctx.arc(position.x, position.y, radius - 4, 0, angle);\r\n      ctx.stroke();\r\n    }\r\n    \r\n    // Joint label\r\n    if (visualConfig.showJointLabels) {\r\n      ctx.fillStyle = '#ffffff';\r\n      ctx.font = `bold ${Math.max(10, 14 * visualConfig.zoom)}px Arial`;\r\n      ctx.textAlign = 'center';\r\n      ctx.fillText(`J${index + 1}`, position.x, position.y + 5);\r\n    }\r\n    \r\n    ctx.restore();\r\n  };\r\n\r\n  const drawEndEffector = (ctx, position, isAtTarget = false) => {\r\n    const radius = robotConfig.endEffector.radius * visualConfig.zoom;\r\n    \r\n    // Glow effect if at target\r\n    if (isAtTarget || showTargetReached) {\r\n      ctx.save();\r\n      ctx.shadowColor = '#48bb78';\r\n      ctx.shadowBlur = 25 * visualConfig.zoom;\r\n      ctx.fillStyle = '#48bb78';\r\n      ctx.beginPath();\r\n      ctx.arc(position.x, position.y, radius + 8, 0, 2 * Math.PI);\r\n      ctx.fill();\r\n      ctx.restore();\r\n    }\r\n    \r\n    // End effector gradient\r\n    const gradient = ctx.createRadialGradient(\r\n      position.x - radius/3, position.y - radius/3, 0,\r\n      position.x, position.y, radius\r\n    );\r\n    gradient.addColorStop(0, '#fed7aa');\r\n    gradient.addColorStop(1, robotConfig.endEffector.color);\r\n    \r\n    ctx.fillStyle = gradient;\r\n    ctx.beginPath();\r\n    ctx.arc(position.x, position.y, radius, 0, 2 * Math.PI);\r\n    ctx.fill();\r\n    \r\n    // End effector cross\r\n    ctx.strokeStyle = '#ffffff';\r\n    ctx.lineWidth = 3;\r\n    ctx.beginPath();\r\n    ctx.moveTo(position.x - radius/2, position.y);\r\n    ctx.lineTo(position.x + radius/2, position.y);\r\n    ctx.moveTo(position.x, position.y - radius/2);\r\n    ctx.lineTo(position.x, position.y + radius/2);\r\n    ctx.stroke();\r\n    \r\n    // Position coordinates\r\n    if (visualConfig.showJointLabels) {\r\n      ctx.fillStyle = '#2d3748';\r\n      ctx.font = `${Math.max(8, 10 * visualConfig.zoom)}px Arial`;\r\n      ctx.textAlign = 'center';\r\n      const x = ((position.x - canvasRef.current.width/2 - visualConfig.centerX) / visualConfig.zoom).toFixed(0);\r\n      const y = (-(position.y - canvasRef.current.height/2 - visualConfig.centerY) / visualConfig.zoom).toFixed(0);\r\n      ctx.fillText(`(${x}, ${y})`, position.x, position.y + radius + 15);\r\n    }\r\n  };\r\n\r\n  const drawTrajectory = (ctx, centerX, centerY) => {\r\n    if (!visualConfig.showTrajectory || trajectoryRef.current.length < 2) return;\r\n    \r\n    ctx.save();\r\n    ctx.strokeStyle = '#9f7aea';\r\n    ctx.lineWidth = 3;\r\n    ctx.globalAlpha = 0.8;\r\n    ctx.setLineDash([5, 5]);\r\n    \r\n    ctx.beginPath();\r\n    trajectoryRef.current.forEach((point, index) => {\r\n      const x = centerX + point.x * visualConfig.zoom + visualConfig.centerX;\r\n      const y = centerY - point.y * visualConfig.zoom + visualConfig.centerY;\r\n      \r\n      if (index === 0) {\r\n        ctx.moveTo(x, y);\r\n      } else {\r\n        ctx.lineTo(x, y);\r\n      }\r\n    });\r\n    ctx.stroke();\r\n    \r\n    // Draw trajectory points\r\n    trajectoryRef.current.forEach((point, index) => {\r\n      if (index % 5 === 0) { // Every 5th point\r\n        const x = centerX + point.x * visualConfig.zoom + visualConfig.centerX;\r\n        const y = centerY - point.y * visualConfig.zoom + visualConfig.centerY;\r\n        \r\n        ctx.fillStyle = '#9f7aea';\r\n        ctx.globalAlpha = 0.6;\r\n        ctx.beginPath();\r\n        ctx.arc(x, y, 3, 0, 2 * Math.PI);\r\n        ctx.fill();\r\n      }\r\n    });\r\n    \r\n    ctx.restore();\r\n  };\r\n\r\n  const drawTargetPosition = (ctx, centerX, centerY) => {\r\n    if (!targetAngles) return;\r\n    \r\n    const targetPositions = calculateForwardKinematics(\r\n      targetAngles.map(angle => angle * Math.PI / 180)\r\n    );\r\n    const targetEnd = targetPositions[targetPositions.length - 1];\r\n    \r\n    const x = centerX + targetEnd.x * visualConfig.zoom + visualConfig.centerX;\r\n    const y = centerY - targetEnd.y * visualConfig.zoom + visualConfig.centerY;\r\n    \r\n    // Pulsing target marker\r\n    const time = Date.now() * 0.005;\r\n    const pulseRadius = (12 + Math.sin(time) * 4) * visualConfig.zoom;\r\n    \r\n    ctx.save();\r\n    \r\n    // Outer pulse\r\n    ctx.fillStyle = 'rgba(239, 68, 68, 0.3)';\r\n    ctx.beginPath();\r\n    ctx.arc(x, y, pulseRadius + 5, 0, 2 * Math.PI);\r\n    ctx.fill();\r\n    \r\n    // Main target\r\n    ctx.fillStyle = '#ef4444';\r\n    ctx.beginPath();\r\n    ctx.arc(x, y, pulseRadius, 0, 2 * Math.PI);\r\n    ctx.fill();\r\n    \r\n    // Target cross\r\n    ctx.strokeStyle = '#ffffff';\r\n    ctx.lineWidth = 2;\r\n    ctx.beginPath();\r\n    ctx.moveTo(x - pulseRadius/2, y);\r\n    ctx.lineTo(x + pulseRadius/2, y);\r\n    ctx.moveTo(x, y - pulseRadius/2);\r\n    ctx.lineTo(x, y + pulseRadius/2);\r\n    ctx.stroke();\r\n    \r\n    // Target label\r\n    ctx.fillStyle = '#1a202c';\r\n    ctx.font = `bold ${Math.max(10, 12 * visualConfig.zoom)}px Arial`;\r\n    ctx.textAlign = 'center';\r\n    ctx.fillText('TARGET', x, y - pulseRadius - 10);\r\n    \r\n    ctx.restore();\r\n  };\r\n\r\n  // Main drawing function\r\n  const drawRobot = useCallback(() => {\r\n    const canvas = canvasRef.current;\r\n    if (!canvas) return;\r\n    \r\n    const ctx = canvas.getContext('2d');\r\n    const centerX = canvas.width / 2 + visualConfig.centerX;\r\n    const centerY = canvas.height / 2 + visualConfig.centerY;\r\n    \r\n    // Clear canvas with gradient background\r\n    const bgGradient = ctx.createLinearGradient(0, 0, 0, canvas.height);\r\n    bgGradient.addColorStop(0, '#f7fafc');\r\n    bgGradient.addColorStop(1, '#edf2f7');\r\n    ctx.fillStyle = bgGradient;\r\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n    \r\n    // Draw components in order\r\n    drawGrid(ctx, canvas, centerX, centerY);\r\n    drawWorkspace(ctx, centerX, centerY);\r\n    drawTrajectory(ctx, centerX, centerY);\r\n    drawCoordinateSystem(ctx, centerX, centerY);\r\n    \r\n    // Calculate robot positions\r\n    const positions = calculateForwardKinematics(currentAngles);\r\n    const screenPositions = positions.map(pos => ({\r\n      x: centerX + pos.x * visualConfig.zoom,\r\n      y: centerY - pos.y * visualConfig.zoom,\r\n      angle: pos.angle\r\n    }));\r\n    \r\n    // Draw robot components\r\n    drawRobotBase(ctx, centerX, centerY);\r\n    \r\n    // Draw links\r\n    for (let i = 0; i < robotConfig.links.length; i++) {\r\n      drawLink(\r\n        ctx,\r\n        screenPositions[i],\r\n        screenPositions[i + 1],\r\n        robotConfig.links[i],\r\n        i\r\n      );\r\n    }\r\n    \r\n    // Draw joints\r\n    robotConfig.joints.forEach((joint, index) => {\r\n      drawJoint(ctx, screenPositions[index], joint, currentAngles[index], index);\r\n    });\r\n    \r\n    // Draw end effector\r\n    const isAtTarget = targetAngles && \r\n      currentAngles.every((angle, i) => \r\n        Math.abs(angle - targetAngles[i] * Math.PI / 180) < 0.05\r\n      );\r\n    drawEndEffector(ctx, screenPositions[screenPositions.length - 1], isAtTarget);\r\n    \r\n    // Draw target position\r\n    drawTargetPosition(ctx, centerX, centerY);\r\n    \r\n    // Draw status information\r\n    drawStatusPanel(ctx, canvas);\r\n    \r\n  }, [currentAngles, targetAngles, visualConfig, calculateForwardKinematics, showTargetReached]);\r\n\r\n  const drawStatusPanel = (ctx, canvas) => {\r\n    ctx.save();\r\n    \r\n    // Status panel background\r\n    ctx.fillStyle = 'rgba(255, 255, 255, 0.95)';\r\n    ctx.fillRect(10, 10, 220, 140);\r\n    ctx.strokeStyle = '#e2e8f0';\r\n    ctx.lineWidth = 2;\r\n    ctx.strokeRect(10, 10, 220, 140);\r\n    \r\n    // Status panel content\r\n    ctx.fillStyle = '#2d3748';\r\n    ctx.font = 'bold 16px Arial';\r\n    ctx.fillText('Robot Status', 20, 30);\r\n    \r\n    ctx.font = '12px Arial';\r\n    currentAngles.forEach((angle, i) => {\r\n      const degrees = (angle * 180 / Math.PI).toFixed(1);\r\n      const isWithinLimits = Math.abs(parseFloat(degrees)) <= robotConfig.joints[i].limits[1];\r\n      \r\n      ctx.fillStyle = isWithinLimits ? '#2d3748' : '#e53e3e';\r\n      ctx.fillText(`Joint ${i + 1}: ${degrees}°`, 20, 50 + i * 18);\r\n    });\r\n    \r\n    // End effector position\r\n    const endPos = calculateForwardKinematics(currentAngles)[3];\r\n    ctx.fillStyle = '#2d3748';\r\n    ctx.fillText(`End Effector:`, 20, 110);\r\n    ctx.fillText(`X: ${endPos.x.toFixed(1)} Y: ${endPos.y.toFixed(1)}`, 20, 125);\r\n    \r\n    // Performance info\r\n    ctx.fillStyle = '#718096';\r\n    ctx.font = '10px Arial';\r\n    ctx.fillText(`Zoom: ${(visualConfig.zoom * 100).toFixed(0)}%`, 20, 140);\r\n    \r\n    ctx.restore();\r\n  };\r\n\r\n  // Update visualization when angles change\r\n  useEffect(() => {\r\n    drawRobot();\r\n  }, [drawRobot]);\r\n\r\n  // Handle mouse interactions\r\n  const handleMouseWheel = (e) => {\r\n    e.preventDefault();\r\n    const zoomFactor = e.deltaY > 0 ? 0.9 : 1.1;\r\n    setVisualConfig(prev => ({\r\n      ...prev,\r\n      zoom: Math.max(0.2, Math.min(3.0, prev.zoom * zoomFactor))\r\n    }));\r\n  };\r\n\r\n  const handleMouseMove = (e) => {\r\n    if (e.buttons === 1) { // Left mouse button\r\n      const dx = e.movementX;\r\n      const dy = e.movementY;\r\n      setVisualConfig(prev => ({\r\n        ...prev,\r\n        centerX: prev.centerX + dx,\r\n        centerY: prev.centerY + dy\r\n      }));\r\n    }\r\n  };\r\n\r\n  const resetView = () => {\r\n    setVisualConfig(prev => ({\r\n      ...prev,\r\n      zoom: 1.0,\r\n      centerX: 0,\r\n      centerY: 0\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ position: 'relative', width: '100%', height: '100%' }}>\r\n      {/* Main Canvas */}\r\n      <canvas\r\n        ref={canvasRef}\r\n        width={600}\r\n        height={450}\r\n        onWheel={handleMouseWheel}\r\n        onMouseMove={handleMouseMove}\r\n        style={{\r\n          border: '2px solid #e2e8f0',\r\n          borderRadius: '8px',\r\n          cursor: 'grab',\r\n          width: '100%',\r\n          height: '100%',\r\n          maxWidth: '600px',\r\n          maxHeight: '450px'\r\n        }}\r\n        onMouseDown={(e) => {\r\n          e.target.style.cursor = 'grabbing';\r\n        }}\r\n        onMouseUp={(e) => {\r\n          e.target.style.cursor = 'grab';\r\n        }}\r\n      />\r\n      \r\n      {/* Control Overlay */}\r\n      <Box sx={{\r\n        position: 'absolute',\r\n        top: 8,\r\n        right: 8,\r\n        bgcolor: 'rgba(255, 255, 255, 0.95)',\r\n        p: 1.5,\r\n        borderRadius: 2,\r\n        boxShadow: 2,\r\n        minWidth: '200px'\r\n      }}>\r\n        <Typography variant=\"subtitle2\" gutterBottom sx={{ fontWeight: 'bold' }}>\r\n          Visualization Controls\r\n        </Typography>\r\n        \r\n        <Box display=\"flex\" flexDirection=\"column\" gap={1}>\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                size=\"small\"\r\n                checked={visualConfig.showWorkspace}\r\n                onChange={(e) => setVisualConfig(prev => ({\r\n                  ...prev,\r\n                  showWorkspace: e.target.checked\r\n                }))}\r\n              />\r\n            }\r\n            label=\"Workspace\"\r\n            sx={{ fontSize: '12px' }}\r\n          />\r\n          \r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                size=\"small\"\r\n                checked={visualConfig.showTrajectory}\r\n                onChange={(e) => setVisualConfig(prev => ({\r\n                  ...prev,\r\n                  showTrajectory: e.target.checked\r\n                }))}\r\n              />\r\n            }\r\n            label=\"Trajectory\"\r\n          />\r\n          \r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                size=\"small\"\r\n                checked={visualConfig.showGrid}\r\n                onChange={(e) => setVisualConfig(prev => ({\r\n                  ...prev,\r\n                  showGrid: e.target.checked\r\n                }))}\r\n              />\r\n            }\r\n            label=\"Grid\"\r\n          />\r\n          \r\n          <Box sx={{ mt: 1 }}>\r\n            <Typography variant=\"caption\" gutterBottom>\r\n              Animation Speed\r\n            </Typography>\r\n            <Slider\r\n              size=\"small\"\r\n              value={visualConfig.animationSpeed}\r\n              onChange={(e, value) => setVisualConfig(prev => ({\r\n                ...prev,\r\n                animationSpeed: value\r\n              }))}\r\n              min={0.01}\r\n              max={0.2}\r\n              step={0.01}\r\n              sx={{ width: '100%' }}\r\n            />\r\n          </Box>\r\n          \r\n          <Box display=\"flex\" gap={1} mt={1}>\r\n            <Tooltip title=\"Reset View\">\r\n              <IconButton size=\"small\" onClick={resetView}>\r\n                <CenterFocusStrong fontSize=\"small\" />\r\n              </IconButton>\r\n            </Tooltip>\r\n            \r\n            <Tooltip title=\"Clear Trajectory\">\r\n              <IconButton size=\"small\" onClick={clearTrajectory}>\r\n                <Timeline fontSize=\"small\" />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default RobotVisualizer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}