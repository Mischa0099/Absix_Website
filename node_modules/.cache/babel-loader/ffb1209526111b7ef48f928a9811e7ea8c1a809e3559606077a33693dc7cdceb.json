{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\misch\\\\Downloads\\\\absix-workstation-web-main\\\\absix-workstation-web-main\\\\frontend\\\\src\\\\components\\\\common\\\\Notification.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Snackbar, Alert, Slide, IconButton, Box } from '@mui/material';\nimport { Close } from '@mui/icons-material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Notification = ({\n  open,\n  message,\n  severity = 'info',\n  duration = 6000,\n  onClose,\n  position = {\n    vertical: 'bottom',\n    horizontal: 'left'\n  },\n  action = null\n}) => {\n  _s();\n  const [isOpen, setIsOpen] = useState(open);\n  useEffect(() => {\n    setIsOpen(open);\n  }, [open]);\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setIsOpen(false);\n    if (onClose) {\n      onClose();\n    }\n  };\n  const SlideTransition = props => {\n    return /*#__PURE__*/_jsxDEV(Slide, {\n      ...props,\n      direction: \"up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(Snackbar, {\n    open: isOpen,\n    autoHideDuration: duration,\n    onClose: handleClose,\n    anchorOrigin: position,\n    TransitionComponent: SlideTransition,\n    children: /*#__PURE__*/_jsxDEV(Alert, {\n      severity: severity,\n      onClose: handleClose,\n      action: action || /*#__PURE__*/_jsxDEV(IconButton, {\n        size: \"small\",\n        \"aria-label\": \"close\",\n        color: \"inherit\",\n        onClick: handleClose,\n        children: /*#__PURE__*/_jsxDEV(Close, {\n          fontSize: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this),\n      sx: {\n        minWidth: 300\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n// Notification hook for easy usage\n_s(Notification, \"4ZYdqYkF1f/gMMptffuOvuhdR7g=\");\n_c = Notification;\nexport const useNotification = () => {\n  _s2();\n  const [notification, setNotification] = useState({\n    open: false,\n    message: '',\n    severity: 'info'\n  });\n  const showNotification = (message, severity = 'info', duration = 6000) => {\n    setNotification({\n      open: true,\n      message,\n      severity,\n      duration\n    });\n  };\n  const hideNotification = () => {\n    setNotification(prev => ({\n      ...prev,\n      open: false\n    }));\n  };\n  return {\n    notification,\n    showNotification,\n    hideNotification\n  };\n};\n_s2(useNotification, \"7tT2WbJdeEWciIwG1qCLzmyIgq4=\");\nexport default Notification;\nvar _c;\n$RefreshReg$(_c, \"Notification\");","map":{"version":3,"names":["React","useState","useEffect","Snackbar","Alert","Slide","IconButton","Box","Close","jsxDEV","_jsxDEV","Notification","open","message","severity","duration","onClose","position","vertical","horizontal","action","_s","isOpen","setIsOpen","handleClose","event","reason","SlideTransition","props","direction","fileName","_jsxFileName","lineNumber","columnNumber","autoHideDuration","anchorOrigin","TransitionComponent","children","size","color","onClick","fontSize","sx","minWidth","_c","useNotification","_s2","notification","setNotification","showNotification","hideNotification","prev","$RefreshReg$"],"sources":["C:/Users/misch/Downloads/absix-workstation-web-main/absix-workstation-web-main/frontend/src/components/common/Notification.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { \r\n  Snackbar, \r\n  Alert, \r\n  Slide, \r\n  IconButton,\r\n  Box\r\n} from '@mui/material';\r\nimport { Close } from '@mui/icons-material';\r\n\r\nconst Notification = ({ \r\n  open, \r\n  message, \r\n  severity = 'info', \r\n  duration = 6000, \r\n  onClose,\r\n  position = { vertical: 'bottom', horizontal: 'left' },\r\n  action = null\r\n}) => {\r\n  const [isOpen, setIsOpen] = useState(open);\r\n\r\n  useEffect(() => {\r\n    setIsOpen(open);\r\n  }, [open]);\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setIsOpen(false);\r\n    if (onClose) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  const SlideTransition = (props) => {\r\n    return <Slide {...props} direction=\"up\" />;\r\n  };\r\n\r\n  return (\r\n    <Snackbar\r\n      open={isOpen}\r\n      autoHideDuration={duration}\r\n      onClose={handleClose}\r\n      anchorOrigin={position}\r\n      TransitionComponent={SlideTransition}\r\n    >\r\n      <Alert \r\n        severity={severity} \r\n        onClose={handleClose}\r\n        action={\r\n          action || (\r\n            <IconButton\r\n              size=\"small\"\r\n              aria-label=\"close\"\r\n              color=\"inherit\"\r\n              onClick={handleClose}\r\n            >\r\n              <Close fontSize=\"small\" />\r\n            </IconButton>\r\n          )\r\n        }\r\n        sx={{ minWidth: 300 }}\r\n      >\r\n        {message}\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n};\r\n\r\n// Notification hook for easy usage\r\nexport const useNotification = () => {\r\n  const [notification, setNotification] = useState({\r\n    open: false,\r\n    message: '',\r\n    severity: 'info'\r\n  });\r\n\r\n  const showNotification = (message, severity = 'info', duration = 6000) => {\r\n    setNotification({\r\n      open: true,\r\n      message,\r\n      severity,\r\n      duration\r\n    });\r\n  };\r\n\r\n  const hideNotification = () => {\r\n    setNotification(prev => ({ ...prev, open: false }));\r\n  };\r\n\r\n  return {\r\n    notification,\r\n    showNotification,\r\n    hideNotification\r\n  };\r\n};\r\n\r\nexport default Notification;\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SACEC,QAAQ,EACRC,KAAK,EACLC,KAAK,EACLC,UAAU,EACVC,GAAG,QACE,eAAe;AACtB,SAASC,KAAK,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,YAAY,GAAGA,CAAC;EACpBC,IAAI;EACJC,OAAO;EACPC,QAAQ,GAAG,MAAM;EACjBC,QAAQ,GAAG,IAAI;EACfC,OAAO;EACPC,QAAQ,GAAG;IAAEC,QAAQ,EAAE,QAAQ;IAAEC,UAAU,EAAE;EAAO,CAAC;EACrDC,MAAM,GAAG;AACX,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGtB,QAAQ,CAACW,IAAI,CAAC;EAE1CV,SAAS,CAAC,MAAM;IACdqB,SAAS,CAACX,IAAI,CAAC;EACjB,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAEV,MAAMY,WAAW,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;IACrC,IAAIA,MAAM,KAAK,WAAW,EAAE;MAC1B;IACF;IACAH,SAAS,CAAC,KAAK,CAAC;IAChB,IAAIP,OAAO,EAAE;MACXA,OAAO,CAAC,CAAC;IACX;EACF,CAAC;EAED,MAAMW,eAAe,GAAIC,KAAK,IAAK;IACjC,oBAAOlB,OAAA,CAACL,KAAK;MAAA,GAAKuB,KAAK;MAAEC,SAAS,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC5C,CAAC;EAED,oBACEvB,OAAA,CAACP,QAAQ;IACPS,IAAI,EAAEU,MAAO;IACbY,gBAAgB,EAAEnB,QAAS;IAC3BC,OAAO,EAAEQ,WAAY;IACrBW,YAAY,EAAElB,QAAS;IACvBmB,mBAAmB,EAAET,eAAgB;IAAAU,QAAA,eAErC3B,OAAA,CAACN,KAAK;MACJU,QAAQ,EAAEA,QAAS;MACnBE,OAAO,EAAEQ,WAAY;MACrBJ,MAAM,EACJA,MAAM,iBACJV,OAAA,CAACJ,UAAU;QACTgC,IAAI,EAAC,OAAO;QACZ,cAAW,OAAO;QAClBC,KAAK,EAAC,SAAS;QACfC,OAAO,EAAEhB,WAAY;QAAAa,QAAA,eAErB3B,OAAA,CAACF,KAAK;UAACiC,QAAQ,EAAC;QAAO;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChB,CAEf;MACDS,EAAE,EAAE;QAAEC,QAAQ,EAAE;MAAI,CAAE;MAAAN,QAAA,EAErBxB;IAAO;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEf,CAAC;;AAED;AAAAZ,EAAA,CA5DMV,YAAY;AAAAiC,EAAA,GAAZjC,YAAY;AA6DlB,OAAO,MAAMkC,eAAe,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACnC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAG/C,QAAQ,CAAC;IAC/CW,IAAI,EAAE,KAAK;IACXC,OAAO,EAAE,EAAE;IACXC,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEF,MAAMmC,gBAAgB,GAAGA,CAACpC,OAAO,EAAEC,QAAQ,GAAG,MAAM,EAAEC,QAAQ,GAAG,IAAI,KAAK;IACxEiC,eAAe,CAAC;MACdpC,IAAI,EAAE,IAAI;MACVC,OAAO;MACPC,QAAQ;MACRC;IACF,CAAC,CAAC;EACJ,CAAC;EAED,MAAMmC,gBAAgB,GAAGA,CAAA,KAAM;IAC7BF,eAAe,CAACG,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAEvC,IAAI,EAAE;IAAM,CAAC,CAAC,CAAC;EACrD,CAAC;EAED,OAAO;IACLmC,YAAY;IACZE,gBAAgB;IAChBC;EACF,CAAC;AACH,CAAC;AAACJ,GAAA,CAzBWD,eAAe;AA2B5B,eAAelC,YAAY;AAAC,IAAAiC,EAAA;AAAAQ,YAAA,CAAAR,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}