{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\misch\\\\Downloads\\\\absix-workstation-web-main\\\\absix-workstation-web-main\\\\frontend\\\\src\\\\pages\\\\ChallengesListPage.jsx\",\n  _s = $RefreshSig$();\n// // src/pages/ChallengesListPage.jsx\n// import React, { useEffect } from 'react';\n// import { useSelector, useDispatch } from 'react-redux';\n// import { Container, Grid, Typography, Box, Paper, Card, CardContent, Button, Chip } from '@mui/material';\n// import { useNavigate } from 'react-router-dom';\n// import { PlayArrow, CheckCircle, Lock } from '@mui/icons-material';\n// import { fetchChallenges } from '../store/challengeSlice';\n// import LoadingSpinner from '../components/common/LoadingSpinner';\n\n// const ChallengesListPage = () => {\n//   const navigate = useNavigate();\n//   const dispatch = useDispatch();\n//   const { user } = useSelector(state => state.auth);\n//   const { challenges, userProgress, loading, error } = useSelector(state => state.challenges);\n\n//   useEffect(() => {\n//     dispatch(fetchChallenges());\n//   }, [dispatch]);\n\n//   const handleChallengeClick = (challengeId) => {\n//     navigate(`/challenges/${challengeId}`);\n//   };\n\n//   if (loading) {\n//     return (\n//       <Box className=\"flex-center\" style={{ minHeight: '60vh' }}>\n//         <LoadingSpinner message=\"Loading challenges...\" />\n//       </Box>\n//     );\n//   }\n\n//   return (\n//     <Container maxWidth=\"xl\">\n//       <Box sx={{ py: 4 }}>\n//         {/* Header */}\n//         <Typography variant=\"h3\" component=\"h1\" gutterBottom className=\"text-center\">\n//           ü§ñ Robotics Challenges\n//         </Typography>\n//         <Typography variant=\"h6\" color=\"text.secondary\" gutterBottom className=\"text-center\" sx={{ mb: 4 }}>\n//           Complete hands-on robotics challenges to build your skills\n//         </Typography>\n\n//         {/* Debug Info - Remove this after testing */}\n//         <Paper sx={{ p: 2, mb: 4, bgcolor: 'rgba(255,255,255,0.05)' }}>\n//           <Typography variant=\"subtitle2\" gutterBottom>\n//             üîç Debug Info:\n//           </Typography>\n//           <Typography variant=\"body2\">\n//             ‚Ä¢ Challenges loaded: {challenges?.length || 0}<br/>\n//             ‚Ä¢ Loading: {loading ? 'Yes' : 'No'}<br/>\n//             ‚Ä¢ Error: {error || 'None'}<br/>\n//             ‚Ä¢ User authenticated: {user ? `Yes (${user.username})` : 'No'}\n//           </Typography>\n//         </Paper>\n\n//         {/* Error State */}\n//         {error && (\n//           <Paper sx={{ p: 3, mb: 4, bgcolor: 'error.dark' }}>\n//             <Typography variant=\"h6\" color=\"error.light\">\n//               ‚ùå Error Loading Challenges\n//             </Typography>\n//             <Typography variant=\"body2\" color=\"error.light\">\n//               {error}\n//             </Typography>\n//             <Button \n//               variant=\"outlined\" \n//               onClick={() => dispatch(fetchChallenges())}\n//               sx={{ mt: 2 }}\n//             >\n//               Retry\n//             </Button>\n//           </Paper>\n//         )}\n\n//         {/* Challenges Grid */}\n//         {challenges && challenges.length > 0 ? (\n//           <Grid container spacing={3}>\n//             {challenges.map((challenge, index) => (\n//               <Grid item key={challenge.id || index} xs={12} sm={6} md={4} lg={3}>\n//                 <Card \n//                   sx={{ \n//                     height: '100%',\n//                     display: 'flex',\n//                     flexDirection: 'column',\n//                     cursor: 'pointer',\n//                     transition: 'transform 0.2s, box-shadow 0.2s',\n//                     '&:hover': {\n//                       transform: 'translateY(-4px)',\n//                       boxShadow: 4\n//                     },\n//                     bgcolor: challenge.is_completed ? 'rgba(76, 175, 80, 0.1)' : \n//                            challenge.is_unlocked ? 'background.paper' : 'rgba(158, 158, 158, 0.1)'\n//                   }}\n//                   onClick={() => challenge.is_unlocked && handleChallengeClick(challenge.id)}\n//                 >\n//                   <CardContent sx={{ flexGrow: 1, p: 3 }}>\n//                     {/* Challenge Status Icon */}\n//                     <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n//                       <Typography variant=\"h6\" component=\"h3\">\n//                         Challenge {challenge.id || index + 1}\n//                       </Typography>\n//                       {challenge.is_completed ? (\n//                         <CheckCircle color=\"success\" />\n//                       ) : challenge.is_unlocked ? (\n//                         <PlayArrow color=\"primary\" />\n//                       ) : (\n//                         <Lock color=\"disabled\" />\n//                       )}\n//                     </Box>\n\n//                     {/* Challenge Title */}\n//                     <Typography variant=\"h6\" gutterBottom>\n//                       {challenge.title || `Challenge ${index + 1}`}\n//                     </Typography>\n\n//                     {/* Challenge Description */}\n//                     <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\n//                       {challenge.description || 'Complete this robotics challenge to earn points and improve your skills.'}\n//                     </Typography>\n\n//                     {/* Difficulty Badge */}\n//                     <Box sx={{ mb: 2 }}>\n//                       <Chip\n//                         label={challenge.difficulty || 'Beginner'}\n//                         size=\"small\"\n//                         color={\n//                           challenge.difficulty === 'Expert' ? 'error' :\n//                           challenge.difficulty === 'Advanced' ? 'warning' :\n//                           challenge.difficulty === 'Intermediate' ? 'info' : 'success'\n//                         }\n//                       />\n//                     </Box>\n\n//                     {/* Challenge Stats */}\n//                     <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n//                       <Typography variant=\"body2\" color=\"text.secondary\">\n//                         {challenge.estimated_time || 30} min\n//                       </Typography>\n\n//                       {challenge.is_completed && challenge.best_score && (\n//                         <Chip\n//                           label={`Score: ${challenge.best_score}`}\n//                           size=\"small\"\n//                           color=\"success\"\n//                           variant=\"outlined\"\n//                         />\n//                       )}\n//                     </Box>\n\n//                     {/* Challenge Status */}\n//                     <Box sx={{ mt: 2 }}>\n//                       <Chip\n//                         label={\n//                           challenge.is_completed ? 'Completed' :\n//                           challenge.is_unlocked ? 'Available' : 'Locked'\n//                         }\n//                         size=\"small\"\n//                         color={\n//                           challenge.is_completed ? 'success' :\n//                           challenge.is_unlocked ? 'primary' : 'default'\n//                         }\n//                         variant={challenge.is_unlocked ? 'filled' : 'outlined'}\n//                       />\n//                     </Box>\n//                   </CardContent>\n//                 </Card>\n//               </Grid>\n//             ))}\n//           </Grid>\n//         ) : (\n//           /* No Challenges State */\n//           <Paper sx={{ p: 6, textAlign: 'center', bgcolor: 'background.paper' }}>\n//             <Typography variant=\"h5\" gutterBottom>\n//               üöß No Challenges Available\n//             </Typography>\n//             <Typography variant=\"body1\" color=\"text.secondary\" sx={{ mb: 3 }}>\n//               It looks like no challenges have been loaded yet.\n//             </Typography>\n\n//             {/* Create Mock Challenges Button for Testing */}\n//             <Button \n//               variant=\"outlined\" \n//               onClick={() => {\n//                 // Create mock challenges for testing\n//                 const mockChallenges = [\n//                   {\n//                     id: 1,\n//                     title: 'Basic Joint Movement',\n//                     description: 'Learn to control individual robot joints and understand forward kinematics.',\n//                     difficulty: 'Beginner',\n//                     estimated_time: 30,\n//                     is_unlocked: true,\n//                     is_completed: false\n//                   },\n//                   {\n//                     id: 2,\n//                     title: 'Position Control',\n//                     description: 'Move the robot end-effector to specific positions in 3D space.',\n//                     difficulty: 'Intermediate',\n//                     estimated_time: 45,\n//                     is_unlocked: true,\n//                     is_completed: false\n//                   },\n//                   {\n//                     id: 3,\n//                     title: 'Path Planning',\n//                     description: 'Plan and execute smooth trajectories between multiple points.',\n//                     difficulty: 'Advanced',\n//                     estimated_time: 60,\n//                     is_unlocked: false,\n//                     is_completed: false\n//                   }\n//                 ];\n\n//                 // For now, just show alert. In real app, you'd dispatch to store\n//                 alert(`Mock data: ${mockChallenges.length} challenges would be loaded`);\n//                 console.log('Mock challenges:', mockChallenges);\n//               }}\n//               sx={{ mr: 2 }}\n//             >\n//               üîß Load Test Challenges\n//             </Button>\n\n//             <Button \n//               variant=\"contained\"\n//               onClick={() => dispatch(fetchChallenges())}\n//             >\n//               üîÑ Refresh Challenges\n//             </Button>\n//           </Paper>\n//         )}\n\n//         {/* User Progress Summary */}\n//         {userProgress && (\n//           <Paper sx={{ p: 3, mt: 4, bgcolor: 'rgba(25, 118, 210, 0.1)' }}>\n//             <Typography variant=\"h6\" gutterBottom>\n//               üìä Your Progress\n//             </Typography>\n//             <Grid container spacing={2}>\n//               <Grid item xs={6} sm={3}>\n//                 <Typography variant=\"h4\" color=\"primary\">\n//                   {userProgress.challengesCompleted || 0}\n//                 </Typography>\n//                 <Typography variant=\"body2\" color=\"text.secondary\">\n//                   Completed\n//                 </Typography>\n//               </Grid>\n//               <Grid item xs={6} sm={3}>\n//                 <Typography variant=\"h4\" color=\"primary\">\n//                   {userProgress.totalScore || 0}\n//                 </Typography>\n//                 <Typography variant=\"body2\" color=\"text.secondary\">\n//                   Total Score\n//                 </Typography>\n//               </Grid>\n//               <Grid item xs={6} sm={3}>\n//                 <Typography variant=\"h4\" color=\"primary\">\n//                   {userProgress.streakCount || 0}\n//                 </Typography>\n//                 <Typography variant=\"body2\" color=\"text.secondary\">\n//                   Streak\n//                 </Typography>\n//               </Grid>\n//               <Grid item xs={6} sm={3}>\n//                 <Typography variant=\"h4\" color=\"primary\">\n//                   {userProgress.rank || 'Beginner'}\n//                 </Typography>\n//                 <Typography variant=\"body2\" color=\"text.secondary\">\n//                   Rank\n//                 </Typography>\n//               </Grid>\n//             </Grid>\n//           </Paper>\n//         )}\n//       </Box>\n//     </Container>\n//   );\n// };\n\n// export default ChallengesListPage;\n\n// Add this to your ChallengesListPage.jsx temporarily\n\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchChallenges } from '../store/challengeSlice';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DetailedChallengeDebug = () => {\n  _s();\n  var _authState$user, _localStorage$getItem, _apiTestResult$respon;\n  const dispatch = useDispatch();\n  const challengeState = useSelector(state => state.challenges);\n  const authState = useSelector(state => state.auth);\n  const [apiTestResult, setApiTestResult] = useState(null);\n  const [apiLoading, setApiLoading] = useState(false);\n  const testAPI = async () => {\n    setApiLoading(true);\n    setApiTestResult(null);\n    try {\n      const token = localStorage.getItem('token');\n      console.log('Testing API with token:', token ? 'EXISTS' : 'MISSING');\n\n      // Test 1: Basic API health\n      const healthResponse = await fetch('http://localhost:8000/health');\n      console.log('Health check:', healthResponse.status);\n\n      // Test 2: Challenges endpoint without auth\n      const noAuthResponse = await fetch('http://localhost:8000/api/v1/challenges');\n      console.log('No auth response:', noAuthResponse.status);\n\n      // Test 3: Challenges endpoint with auth\n      const authResponse = await fetch('http://localhost:8000/api/v1/challenges', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log('Auth response:', authResponse.status);\n      const responseText = await authResponse.text();\n      console.log('Response body:', responseText);\n      let responseData = null;\n      try {\n        responseData = JSON.parse(responseText);\n      } catch (e) {\n        console.log('Response is not JSON');\n      }\n      setApiTestResult({\n        healthStatus: healthResponse.status,\n        noAuthStatus: noAuthResponse.status,\n        authStatus: authResponse.status,\n        responseBody: responseText,\n        responseData: responseData,\n        token: token ? 'EXISTS' : 'MISSING'\n      });\n    } catch (error) {\n      console.error('API Test Error:', error);\n      setApiTestResult({\n        error: error.message,\n        stack: error.stack\n      });\n    } finally {\n      setApiLoading(false);\n    }\n  };\n  const testReduxFetch = async () => {\n    console.log('Testing Redux fetch...');\n    try {\n      const result = await dispatch(fetchChallenges());\n      console.log('Redux fetch result:', result);\n    } catch (error) {\n      console.error('Redux fetch error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'fixed',\n      top: '10px',\n      right: '10px',\n      width: '400px',\n      maxHeight: '80vh',\n      background: 'rgba(0,0,0,0.95)',\n      color: 'white',\n      padding: '15px',\n      borderRadius: '8px',\n      fontSize: '12px',\n      zIndex: 9999,\n      overflow: 'auto',\n      border: '2px solid #0cc0df'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      style: {\n        margin: '0 0 15px 0',\n        color: '#0cc0df'\n      },\n      children: \"\\uD83D\\uDD0D Challenge Debug Panel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '15px',\n        background: 'rgba(255,255,255,0.1)',\n        padding: '10px',\n        borderRadius: '4px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"\\uD83D\\uDD10 Authentication:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 44\n      }, this), \"\\u2713 isAuthenticated: \", authState.isAuthenticated ? '‚úÖ YES' : '‚ùå NO', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 74\n      }, this), \"\\u2713 user: \", ((_authState$user = authState.user) === null || _authState$user === void 0 ? void 0 : _authState$user.username) || '‚ùå NONE', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 55\n      }, this), \"\\u2713 token in localStorage: \", localStorage.getItem('token') ? '‚úÖ EXISTS' : '‚ùå MISSING', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 92\n      }, this), \"\\u2713 token starts with: \", ((_localStorage$getItem = localStorage.getItem('token')) === null || _localStorage$getItem === void 0 ? void 0 : _localStorage$getItem.substring(0, 10)) || 'N/A', \"...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '15px',\n        background: 'rgba(255,255,255,0.1)',\n        padding: '10px',\n        borderRadius: '4px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"\\uD83C\\uDFEA Redux Challenge State:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 51\n      }, this), \"\\u2713 challenges: \", challengeState.challenges ? `Array(${challengeState.challenges.length})` : 'null/undefined', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 116\n      }, this), \"\\u2713 loading: \", challengeState.loading ? '‚è≥ YES' : '‚úÖ NO', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 63\n      }, this), \"\\u2713 error: \", challengeState.error ? `‚ùå ${challengeState.error}` : '‚úÖ NO', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 79\n      }, this), \"\\u2713 userProgress: \", challengeState.userProgress ? '‚úÖ EXISTS' : '‚ùå NONE']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 7\n    }, this), apiTestResult && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '15px',\n        background: 'rgba(255,255,255,0.1)',\n        padding: '10px',\n        borderRadius: '4px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"\\uD83C\\uDF10 API Test Results:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 48\n      }, this), apiTestResult.error ? /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: '#ff6b6b'\n        },\n        children: [\"\\u274C Error: \", apiTestResult.error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"\\u2713 Health: \", apiTestResult.healthStatus, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 53\n        }, this), \"\\u2713 No Auth: \", apiTestResult.noAuthStatus, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 54\n        }, this), \"\\u2713 With Auth: \", apiTestResult.authStatus, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 54\n        }, this), \"\\u2713 Response: \", (_apiTestResult$respon = apiTestResult.responseBody) === null || _apiTestResult$respon === void 0 ? void 0 : _apiTestResult$respon.substring(0, 100), \"...\"]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '15px',\n        background: 'rgba(255,255,255,0.1)',\n        padding: '10px',\n        borderRadius: '4px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"\\uD83D\\uDCCA Raw Challenge Data:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 48\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        style: {\n          fontSize: '10px',\n          maxHeight: '150px',\n          overflow: 'auto',\n          background: 'rgba(0,0,0,0.5)',\n          padding: '5px',\n          margin: '5px 0'\n        },\n        children: JSON.stringify(challengeState, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        gap: '8px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: testAPI,\n        disabled: apiLoading,\n        style: {\n          background: '#0cc0df',\n          color: 'white',\n          border: 'none',\n          padding: '8px 12px',\n          borderRadius: '4px',\n          cursor: 'pointer',\n          fontSize: '11px'\n        },\n        children: apiLoading ? '‚è≥ Testing...' : 'üî¨ Test API Endpoints'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: testReduxFetch,\n        style: {\n          background: '#28a745',\n          color: 'white',\n          border: 'none',\n          padding: '8px 12px',\n          borderRadius: '4px',\n          cursor: 'pointer',\n          fontSize: '11px'\n        },\n        children: \"\\uD83D\\uDD04 Test Redux Fetch\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          localStorage.clear();\n          window.location.reload();\n        },\n        style: {\n          background: '#dc3545',\n          color: 'white',\n          border: 'none',\n          padding: '8px 12px',\n          borderRadius: '4px',\n          cursor: 'pointer',\n          fontSize: '11px'\n        },\n        children: \"\\uD83E\\uDDF9 Clear All & Reload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          const panel = document.querySelector('[data-debug-panel]');\n          if (panel) panel.remove();\n        },\n        style: {\n          background: '#6c757d',\n          color: 'white',\n          border: 'none',\n          padding: '8px 12px',\n          borderRadius: '4px',\n          cursor: 'pointer',\n          fontSize: '11px'\n        },\n        children: \"\\u274C Close Panel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 361,\n    columnNumber: 5\n  }, this);\n};\n_s(DetailedChallengeDebug, \"KfNE91XIveMt2v1q49DjAht8W58=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = DetailedChallengeDebug;\nexport default DetailedChallengeDebug;\nvar _c;\n$RefreshReg$(_c, \"DetailedChallengeDebug\");","map":{"version":3,"names":["React","useState","useSelector","useDispatch","fetchChallenges","jsxDEV","_jsxDEV","Fragment","_Fragment","DetailedChallengeDebug","_s","_authState$user","_localStorage$getItem","_apiTestResult$respon","dispatch","challengeState","state","challenges","authState","auth","apiTestResult","setApiTestResult","apiLoading","setApiLoading","testAPI","token","localStorage","getItem","console","log","healthResponse","fetch","status","noAuthResponse","authResponse","headers","responseText","text","responseData","JSON","parse","e","healthStatus","noAuthStatus","authStatus","responseBody","error","message","stack","testReduxFetch","result","style","position","top","right","width","maxHeight","background","color","padding","borderRadius","fontSize","zIndex","overflow","border","children","margin","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","isAuthenticated","user","username","substring","length","loading","userProgress","stringify","display","flexDirection","gap","onClick","disabled","cursor","clear","window","location","reload","panel","document","querySelector","remove","_c","$RefreshReg$"],"sources":["C:/Users/misch/Downloads/absix-workstation-web-main/absix-workstation-web-main/frontend/src/pages/ChallengesListPage.jsx"],"sourcesContent":["// // src/pages/ChallengesListPage.jsx\r\n// import React, { useEffect } from 'react';\r\n// import { useSelector, useDispatch } from 'react-redux';\r\n// import { Container, Grid, Typography, Box, Paper, Card, CardContent, Button, Chip } from '@mui/material';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import { PlayArrow, CheckCircle, Lock } from '@mui/icons-material';\r\n// import { fetchChallenges } from '../store/challengeSlice';\r\n// import LoadingSpinner from '../components/common/LoadingSpinner';\r\n\r\n// const ChallengesListPage = () => {\r\n//   const navigate = useNavigate();\r\n//   const dispatch = useDispatch();\r\n//   const { user } = useSelector(state => state.auth);\r\n//   const { challenges, userProgress, loading, error } = useSelector(state => state.challenges);\r\n\r\n//   useEffect(() => {\r\n//     dispatch(fetchChallenges());\r\n//   }, [dispatch]);\r\n\r\n//   const handleChallengeClick = (challengeId) => {\r\n//     navigate(`/challenges/${challengeId}`);\r\n//   };\r\n\r\n//   if (loading) {\r\n//     return (\r\n//       <Box className=\"flex-center\" style={{ minHeight: '60vh' }}>\r\n//         <LoadingSpinner message=\"Loading challenges...\" />\r\n//       </Box>\r\n//     );\r\n//   }\r\n\r\n//   return (\r\n//     <Container maxWidth=\"xl\">\r\n//       <Box sx={{ py: 4 }}>\r\n//         {/* Header */}\r\n//         <Typography variant=\"h3\" component=\"h1\" gutterBottom className=\"text-center\">\r\n//           ü§ñ Robotics Challenges\r\n//         </Typography>\r\n//         <Typography variant=\"h6\" color=\"text.secondary\" gutterBottom className=\"text-center\" sx={{ mb: 4 }}>\r\n//           Complete hands-on robotics challenges to build your skills\r\n//         </Typography>\r\n\r\n//         {/* Debug Info - Remove this after testing */}\r\n//         <Paper sx={{ p: 2, mb: 4, bgcolor: 'rgba(255,255,255,0.05)' }}>\r\n//           <Typography variant=\"subtitle2\" gutterBottom>\r\n//             üîç Debug Info:\r\n//           </Typography>\r\n//           <Typography variant=\"body2\">\r\n//             ‚Ä¢ Challenges loaded: {challenges?.length || 0}<br/>\r\n//             ‚Ä¢ Loading: {loading ? 'Yes' : 'No'}<br/>\r\n//             ‚Ä¢ Error: {error || 'None'}<br/>\r\n//             ‚Ä¢ User authenticated: {user ? `Yes (${user.username})` : 'No'}\r\n//           </Typography>\r\n//         </Paper>\r\n\r\n//         {/* Error State */}\r\n//         {error && (\r\n//           <Paper sx={{ p: 3, mb: 4, bgcolor: 'error.dark' }}>\r\n//             <Typography variant=\"h6\" color=\"error.light\">\r\n//               ‚ùå Error Loading Challenges\r\n//             </Typography>\r\n//             <Typography variant=\"body2\" color=\"error.light\">\r\n//               {error}\r\n//             </Typography>\r\n//             <Button \r\n//               variant=\"outlined\" \r\n//               onClick={() => dispatch(fetchChallenges())}\r\n//               sx={{ mt: 2 }}\r\n//             >\r\n//               Retry\r\n//             </Button>\r\n//           </Paper>\r\n//         )}\r\n\r\n//         {/* Challenges Grid */}\r\n//         {challenges && challenges.length > 0 ? (\r\n//           <Grid container spacing={3}>\r\n//             {challenges.map((challenge, index) => (\r\n//               <Grid item key={challenge.id || index} xs={12} sm={6} md={4} lg={3}>\r\n//                 <Card \r\n//                   sx={{ \r\n//                     height: '100%',\r\n//                     display: 'flex',\r\n//                     flexDirection: 'column',\r\n//                     cursor: 'pointer',\r\n//                     transition: 'transform 0.2s, box-shadow 0.2s',\r\n//                     '&:hover': {\r\n//                       transform: 'translateY(-4px)',\r\n//                       boxShadow: 4\r\n//                     },\r\n//                     bgcolor: challenge.is_completed ? 'rgba(76, 175, 80, 0.1)' : \r\n//                            challenge.is_unlocked ? 'background.paper' : 'rgba(158, 158, 158, 0.1)'\r\n//                   }}\r\n//                   onClick={() => challenge.is_unlocked && handleChallengeClick(challenge.id)}\r\n//                 >\r\n//                   <CardContent sx={{ flexGrow: 1, p: 3 }}>\r\n//                     {/* Challenge Status Icon */}\r\n//                     <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\r\n//                       <Typography variant=\"h6\" component=\"h3\">\r\n//                         Challenge {challenge.id || index + 1}\r\n//                       </Typography>\r\n//                       {challenge.is_completed ? (\r\n//                         <CheckCircle color=\"success\" />\r\n//                       ) : challenge.is_unlocked ? (\r\n//                         <PlayArrow color=\"primary\" />\r\n//                       ) : (\r\n//                         <Lock color=\"disabled\" />\r\n//                       )}\r\n//                     </Box>\r\n\r\n//                     {/* Challenge Title */}\r\n//                     <Typography variant=\"h6\" gutterBottom>\r\n//                       {challenge.title || `Challenge ${index + 1}`}\r\n//                     </Typography>\r\n\r\n//                     {/* Challenge Description */}\r\n//                     <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\r\n//                       {challenge.description || 'Complete this robotics challenge to earn points and improve your skills.'}\r\n//                     </Typography>\r\n\r\n//                     {/* Difficulty Badge */}\r\n//                     <Box sx={{ mb: 2 }}>\r\n//                       <Chip\r\n//                         label={challenge.difficulty || 'Beginner'}\r\n//                         size=\"small\"\r\n//                         color={\r\n//                           challenge.difficulty === 'Expert' ? 'error' :\r\n//                           challenge.difficulty === 'Advanced' ? 'warning' :\r\n//                           challenge.difficulty === 'Intermediate' ? 'info' : 'success'\r\n//                         }\r\n//                       />\r\n//                     </Box>\r\n\r\n//                     {/* Challenge Stats */}\r\n//                     <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n//                       <Typography variant=\"body2\" color=\"text.secondary\">\r\n//                         {challenge.estimated_time || 30} min\r\n//                       </Typography>\r\n                      \r\n//                       {challenge.is_completed && challenge.best_score && (\r\n//                         <Chip\r\n//                           label={`Score: ${challenge.best_score}`}\r\n//                           size=\"small\"\r\n//                           color=\"success\"\r\n//                           variant=\"outlined\"\r\n//                         />\r\n//                       )}\r\n//                     </Box>\r\n\r\n//                     {/* Challenge Status */}\r\n//                     <Box sx={{ mt: 2 }}>\r\n//                       <Chip\r\n//                         label={\r\n//                           challenge.is_completed ? 'Completed' :\r\n//                           challenge.is_unlocked ? 'Available' : 'Locked'\r\n//                         }\r\n//                         size=\"small\"\r\n//                         color={\r\n//                           challenge.is_completed ? 'success' :\r\n//                           challenge.is_unlocked ? 'primary' : 'default'\r\n//                         }\r\n//                         variant={challenge.is_unlocked ? 'filled' : 'outlined'}\r\n//                       />\r\n//                     </Box>\r\n//                   </CardContent>\r\n//                 </Card>\r\n//               </Grid>\r\n//             ))}\r\n//           </Grid>\r\n//         ) : (\r\n//           /* No Challenges State */\r\n//           <Paper sx={{ p: 6, textAlign: 'center', bgcolor: 'background.paper' }}>\r\n//             <Typography variant=\"h5\" gutterBottom>\r\n//               üöß No Challenges Available\r\n//             </Typography>\r\n//             <Typography variant=\"body1\" color=\"text.secondary\" sx={{ mb: 3 }}>\r\n//               It looks like no challenges have been loaded yet.\r\n//             </Typography>\r\n            \r\n//             {/* Create Mock Challenges Button for Testing */}\r\n//             <Button \r\n//               variant=\"outlined\" \r\n//               onClick={() => {\r\n//                 // Create mock challenges for testing\r\n//                 const mockChallenges = [\r\n//                   {\r\n//                     id: 1,\r\n//                     title: 'Basic Joint Movement',\r\n//                     description: 'Learn to control individual robot joints and understand forward kinematics.',\r\n//                     difficulty: 'Beginner',\r\n//                     estimated_time: 30,\r\n//                     is_unlocked: true,\r\n//                     is_completed: false\r\n//                   },\r\n//                   {\r\n//                     id: 2,\r\n//                     title: 'Position Control',\r\n//                     description: 'Move the robot end-effector to specific positions in 3D space.',\r\n//                     difficulty: 'Intermediate',\r\n//                     estimated_time: 45,\r\n//                     is_unlocked: true,\r\n//                     is_completed: false\r\n//                   },\r\n//                   {\r\n//                     id: 3,\r\n//                     title: 'Path Planning',\r\n//                     description: 'Plan and execute smooth trajectories between multiple points.',\r\n//                     difficulty: 'Advanced',\r\n//                     estimated_time: 60,\r\n//                     is_unlocked: false,\r\n//                     is_completed: false\r\n//                   }\r\n//                 ];\r\n                \r\n//                 // For now, just show alert. In real app, you'd dispatch to store\r\n//                 alert(`Mock data: ${mockChallenges.length} challenges would be loaded`);\r\n//                 console.log('Mock challenges:', mockChallenges);\r\n//               }}\r\n//               sx={{ mr: 2 }}\r\n//             >\r\n//               üîß Load Test Challenges\r\n//             </Button>\r\n            \r\n//             <Button \r\n//               variant=\"contained\"\r\n//               onClick={() => dispatch(fetchChallenges())}\r\n//             >\r\n//               üîÑ Refresh Challenges\r\n//             </Button>\r\n//           </Paper>\r\n//         )}\r\n\r\n//         {/* User Progress Summary */}\r\n//         {userProgress && (\r\n//           <Paper sx={{ p: 3, mt: 4, bgcolor: 'rgba(25, 118, 210, 0.1)' }}>\r\n//             <Typography variant=\"h6\" gutterBottom>\r\n//               üìä Your Progress\r\n//             </Typography>\r\n//             <Grid container spacing={2}>\r\n//               <Grid item xs={6} sm={3}>\r\n//                 <Typography variant=\"h4\" color=\"primary\">\r\n//                   {userProgress.challengesCompleted || 0}\r\n//                 </Typography>\r\n//                 <Typography variant=\"body2\" color=\"text.secondary\">\r\n//                   Completed\r\n//                 </Typography>\r\n//               </Grid>\r\n//               <Grid item xs={6} sm={3}>\r\n//                 <Typography variant=\"h4\" color=\"primary\">\r\n//                   {userProgress.totalScore || 0}\r\n//                 </Typography>\r\n//                 <Typography variant=\"body2\" color=\"text.secondary\">\r\n//                   Total Score\r\n//                 </Typography>\r\n//               </Grid>\r\n//               <Grid item xs={6} sm={3}>\r\n//                 <Typography variant=\"h4\" color=\"primary\">\r\n//                   {userProgress.streakCount || 0}\r\n//                 </Typography>\r\n//                 <Typography variant=\"body2\" color=\"text.secondary\">\r\n//                   Streak\r\n//                 </Typography>\r\n//               </Grid>\r\n//               <Grid item xs={6} sm={3}>\r\n//                 <Typography variant=\"h4\" color=\"primary\">\r\n//                   {userProgress.rank || 'Beginner'}\r\n//                 </Typography>\r\n//                 <Typography variant=\"body2\" color=\"text.secondary\">\r\n//                   Rank\r\n//                 </Typography>\r\n//               </Grid>\r\n//             </Grid>\r\n//           </Paper>\r\n//         )}\r\n//       </Box>\r\n//     </Container>\r\n//   );\r\n// };\r\n\r\n// export default ChallengesListPage;\r\n\r\n// Add this to your ChallengesListPage.jsx temporarily\r\n\r\nimport React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { fetchChallenges } from '../store/challengeSlice';\r\n\r\nconst DetailedChallengeDebug = () => {\r\n  const dispatch = useDispatch();\r\n  const challengeState = useSelector(state => state.challenges);\r\n  const authState = useSelector(state => state.auth);\r\n  const [apiTestResult, setApiTestResult] = useState(null);\r\n  const [apiLoading, setApiLoading] = useState(false);\r\n\r\n  const testAPI = async () => {\r\n    setApiLoading(true);\r\n    setApiTestResult(null);\r\n\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      console.log('Testing API with token:', token ? 'EXISTS' : 'MISSING');\r\n\r\n      // Test 1: Basic API health\r\n      const healthResponse = await fetch('http://localhost:8000/health');\r\n      console.log('Health check:', healthResponse.status);\r\n\r\n      // Test 2: Challenges endpoint without auth\r\n      const noAuthResponse = await fetch('http://localhost:8000/api/v1/challenges');\r\n      console.log('No auth response:', noAuthResponse.status);\r\n\r\n      // Test 3: Challenges endpoint with auth\r\n      const authResponse = await fetch('http://localhost:8000/api/v1/challenges', {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n      console.log('Auth response:', authResponse.status);\r\n\r\n      const responseText = await authResponse.text();\r\n      console.log('Response body:', responseText);\r\n\r\n      let responseData = null;\r\n      try {\r\n        responseData = JSON.parse(responseText);\r\n      } catch (e) {\r\n        console.log('Response is not JSON');\r\n      }\r\n\r\n      setApiTestResult({\r\n        healthStatus: healthResponse.status,\r\n        noAuthStatus: noAuthResponse.status,\r\n        authStatus: authResponse.status,\r\n        responseBody: responseText,\r\n        responseData: responseData,\r\n        token: token ? 'EXISTS' : 'MISSING'\r\n      });\r\n\r\n    } catch (error) {\r\n      console.error('API Test Error:', error);\r\n      setApiTestResult({\r\n        error: error.message,\r\n        stack: error.stack\r\n      });\r\n    } finally {\r\n      setApiLoading(false);\r\n    }\r\n  };\r\n\r\n  const testReduxFetch = async () => {\r\n    console.log('Testing Redux fetch...');\r\n    try {\r\n      const result = await dispatch(fetchChallenges());\r\n      console.log('Redux fetch result:', result);\r\n    } catch (error) {\r\n      console.error('Redux fetch error:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{\r\n      position: 'fixed',\r\n      top: '10px',\r\n      right: '10px',\r\n      width: '400px',\r\n      maxHeight: '80vh',\r\n      background: 'rgba(0,0,0,0.95)',\r\n      color: 'white',\r\n      padding: '15px',\r\n      borderRadius: '8px',\r\n      fontSize: '12px',\r\n      zIndex: 9999,\r\n      overflow: 'auto',\r\n      border: '2px solid #0cc0df'\r\n    }}>\r\n      <h4 style={{ margin: '0 0 15px 0', color: '#0cc0df' }}>üîç Challenge Debug Panel</h4>\r\n      \r\n      {/* Auth State */}\r\n      <div style={{ marginBottom: '15px', background: 'rgba(255,255,255,0.1)', padding: '10px', borderRadius: '4px' }}>\r\n        <strong>üîê Authentication:</strong><br/>\r\n        ‚úì isAuthenticated: {authState.isAuthenticated ? '‚úÖ YES' : '‚ùå NO'}<br/>\r\n        ‚úì user: {authState.user?.username || '‚ùå NONE'}<br/>\r\n        ‚úì token in localStorage: {localStorage.getItem('token') ? '‚úÖ EXISTS' : '‚ùå MISSING'}<br/>\r\n        ‚úì token starts with: {localStorage.getItem('token')?.substring(0, 10) || 'N/A'}...\r\n      </div>\r\n      \r\n      {/* Redux State */}\r\n      <div style={{ marginBottom: '15px', background: 'rgba(255,255,255,0.1)', padding: '10px', borderRadius: '4px' }}>\r\n        <strong>üè™ Redux Challenge State:</strong><br/>\r\n        ‚úì challenges: {challengeState.challenges ? `Array(${challengeState.challenges.length})` : 'null/undefined'}<br/>\r\n        ‚úì loading: {challengeState.loading ? '‚è≥ YES' : '‚úÖ NO'}<br/>\r\n        ‚úì error: {challengeState.error ? `‚ùå ${challengeState.error}` : '‚úÖ NO'}<br/>\r\n        ‚úì userProgress: {challengeState.userProgress ? '‚úÖ EXISTS' : '‚ùå NONE'}\r\n      </div>\r\n\r\n      {/* API Test Results */}\r\n      {apiTestResult && (\r\n        <div style={{ marginBottom: '15px', background: 'rgba(255,255,255,0.1)', padding: '10px', borderRadius: '4px' }}>\r\n          <strong>üåê API Test Results:</strong><br/>\r\n          {apiTestResult.error ? (\r\n            <span style={{ color: '#ff6b6b' }}>‚ùå Error: {apiTestResult.error}</span>\r\n          ) : (\r\n            <>\r\n              ‚úì Health: {apiTestResult.healthStatus}<br/>\r\n              ‚úì No Auth: {apiTestResult.noAuthStatus}<br/>\r\n              ‚úì With Auth: {apiTestResult.authStatus}<br/>\r\n              ‚úì Response: {apiTestResult.responseBody?.substring(0, 100)}...\r\n            </>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* Raw Data */}\r\n      <div style={{ marginBottom: '15px', background: 'rgba(255,255,255,0.1)', padding: '10px', borderRadius: '4px' }}>\r\n        <strong>üìä Raw Challenge Data:</strong><br/>\r\n        <pre style={{ \r\n          fontSize: '10px', \r\n          maxHeight: '150px', \r\n          overflow: 'auto', \r\n          background: 'rgba(0,0,0,0.5)', \r\n          padding: '5px',\r\n          margin: '5px 0'\r\n        }}>\r\n          {JSON.stringify(challengeState, null, 2)}\r\n        </pre>\r\n      </div>\r\n\r\n      {/* Action Buttons */}\r\n      <div style={{ display: 'flex', flexDirection: 'column', gap: '8px' }}>\r\n        <button \r\n          onClick={testAPI}\r\n          disabled={apiLoading}\r\n          style={{\r\n            background: '#0cc0df',\r\n            color: 'white',\r\n            border: 'none',\r\n            padding: '8px 12px',\r\n            borderRadius: '4px',\r\n            cursor: 'pointer',\r\n            fontSize: '11px'\r\n          }}\r\n        >\r\n          {apiLoading ? '‚è≥ Testing...' : 'üî¨ Test API Endpoints'}\r\n        </button>\r\n        \r\n        <button \r\n          onClick={testReduxFetch}\r\n          style={{\r\n            background: '#28a745',\r\n            color: 'white',\r\n            border: 'none',\r\n            padding: '8px 12px',\r\n            borderRadius: '4px',\r\n            cursor: 'pointer',\r\n            fontSize: '11px'\r\n          }}\r\n        >\r\n          üîÑ Test Redux Fetch\r\n        </button>\r\n        \r\n        <button \r\n          onClick={() => {\r\n            localStorage.clear();\r\n            window.location.reload();\r\n          }}\r\n          style={{\r\n            background: '#dc3545',\r\n            color: 'white',\r\n            border: 'none',\r\n            padding: '8px 12px',\r\n            borderRadius: '4px',\r\n            cursor: 'pointer',\r\n            fontSize: '11px'\r\n          }}\r\n        >\r\n          üßπ Clear All & Reload\r\n        </button>\r\n        \r\n        <button \r\n          onClick={() => {\r\n            const panel = document.querySelector('[data-debug-panel]');\r\n            if (panel) panel.remove();\r\n          }}\r\n          style={{\r\n            background: '#6c757d',\r\n            color: 'white',\r\n            border: 'none',\r\n            padding: '8px 12px',\r\n            borderRadius: '4px',\r\n            cursor: 'pointer',\r\n            fontSize: '11px'\r\n          }}\r\n        >\r\n          ‚ùå Close Panel\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DetailedChallengeDebug;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}