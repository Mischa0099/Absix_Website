{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\misch\\\\Downloads\\\\absix-workstation-web-main\\\\absix-workstation-web-main\\\\frontend\\\\src\\\\components\\\\challenges\\\\ChallengeRunner.jsx\",\n  _s = $RefreshSig$();\n// src/components/challenges/ChallengeRunner.jsx\nimport React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Box, Typography, Button, Alert, LinearProgress, Stepper, Step, StepLabel, Paper } from '@mui/material';\nimport { PlayArrow, Stop, Refresh } from '@mui/icons-material';\nimport Challenge1 from './Challenge1';\nimport ControlPanel from './ControlPanel';\nimport RobotVisualizer from './RobotVisualizer';\nimport ResultsDisplay from './ResultsDisplay';\nimport challengeService from '../../services/challengeService';\n\n// Challenge type constants\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CHALLENGE_TYPES = {\n  MANUAL_MOVEMENT: 'manual_movement',\n  PD_CONTROL: 'pd_control',\n  TRAJECTORY_PLANNING: 'trajectory_planning',\n  INVERSE_KINEMATICS: 'inverse_kinematics',\n  QUIZ: 'quiz'\n};\nconst ChallengeRunner = ({\n  challenge,\n  onComplete\n}) => {\n  _s();\n  const {\n    connected\n  } = useSelector(state => state.robot);\n  const [challengeState, setChallengeState] = useState('not_started'); // not_started, active, completed\n  const [submission, setSubmission] = useState(null);\n  const [result, setResult] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [currentStep, setCurrentStep] = useState(0);\n  const [hardwareRequired, setHardwareRequired] = useState(true);\n  useEffect(() => {\n    // Determine if hardware is required for this challenge\n    const requiresHardware = challenge.type !== CHALLENGE_TYPES.QUIZ;\n    setHardwareRequired(requiresHardware);\n  }, [challenge]);\n  const getChallengeType = challengeId => {\n    // Map challenge IDs to types\n    const typeMap = {\n      1: CHALLENGE_TYPES.MANUAL_MOVEMENT,\n      2: CHALLENGE_TYPES.PD_CONTROL,\n      3: CHALLENGE_TYPES.TRAJECTORY_PLANNING,\n      4: CHALLENGE_TYPES.INVERSE_KINEMATICS,\n      5: CHALLENGE_TYPES.QUIZ\n    };\n    return typeMap[challengeId] || CHALLENGE_TYPES.MANUAL_MOVEMENT;\n  };\n  const startChallenge = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await challengeService.startChallenge(challenge.id);\n      console.log('Challenge started:', response.data);\n      setChallengeState('active');\n      setCurrentStep(1);\n    } catch (err) {\n      setError('Failed to start challenge. Please try again.');\n      console.error('Error starting challenge:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const submitChallenge = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await challengeService.submitChallenge(challenge.id, submission);\n      setResult(response.data);\n      setChallengeState('completed');\n      setCurrentStep(2);\n      if (onComplete) {\n        onComplete(response.data);\n      }\n    } catch (err) {\n      setError('Failed to submit challenge. Please try again.');\n      console.error('Error submitting challenge:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const resetChallenge = () => {\n    setChallengeState('not_started');\n    setSubmission(null);\n    setResult(null);\n    setError(null);\n    setCurrentStep(0);\n  };\n  const renderChallengeContent = () => {\n    const challengeType = challenge.type || getChallengeType(challenge.id);\n    switch (challengeType) {\n      case CHALLENGE_TYPES.MANUAL_MOVEMENT:\n        return /*#__PURE__*/_jsxDEV(Challenge1, {\n          challenge: challenge,\n          onDataChange: setSubmission,\n          onError: setError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this);\n      case CHALLENGE_TYPES.PD_CONTROL:\n        return /*#__PURE__*/_jsxDEV(PDControlChallenge, {\n          challenge: challenge,\n          onDataChange: setSubmission,\n          onError: setError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this);\n      case CHALLENGE_TYPES.QUIZ:\n        return /*#__PURE__*/_jsxDEV(QuizChallenge, {\n          challenge: challenge,\n          onDataChange: setSubmission,\n          onError: setError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(GenericChallenge, {\n          challenge: challenge,\n          onDataChange: setSubmission,\n          onError: setError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this);\n    }\n  };\n\n  // Hardware connection check\n  if (hardwareRequired && !connected) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      className: \"text-center\",\n      sx: {\n        py: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"info\",\n        sx: {\n          mb: 2\n        },\n        children: \"This challenge requires robot hardware. You can still view the challenge content or connect hardware to continue.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: () => setHardwareRequired(false),\n        sx: {\n          mr: 2\n        },\n        children: \"Continue Without Hardware\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: () => window.location.reload(),\n        children: \"Retry Connection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this);\n  }\n  const steps = ['Setup', 'Execute', 'Results'];\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 3,\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        className: \"text-center\",\n        children: [\"Challenge \", challenge.id, \": \", challenge.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        color: \"text.secondary\",\n        className: \"text-center\",\n        children: challenge.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Stepper, {\n          activeStep: currentStep,\n          alternativeLabel: true,\n          children: steps.map(label => /*#__PURE__*/_jsxDEV(Step, {\n            children: /*#__PURE__*/_jsxDEV(StepLabel, {\n              children: label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this)\n          }, label, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mb: 3\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }, this), loading && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(LinearProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"caption\",\n        color: \"text.secondary\",\n        sx: {\n          mt: 1\n        },\n        children: \"Processing...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(RobotVisualizer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), challengeState !== 'not_started' && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 4\n      },\n      children: renderChallengeContent()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 9\n    }, this), challengeState === 'active' && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(ControlPanel, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 9\n    }, this), challengeState === 'completed' && result && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(ResultsDisplay, {\n        result: result,\n        challenge: challenge\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: \"text-center\",\n      sx: {\n        mb: 4\n      },\n      children: [challengeState === 'not_started' && /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        size: \"large\",\n        startIcon: /*#__PURE__*/_jsxDEV(PlayArrow, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 24\n        }, this),\n        onClick: startChallenge,\n        disabled: loading,\n        children: loading ? 'Starting...' : 'Start Challenge'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }, this), challengeState === 'active' && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          gap: 2,\n          justifyContent: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"success\",\n          size: \"large\",\n          startIcon: /*#__PURE__*/_jsxDEV(Stop, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 26\n          }, this),\n          onClick: submitChallenge,\n          disabled: loading || !submission,\n          children: loading ? 'Submitting...' : 'Complete Challenge'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          startIcon: /*#__PURE__*/_jsxDEV(Refresh, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 26\n          }, this),\n          onClick: resetChallenge,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 11\n      }, this), challengeState === 'completed' && /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        startIcon: /*#__PURE__*/_jsxDEV(Refresh, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 24\n        }, this),\n        onClick: resetChallenge,\n        children: \"Try Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this);\n};\n\n// Placeholder components for different challenge types\n_s(ChallengeRunner, \"hO5XkCBR+6c+PvWqaQ2yISNgUUA=\", false, function () {\n  return [useSelector];\n});\n_c = ChallengeRunner;\nconst PDControlChallenge = ({\n  challenge,\n  onDataChange,\n  onError\n}) => {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"PD Control Challenge\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      children: \"Implement PD control to achieve precise robot movements.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 292,\n    columnNumber: 5\n  }, this);\n};\n_c2 = PDControlChallenge;\nconst QuizChallenge = ({\n  challenge,\n  onDataChange,\n  onError\n}) => {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"Knowledge Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      children: \"Answer questions about robotics concepts.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 305,\n    columnNumber: 5\n  }, this);\n};\n_c3 = QuizChallenge;\nconst GenericChallenge = ({\n  challenge,\n  onDataChange,\n  onError\n}) => {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"Challenge Instructions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      children: \"Follow the challenge instructions and use the robot controls below.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 318,\n    columnNumber: 5\n  }, this);\n};\n_c4 = GenericChallenge;\nexport default ChallengeRunner;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"ChallengeRunner\");\n$RefreshReg$(_c2, \"PDControlChallenge\");\n$RefreshReg$(_c3, \"QuizChallenge\");\n$RefreshReg$(_c4, \"GenericChallenge\");","map":{"version":3,"names":["React","useState","useEffect","useSelector","Box","Typography","Button","Alert","LinearProgress","Stepper","Step","StepLabel","Paper","PlayArrow","Stop","Refresh","Challenge1","ControlPanel","RobotVisualizer","ResultsDisplay","challengeService","jsxDEV","_jsxDEV","CHALLENGE_TYPES","MANUAL_MOVEMENT","PD_CONTROL","TRAJECTORY_PLANNING","INVERSE_KINEMATICS","QUIZ","ChallengeRunner","challenge","onComplete","_s","connected","state","robot","challengeState","setChallengeState","submission","setSubmission","result","setResult","loading","setLoading","error","setError","currentStep","setCurrentStep","hardwareRequired","setHardwareRequired","requiresHardware","type","getChallengeType","challengeId","typeMap","startChallenge","response","id","console","log","data","err","submitChallenge","resetChallenge","renderChallengeContent","challengeType","onDataChange","onError","fileName","_jsxFileName","lineNumber","columnNumber","PDControlChallenge","QuizChallenge","GenericChallenge","className","sx","py","children","severity","mb","variant","onClick","mr","window","location","reload","steps","p","gutterBottom","title","color","description","mt","activeStep","alternativeLabel","map","label","size","startIcon","disabled","display","gap","justifyContent","_c","_c2","_c3","_c4","$RefreshReg$"],"sources":["C:/Users/misch/Downloads/absix-workstation-web-main/absix-workstation-web-main/frontend/src/components/challenges/ChallengeRunner.jsx"],"sourcesContent":["// src/components/challenges/ChallengeRunner.jsx\nimport React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { \n  Box, \n  Typography, \n  Button, \n  Alert, \n  LinearProgress,\n  Stepper,\n  Step,\n  StepLabel,\n  Paper\n} from '@mui/material';\nimport { PlayArrow, Stop, Refresh } from '@mui/icons-material';\nimport Challenge1 from './Challenge1';\nimport ControlPanel from './ControlPanel';\nimport RobotVisualizer from './RobotVisualizer';\nimport ResultsDisplay from './ResultsDisplay';\nimport challengeService from '../../services/challengeService';\n\n// Challenge type constants\nconst CHALLENGE_TYPES = {\n  MANUAL_MOVEMENT: 'manual_movement',\n  PD_CONTROL: 'pd_control',\n  TRAJECTORY_PLANNING: 'trajectory_planning',\n  INVERSE_KINEMATICS: 'inverse_kinematics',\n  QUIZ: 'quiz'\n};\n\nconst ChallengeRunner = ({ challenge, onComplete }) => {\n  const { connected } = useSelector(state => state.robot);\n  const [challengeState, setChallengeState] = useState('not_started'); // not_started, active, completed\n  const [submission, setSubmission] = useState(null);\n  const [result, setResult] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [currentStep, setCurrentStep] = useState(0);\n  const [hardwareRequired, setHardwareRequired] = useState(true);\n\n  useEffect(() => {\n    // Determine if hardware is required for this challenge\n    const requiresHardware = challenge.type !== CHALLENGE_TYPES.QUIZ;\n    setHardwareRequired(requiresHardware);\n  }, [challenge]);\n\n  const getChallengeType = (challengeId) => {\n    // Map challenge IDs to types\n    const typeMap = {\n      1: CHALLENGE_TYPES.MANUAL_MOVEMENT,\n      2: CHALLENGE_TYPES.PD_CONTROL,\n      3: CHALLENGE_TYPES.TRAJECTORY_PLANNING,\n      4: CHALLENGE_TYPES.INVERSE_KINEMATICS,\n      5: CHALLENGE_TYPES.QUIZ\n    };\n    return typeMap[challengeId] || CHALLENGE_TYPES.MANUAL_MOVEMENT;\n  };\n\n  const startChallenge = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const response = await challengeService.startChallenge(challenge.id);\n      console.log('Challenge started:', response.data);\n      \n      setChallengeState('active');\n      setCurrentStep(1);\n    } catch (err) {\n      setError('Failed to start challenge. Please try again.');\n      console.error('Error starting challenge:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const submitChallenge = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const response = await challengeService.submitChallenge(challenge.id, submission);\n      \n      setResult(response.data);\n      setChallengeState('completed');\n      setCurrentStep(2);\n      \n      if (onComplete) {\n        onComplete(response.data);\n      }\n    } catch (err) {\n      setError('Failed to submit challenge. Please try again.');\n      console.error('Error submitting challenge:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const resetChallenge = () => {\n    setChallengeState('not_started');\n    setSubmission(null);\n    setResult(null);\n    setError(null);\n    setCurrentStep(0);\n  };\n\n  const renderChallengeContent = () => {\n    const challengeType = challenge.type || getChallengeType(challenge.id);\n    \n    switch (challengeType) {\n      case CHALLENGE_TYPES.MANUAL_MOVEMENT:\n        return (\n          <Challenge1\n            challenge={challenge}\n            onDataChange={setSubmission}\n            onError={setError}\n          />\n        );\n      \n      case CHALLENGE_TYPES.PD_CONTROL:\n        return (\n          <PDControlChallenge\n            challenge={challenge}\n            onDataChange={setSubmission}\n            onError={setError}\n          />\n        );\n      \n      case CHALLENGE_TYPES.QUIZ:\n        return (\n          <QuizChallenge\n            challenge={challenge}\n            onDataChange={setSubmission}\n            onError={setError}\n          />\n        );\n      \n      default:\n        return (\n          <GenericChallenge\n            challenge={challenge}\n            onDataChange={setSubmission}\n            onError={setError}\n          />\n        );\n    }\n  };\n\n  // Hardware connection check\n  if (hardwareRequired && !connected) {\n    return (\n      <Box className=\"text-center\" sx={{ py: 4 }}>\n        <Alert severity=\"info\" sx={{ mb: 2 }}>\n          This challenge requires robot hardware. You can still view the challenge content or connect hardware to continue.\n        </Alert>\n        <Button \n          variant=\"contained\" \n          onClick={() => setHardwareRequired(false)}\n          sx={{ mr: 2 }}\n        >\n          Continue Without Hardware\n        </Button>\n        <Button variant=\"outlined\" onClick={() => window.location.reload()}>\n          Retry Connection\n        </Button>\n      </Box>\n    );\n  }\n\n  const steps = ['Setup', 'Execute', 'Results'];\n\n  return (\n    <Box>\n      {/* Challenge Header */}\n      <Paper sx={{ p: 3, mb: 4 }}>\n        <Typography variant=\"h4\" gutterBottom className=\"text-center\">\n          Challenge {challenge.id}: {challenge.title}\n        </Typography>\n        <Typography variant=\"body1\" color=\"text.secondary\" className=\"text-center\">\n          {challenge.description}\n        </Typography>\n        \n        {/* Progress Stepper */}\n        <Box sx={{ mt: 3 }}>\n          <Stepper activeStep={currentStep} alternativeLabel>\n            {steps.map((label) => (\n              <Step key={label}>\n                <StepLabel>{label}</StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n        </Box>\n      </Paper>\n\n      {/* Error Display */}\n      {error && (\n        <Alert severity=\"error\" sx={{ mb: 3 }}>\n          {error}\n        </Alert>\n      )}\n\n      {/* Loading Progress */}\n      {loading && (\n        <Box sx={{ mb: 3 }}>\n          <LinearProgress />\n          <Typography variant=\"caption\" color=\"text.secondary\" sx={{ mt: 1 }}>\n            Processing...\n          </Typography>\n        </Box>\n      )}\n\n      {/* Robot Visualizer */}\n      <Box sx={{ mb: 4 }}>\n        <RobotVisualizer />\n      </Box>\n\n      {/* Challenge Content */}\n      {challengeState !== 'not_started' && (\n        <Box sx={{ mb: 4 }}>\n          {renderChallengeContent()}\n        </Box>\n      )}\n\n      {/* Control Panel */}\n      {challengeState === 'active' && (\n        <Box sx={{ mb: 4 }}>\n          <ControlPanel />\n        </Box>\n      )}\n\n      {/* Results Display */}\n      {challengeState === 'completed' && result && (\n        <Box sx={{ mb: 4 }}>\n          <ResultsDisplay result={result} challenge={challenge} />\n        </Box>\n      )}\n\n      {/* Action Buttons */}\n      <Box className=\"text-center\" sx={{ mb: 4 }}>\n        {challengeState === 'not_started' && (\n          <Button\n            variant=\"contained\"\n            size=\"large\"\n            startIcon={<PlayArrow />}\n            onClick={startChallenge}\n            disabled={loading}\n          >\n            {loading ? 'Starting...' : 'Start Challenge'}\n          </Button>\n        )}\n\n        {challengeState === 'active' && (\n          <Box sx={{ display: 'flex', gap: 2, justifyContent: 'center' }}>\n            <Button\n              variant=\"contained\"\n              color=\"success\"\n              size=\"large\"\n              startIcon={<Stop />}\n              onClick={submitChallenge}\n              disabled={loading || !submission}\n            >\n              {loading ? 'Submitting...' : 'Complete Challenge'}\n            </Button>\n            \n            <Button\n              variant=\"outlined\"\n              startIcon={<Refresh />}\n              onClick={resetChallenge}\n            >\n              Reset\n            </Button>\n          </Box>\n        )}\n\n        {challengeState === 'completed' && (\n          <Button\n            variant=\"outlined\"\n            startIcon={<Refresh />}\n            onClick={resetChallenge}\n          >\n            Try Again\n          </Button>\n        )}\n      </Box>\n    </Box>\n  );\n};\n\n// Placeholder components for different challenge types\nconst PDControlChallenge = ({ challenge, onDataChange, onError }) => {\n  return (\n    <Box>\n      <Typography variant=\"h6\" gutterBottom>\n        PD Control Challenge\n      </Typography>\n      <Typography variant=\"body1\">\n        Implement PD control to achieve precise robot movements.\n      </Typography>\n    </Box>\n  );\n};\n\nconst QuizChallenge = ({ challenge, onDataChange, onError }) => {\n  return (\n    <Box>\n      <Typography variant=\"h6\" gutterBottom>\n        Knowledge Quiz\n      </Typography>\n      <Typography variant=\"body1\">\n        Answer questions about robotics concepts.\n      </Typography>\n    </Box>\n  );\n};\n\nconst GenericChallenge = ({ challenge, onDataChange, onError }) => {\n  return (\n    <Box>\n      <Typography variant=\"h6\" gutterBottom>\n        Challenge Instructions\n      </Typography>\n      <Typography variant=\"body1\">\n        Follow the challenge instructions and use the robot controls below.\n      </Typography>\n    </Box>\n  );\n};\n\nexport default ChallengeRunner;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}