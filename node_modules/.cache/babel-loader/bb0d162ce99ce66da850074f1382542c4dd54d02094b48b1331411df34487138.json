{"ast":null,"code":"// src/utils/helpers.js\n\n// Math utility functions\nexport const clamp = (value, min, max) => {\n  return Math.min(Math.max(value, min), max);\n};\nexport const clampAngle = (angle, min = -Math.PI, max = Math.PI) => {\n  while (angle > max) angle -= 2 * Math.PI;\n  while (angle < min) angle += 2 * Math.PI;\n  return angle;\n};\n\n// Conversion functions\nexport const degreesToRadians = degrees => {\n  return degrees * Math.PI / 180;\n};\nexport const radiansToDegrees = radians => {\n  return radians * 180 / Math.PI;\n};\n\n// Aliases for consistency\nexport const degToRad = degreesToRadians;\nexport const radToDeg = radiansToDegrees;\n\n// Raw position conversion functions\nexport const degreesToPositionRaw = degrees => {\n  // Convert degrees to raw servo position (0-1023)\n  return Math.round((degrees + 150) / 300 * 1023);\n};\nexport const rawToDegrees = raw => {\n  // Convert raw servo position to degrees\n  return raw / 1023 * 300 - 150;\n};\nexport const degreesToVelocityRaw = degreesPerSec => {\n  // Convert degrees/sec to raw velocity units\n  return Math.round(degreesPerSec * 2.84);\n};\n\n// Format numbers with specified decimal places\nexport const formatNumber = (num, decimals = 2) => {\n  if (typeof num !== 'number' || isNaN(num)) return '0.00';\n  return num.toFixed(decimals);\n};\n\n// Time and date utilities\nexport const now = () => Date.now();\nexport const formatDate = timestamp => {\n  return new Date(timestamp).toLocaleDateString();\n};\nexport const formatDuration = seconds => {\n  if (seconds < 60) {\n    return `${Math.round(seconds)}s`;\n  }\n  const minutes = Math.floor(seconds / 60);\n  const remainingSeconds = Math.round(seconds % 60);\n  return `${minutes}m ${remainingSeconds}s`;\n};\n\n// Performance utilities\nexport const debounce = (func, wait) => {\n  let timeout;\n  return function executedFunction(...args) {\n    const later = () => {\n      clearTimeout(timeout);\n      func(...args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n};\nexport const throttle = (func, limit) => {\n  let inThrottle;\n  return function () {\n    const args = arguments;\n    const context = this;\n    if (!inThrottle) {\n      func.apply(context, args);\n      inThrottle = true;\n      setTimeout(() => inThrottle = false, limit);\n    }\n  };\n};\n\n// Logging utilities\nexport const debugLog = (message, ...args) => {\n  if (process.env.NODE_ENV === 'development') {\n    console.log(`[DEBUG] ${message}`, ...args);\n  }\n};\nexport const errorLog = (message, error) => {\n  console.error(`[ERROR] ${message}`, error);\n};\n\n// Challenge and scoring utilities\nexport const calculateAccuracy = (targetAngles, actualAngles, tolerance = 5) => {\n  if (!targetAngles || !actualAngles || targetAngles.length !== actualAngles.length) {\n    return 0;\n  }\n  const errors = targetAngles.map((target, index) => Math.abs(target - actualAngles[index]));\n  const accurateJoints = errors.filter(error => error <= tolerance).length;\n  return accurateJoints / targetAngles.length * 100;\n};\nexport const calculateProgress = (completed, total) => {\n  if (total === 0) return 0;\n  return Math.min(completed / total * 100, 100);\n};\n\n// Generate random angles for challenges\nexport const generateRandomAngles = (type = 'absolute') => {\n  if (type === 'absolute') {\n    const firstAngle = 5 * Math.floor(Math.random() * 37); // 0-180 in steps of 5\n    let secondAngle, thirdAngle;\n    if (firstAngle > 0) {\n      const minSecond = Math.max(-90, firstAngle - 90);\n      const maxSecond = Math.min(90, firstAngle + 90);\n      secondAngle = 5 * Math.floor(Math.random() * ((maxSecond - minSecond) / 5 + 1)) + minSecond;\n      if (secondAngle > -90) {\n        const minThird = Math.max(-90, secondAngle - 90);\n        const maxThird = Math.min(90, secondAngle + 90);\n        thirdAngle = 5 * Math.floor(Math.random() * ((maxThird - minThird) / 5 + 1)) + minThird;\n      } else {\n        secondAngle = 90;\n        thirdAngle = 75;\n      }\n    } else {\n      secondAngle = 5 * (Math.floor(Math.random() * 37) - 18); // -90 to 90\n      thirdAngle = 5 * (Math.floor(Math.random() * 37) - 18); // -90 to 90\n    }\n    return [firstAngle, secondAngle, thirdAngle];\n  } else {\n    // Relative angles\n    return [5 * Math.floor(Math.random() * 37),\n    // 0-180 in steps of 5\n    5 * (Math.floor(Math.random() * 37) - 18),\n    // -90-90 in steps of 5\n    5 * (Math.floor(Math.random() * 37) - 18) // -90-90 in steps of 5\n    ];\n  }\n};\n\n// UI and display utilities\nexport const getScoreColor = score => {\n  if (score >= 90) return '#4CAF50'; // Green\n  if (score >= 75) return '#2196F3'; // Blue\n  if (score >= 60) return '#FF9800'; // Orange\n  return '#F44336'; // Red\n};\nexport const getDifficultyColor = difficulty => {\n  const colors = {\n    beginner: '#4CAF50',\n    intermediate: '#FF9800',\n    advanced: '#F44336',\n    expert: '#9C27B0'\n  };\n  return colors[difficulty === null || difficulty === void 0 ? void 0 : difficulty.toLowerCase()] || '#888888';\n};\nexport const getRank = (challengesCompleted, totalScore) => {\n  if (challengesCompleted >= 14) return 'Robotics Master';\n  if (challengesCompleted >= 10) return 'Robotics Jedi';\n  if (challengesCompleted >= 8) return 'Robotics Specialist';\n  if (challengesCompleted >= 5) return 'Robotics Beginner';\n  return 'Rising Roboticist';\n};\nexport const getRankColor = rank => {\n  const colors = {\n    'Robotics Master': '#FFD700',\n    'Robotics Jedi': '#C0C0C0',\n    'Robotics Specialist': '#CD7F32',\n    'Robotics Beginner': '#4CAF50',\n    'Rising Roboticist': '#2196F3'\n  };\n  return colors[rank] || '#888888';\n};\nexport const getRankInfo = (challengesCompleted, totalScore) => {\n  const rank = getRank(challengesCompleted, totalScore);\n  const color = getRankColor(rank);\n  return {\n    rank,\n    color\n  };\n};\n\n// Validation utilities\nexport const validateJointAngles = angles => {\n  if (!Array.isArray(angles) || angles.length !== 3) return false;\n  const limits = {\n    min: [-Math.PI, -Math.PI / 2, -Math.PI / 2],\n    max: [Math.PI, Math.PI / 2, Math.PI / 2]\n  };\n  return angles.every((angle, index) => typeof angle === 'number' && !isNaN(angle) && angle >= limits.min[index] && angle <= limits.max[index]);\n};\n\n// Default export for backward compatibility\nconst helpers = {\n  clamp,\n  clampAngle,\n  degreesToRadians,\n  radiansToDegrees,\n  degToRad,\n  radToDeg,\n  degreesToPositionRaw,\n  rawToDegrees,\n  degreesToVelocityRaw,\n  formatNumber,\n  now,\n  formatDate,\n  formatDuration,\n  debounce,\n  throttle,\n  debugLog,\n  errorLog,\n  calculateAccuracy,\n  calculateProgress,\n  generateRandomAngles,\n  getScoreColor,\n  getDifficultyColor,\n  getRank,\n  getRankColor,\n  getRankInfo,\n  validateJointAngles\n};\nexport default helpers;","map":{"version":3,"names":["clamp","value","min","max","Math","clampAngle","angle","PI","degreesToRadians","degrees","radiansToDegrees","radians","degToRad","radToDeg","degreesToPositionRaw","round","rawToDegrees","raw","degreesToVelocityRaw","degreesPerSec","formatNumber","num","decimals","isNaN","toFixed","now","Date","formatDate","timestamp","toLocaleDateString","formatDuration","seconds","minutes","floor","remainingSeconds","debounce","func","wait","timeout","executedFunction","args","later","clearTimeout","setTimeout","throttle","limit","inThrottle","arguments","context","apply","debugLog","message","process","env","NODE_ENV","console","log","errorLog","error","calculateAccuracy","targetAngles","actualAngles","tolerance","length","errors","map","target","index","abs","accurateJoints","filter","calculateProgress","completed","total","generateRandomAngles","type","firstAngle","random","secondAngle","thirdAngle","minSecond","maxSecond","minThird","maxThird","getScoreColor","score","getDifficultyColor","difficulty","colors","beginner","intermediate","advanced","expert","toLowerCase","getRank","challengesCompleted","totalScore","getRankColor","rank","getRankInfo","color","validateJointAngles","angles","Array","isArray","limits","every","helpers"],"sources":["C:/Users/misch/Downloads/absix-workstation-web-main/absix-workstation-web-main/frontend/src/utils/helpers.js"],"sourcesContent":["// src/utils/helpers.js\n\n// Math utility functions\nexport const clamp = (value, min, max) => {\n  return Math.min(Math.max(value, min), max);\n};\n\nexport const clampAngle = (angle, min = -Math.PI, max = Math.PI) => {\n  while (angle > max) angle -= 2 * Math.PI;\n  while (angle < min) angle += 2 * Math.PI;\n  return angle;\n};\n\n// Conversion functions\nexport const degreesToRadians = (degrees) => {\n  return (degrees * Math.PI) / 180;\n};\n\nexport const radiansToDegrees = (radians) => {\n  return (radians * 180) / Math.PI;\n};\n\n// Aliases for consistency\nexport const degToRad = degreesToRadians;\nexport const radToDeg = radiansToDegrees;\n\n// Raw position conversion functions\nexport const degreesToPositionRaw = (degrees) => {\n  // Convert degrees to raw servo position (0-1023)\n  return Math.round(((degrees + 150) / 300) * 1023);\n};\n\nexport const rawToDegrees = (raw) => {\n  // Convert raw servo position to degrees\n  return ((raw / 1023) * 300) - 150;\n};\n\nexport const degreesToVelocityRaw = (degreesPerSec) => {\n  // Convert degrees/sec to raw velocity units\n  return Math.round(degreesPerSec * 2.84);\n};\n\n// Format numbers with specified decimal places\nexport const formatNumber = (num, decimals = 2) => {\n  if (typeof num !== 'number' || isNaN(num)) return '0.00';\n  return num.toFixed(decimals);\n};\n\n// Time and date utilities\nexport const now = () => Date.now();\n\nexport const formatDate = (timestamp) => {\n  return new Date(timestamp).toLocaleDateString();\n};\n\nexport const formatDuration = (seconds) => {\n  if (seconds < 60) {\n    return `${Math.round(seconds)}s`;\n  }\n  const minutes = Math.floor(seconds / 60);\n  const remainingSeconds = Math.round(seconds % 60);\n  return `${minutes}m ${remainingSeconds}s`;\n};\n\n// Performance utilities\nexport const debounce = (func, wait) => {\n  let timeout;\n  return function executedFunction(...args) {\n    const later = () => {\n      clearTimeout(timeout);\n      func(...args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n};\n\nexport const throttle = (func, limit) => {\n  let inThrottle;\n  return function() {\n    const args = arguments;\n    const context = this;\n    if (!inThrottle) {\n      func.apply(context, args);\n      inThrottle = true;\n      setTimeout(() => inThrottle = false, limit);\n    }\n  };\n};\n\n// Logging utilities\nexport const debugLog = (message, ...args) => {\n  if (process.env.NODE_ENV === 'development') {\n    console.log(`[DEBUG] ${message}`, ...args);\n  }\n};\n\nexport const errorLog = (message, error) => {\n  console.error(`[ERROR] ${message}`, error);\n};\n\n// Challenge and scoring utilities\nexport const calculateAccuracy = (targetAngles, actualAngles, tolerance = 5) => {\n  if (!targetAngles || !actualAngles || targetAngles.length !== actualAngles.length) {\n    return 0;\n  }\n  \n  const errors = targetAngles.map((target, index) => \n    Math.abs(target - actualAngles[index])\n  );\n  \n  const accurateJoints = errors.filter(error => error <= tolerance).length;\n  return (accurateJoints / targetAngles.length) * 100;\n};\n\nexport const calculateProgress = (completed, total) => {\n  if (total === 0) return 0;\n  return Math.min((completed / total) * 100, 100);\n};\n\n// Generate random angles for challenges\nexport const generateRandomAngles = (type = 'absolute') => {\n  if (type === 'absolute') {\n    const firstAngle = 5 * Math.floor(Math.random() * 37); // 0-180 in steps of 5\n    let secondAngle, thirdAngle;\n    \n    if (firstAngle > 0) {\n      const minSecond = Math.max(-90, firstAngle - 90);\n      const maxSecond = Math.min(90, firstAngle + 90);\n      secondAngle = 5 * Math.floor(Math.random() * ((maxSecond - minSecond) / 5 + 1)) + minSecond;\n      \n      if (secondAngle > -90) {\n        const minThird = Math.max(-90, secondAngle - 90);\n        const maxThird = Math.min(90, secondAngle + 90);\n        thirdAngle = 5 * Math.floor(Math.random() * ((maxThird - minThird) / 5 + 1)) + minThird;\n      } else {\n        secondAngle = 90;\n        thirdAngle = 75;\n      }\n    } else {\n      secondAngle = 5 * (Math.floor(Math.random() * 37) - 18); // -90 to 90\n      thirdAngle = 5 * (Math.floor(Math.random() * 37) - 18); // -90 to 90\n    }\n    \n    return [firstAngle, secondAngle, thirdAngle];\n  } else {\n    // Relative angles\n    return [\n      5 * Math.floor(Math.random() * 37),      // 0-180 in steps of 5\n      5 * (Math.floor(Math.random() * 37) - 18), // -90-90 in steps of 5\n      5 * (Math.floor(Math.random() * 37) - 18)  // -90-90 in steps of 5\n    ];\n  }\n};\n\n// UI and display utilities\nexport const getScoreColor = (score) => {\n  if (score >= 90) return '#4CAF50'; // Green\n  if (score >= 75) return '#2196F3'; // Blue\n  if (score >= 60) return '#FF9800'; // Orange\n  return '#F44336'; // Red\n};\n\nexport const getDifficultyColor = (difficulty) => {\n  const colors = {\n    beginner: '#4CAF50',\n    intermediate: '#FF9800', \n    advanced: '#F44336',\n    expert: '#9C27B0'\n  };\n  return colors[difficulty?.toLowerCase()] || '#888888';\n};\n\nexport const getRank = (challengesCompleted, totalScore) => {\n  if (challengesCompleted >= 14) return 'Robotics Master';\n  if (challengesCompleted >= 10) return 'Robotics Jedi';\n  if (challengesCompleted >= 8) return 'Robotics Specialist';\n  if (challengesCompleted >= 5) return 'Robotics Beginner';\n  return 'Rising Roboticist';\n};\n\nexport const getRankColor = (rank) => {\n  const colors = {\n    'Robotics Master': '#FFD700',\n    'Robotics Jedi': '#C0C0C0',\n    'Robotics Specialist': '#CD7F32',\n    'Robotics Beginner': '#4CAF50',\n    'Rising Roboticist': '#2196F3'\n  };\n  return colors[rank] || '#888888';\n};\n\nexport const getRankInfo = (challengesCompleted, totalScore) => {\n  const rank = getRank(challengesCompleted, totalScore);\n  const color = getRankColor(rank);\n  return { rank, color };\n};\n\n// Validation utilities\nexport const validateJointAngles = (angles) => {\n  if (!Array.isArray(angles) || angles.length !== 3) return false;\n  \n  const limits = {\n    min: [-Math.PI, -Math.PI/2, -Math.PI/2],\n    max: [Math.PI, Math.PI/2, Math.PI/2]\n  };\n  \n  return angles.every((angle, index) => \n    typeof angle === 'number' && \n    !isNaN(angle) &&\n    angle >= limits.min[index] && \n    angle <= limits.max[index]\n  );\n};\n\n// Default export for backward compatibility\nconst helpers = {\n  clamp,\n  clampAngle,\n  degreesToRadians,\n  radiansToDegrees,\n  degToRad,\n  radToDeg,\n  degreesToPositionRaw,\n  rawToDegrees, \n  degreesToVelocityRaw,\n  formatNumber,\n  now,\n  formatDate,\n  formatDuration,\n  debounce,\n  throttle,\n  debugLog,\n  errorLog,\n  calculateAccuracy,\n  calculateProgress,\n  generateRandomAngles,\n  getScoreColor,\n  getDifficultyColor,\n  getRank,\n  getRankColor,\n  getRankInfo,\n  validateJointAngles\n};\n\nexport default helpers;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}