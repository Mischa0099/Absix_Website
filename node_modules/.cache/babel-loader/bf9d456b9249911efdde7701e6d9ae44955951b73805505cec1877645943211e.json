{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\misch\\\\Downloads\\\\absix-workstation-web-main\\\\absix-workstation-web-main\\\\frontend\\\\src\\\\pages\\\\ChallengesListPage.jsx\",\n  _s = $RefreshSig$();\n// // src/pages/ChallengesListPage.jsx\n// import React, { useEffect } from 'react';\n// import { useSelector, useDispatch } from 'react-redux';\n// import { Container, Grid, Typography, Box, Paper, Card, CardContent, Button, Chip } from '@mui/material';\n// import { useNavigate } from 'react-router-dom';\n// import { PlayArrow, CheckCircle, Lock } from '@mui/icons-material';\n// import { fetchChallenges } from '../store/challengeSlice';\n// import LoadingSpinner from '../components/common/LoadingSpinner';\n\n// const ChallengesListPage = () => {\n//   const navigate = useNavigate();\n//   const dispatch = useDispatch();\n//   const { user } = useSelector(state => state.auth);\n//   const { challenges, userProgress, loading, error } = useSelector(state => state.challenges);\n\n//   useEffect(() => {\n//     dispatch(fetchChallenges());\n//   }, [dispatch]);\n\n//   const handleChallengeClick = (challengeId) => {\n//     navigate(`/challenges/${challengeId}`);\n//   };\n\n//   if (loading) {\n//     return (\n//       <Box className=\"flex-center\" style={{ minHeight: '60vh' }}>\n//         <LoadingSpinner message=\"Loading challenges...\" />\n//       </Box>\n//     );\n//   }\n\n//   return (\n//     <Container maxWidth=\"xl\">\n//       <Box sx={{ py: 4 }}>\n//         {/* Header */}\n//         <Typography variant=\"h3\" component=\"h1\" gutterBottom className=\"text-center\">\n//           ü§ñ Robotics Challenges\n//         </Typography>\n//         <Typography variant=\"h6\" color=\"text.secondary\" gutterBottom className=\"text-center\" sx={{ mb: 4 }}>\n//           Complete hands-on robotics challenges to build your skills\n//         </Typography>\n\n//         {/* Debug Info - Remove this after testing */}\n//         <Paper sx={{ p: 2, mb: 4, bgcolor: 'rgba(255,255,255,0.05)' }}>\n//           <Typography variant=\"subtitle2\" gutterBottom>\n//             üîç Debug Info:\n//           </Typography>\n//           <Typography variant=\"body2\">\n//             ‚Ä¢ Challenges loaded: {challenges?.length || 0}<br/>\n//             ‚Ä¢ Loading: {loading ? 'Yes' : 'No'}<br/>\n//             ‚Ä¢ Error: {error || 'None'}<br/>\n//             ‚Ä¢ User authenticated: {user ? `Yes (${user.username})` : 'No'}\n//           </Typography>\n//         </Paper>\n\n//         {/* Error State */}\n//         {error && (\n//           <Paper sx={{ p: 3, mb: 4, bgcolor: 'error.dark' }}>\n//             <Typography variant=\"h6\" color=\"error.light\">\n//               ‚ùå Error Loading Challenges\n//             </Typography>\n//             <Typography variant=\"body2\" color=\"error.light\">\n//               {error}\n//             </Typography>\n//             <Button \n//               variant=\"outlined\" \n//               onClick={() => dispatch(fetchChallenges())}\n//               sx={{ mt: 2 }}\n//             >\n//               Retry\n//             </Button>\n//           </Paper>\n//         )}\n\n//         {/* Challenges Grid */}\n//         {challenges && challenges.length > 0 ? (\n//           <Grid container spacing={3}>\n//             {challenges.map((challenge, index) => (\n//               <Grid item key={challenge.id || index} xs={12} sm={6} md={4} lg={3}>\n//                 <Card \n//                   sx={{ \n//                     height: '100%',\n//                     display: 'flex',\n//                     flexDirection: 'column',\n//                     cursor: 'pointer',\n//                     transition: 'transform 0.2s, box-shadow 0.2s',\n//                     '&:hover': {\n//                       transform: 'translateY(-4px)',\n//                       boxShadow: 4\n//                     },\n//                     bgcolor: challenge.is_completed ? 'rgba(76, 175, 80, 0.1)' : \n//                            challenge.is_unlocked ? 'background.paper' : 'rgba(158, 158, 158, 0.1)'\n//                   }}\n//                   onClick={() => challenge.is_unlocked && handleChallengeClick(challenge.id)}\n//                 >\n//                   <CardContent sx={{ flexGrow: 1, p: 3 }}>\n//                     {/* Challenge Status Icon */}\n//                     <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n//                       <Typography variant=\"h6\" component=\"h3\">\n//                         Challenge {challenge.id || index + 1}\n//                       </Typography>\n//                       {challenge.is_completed ? (\n//                         <CheckCircle color=\"success\" />\n//                       ) : challenge.is_unlocked ? (\n//                         <PlayArrow color=\"primary\" />\n//                       ) : (\n//                         <Lock color=\"disabled\" />\n//                       )}\n//                     </Box>\n\n//                     {/* Challenge Title */}\n//                     <Typography variant=\"h6\" gutterBottom>\n//                       {challenge.title || `Challenge ${index + 1}`}\n//                     </Typography>\n\n//                     {/* Challenge Description */}\n//                     <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\n//                       {challenge.description || 'Complete this robotics challenge to earn points and improve your skills.'}\n//                     </Typography>\n\n//                     {/* Difficulty Badge */}\n//                     <Box sx={{ mb: 2 }}>\n//                       <Chip\n//                         label={challenge.difficulty || 'Beginner'}\n//                         size=\"small\"\n//                         color={\n//                           challenge.difficulty === 'Expert' ? 'error' :\n//                           challenge.difficulty === 'Advanced' ? 'warning' :\n//                           challenge.difficulty === 'Intermediate' ? 'info' : 'success'\n//                         }\n//                       />\n//                     </Box>\n\n//                     {/* Challenge Stats */}\n//                     <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n//                       <Typography variant=\"body2\" color=\"text.secondary\">\n//                         {challenge.estimated_time || 30} min\n//                       </Typography>\n\n//                       {challenge.is_completed && challenge.best_score && (\n//                         <Chip\n//                           label={`Score: ${challenge.best_score}`}\n//                           size=\"small\"\n//                           color=\"success\"\n//                           variant=\"outlined\"\n//                         />\n//                       )}\n//                     </Box>\n\n//                     {/* Challenge Status */}\n//                     <Box sx={{ mt: 2 }}>\n//                       <Chip\n//                         label={\n//                           challenge.is_completed ? 'Completed' :\n//                           challenge.is_unlocked ? 'Available' : 'Locked'\n//                         }\n//                         size=\"small\"\n//                         color={\n//                           challenge.is_completed ? 'success' :\n//                           challenge.is_unlocked ? 'primary' : 'default'\n//                         }\n//                         variant={challenge.is_unlocked ? 'filled' : 'outlined'}\n//                       />\n//                     </Box>\n//                   </CardContent>\n//                 </Card>\n//               </Grid>\n//             ))}\n//           </Grid>\n//         ) : (\n//           /* No Challenges State */\n//           <Paper sx={{ p: 6, textAlign: 'center', bgcolor: 'background.paper' }}>\n//             <Typography variant=\"h5\" gutterBottom>\n//               üöß No Challenges Available\n//             </Typography>\n//             <Typography variant=\"body1\" color=\"text.secondary\" sx={{ mb: 3 }}>\n//               It looks like no challenges have been loaded yet.\n//             </Typography>\n\n//             {/* Create Mock Challenges Button for Testing */}\n//             <Button \n//               variant=\"outlined\" \n//               onClick={() => {\n//                 // Create mock challenges for testing\n//                 const mockChallenges = [\n//                   {\n//                     id: 1,\n//                     title: 'Basic Joint Movement',\n//                     description: 'Learn to control individual robot joints and understand forward kinematics.',\n//                     difficulty: 'Beginner',\n//                     estimated_time: 30,\n//                     is_unlocked: true,\n//                     is_completed: false\n//                   },\n//                   {\n//                     id: 2,\n//                     title: 'Position Control',\n//                     description: 'Move the robot end-effector to specific positions in 3D space.',\n//                     difficulty: 'Intermediate',\n//                     estimated_time: 45,\n//                     is_unlocked: true,\n//                     is_completed: false\n//                   },\n//                   {\n//                     id: 3,\n//                     title: 'Path Planning',\n//                     description: 'Plan and execute smooth trajectories between multiple points.',\n//                     difficulty: 'Advanced',\n//                     estimated_time: 60,\n//                     is_unlocked: false,\n//                     is_completed: false\n//                   }\n//                 ];\n\n//                 // For now, just show alert. In real app, you'd dispatch to store\n//                 alert(`Mock data: ${mockChallenges.length} challenges would be loaded`);\n//                 console.log('Mock challenges:', mockChallenges);\n//               }}\n//               sx={{ mr: 2 }}\n//             >\n//               üîß Load Test Challenges\n//             </Button>\n\n//             <Button \n//               variant=\"contained\"\n//               onClick={() => dispatch(fetchChallenges())}\n//             >\n//               üîÑ Refresh Challenges\n//             </Button>\n//           </Paper>\n//         )}\n\n//         {/* User Progress Summary */}\n//         {userProgress && (\n//           <Paper sx={{ p: 3, mt: 4, bgcolor: 'rgba(25, 118, 210, 0.1)' }}>\n//             <Typography variant=\"h6\" gutterBottom>\n//               üìä Your Progress\n//             </Typography>\n//             <Grid container spacing={2}>\n//               <Grid item xs={6} sm={3}>\n//                 <Typography variant=\"h4\" color=\"primary\">\n//                   {userProgress.challengesCompleted || 0}\n//                 </Typography>\n//                 <Typography variant=\"body2\" color=\"text.secondary\">\n//                   Completed\n//                 </Typography>\n//               </Grid>\n//               <Grid item xs={6} sm={3}>\n//                 <Typography variant=\"h4\" color=\"primary\">\n//                   {userProgress.totalScore || 0}\n//                 </Typography>\n//                 <Typography variant=\"body2\" color=\"text.secondary\">\n//                   Total Score\n//                 </Typography>\n//               </Grid>\n//               <Grid item xs={6} sm={3}>\n//                 <Typography variant=\"h4\" color=\"primary\">\n//                   {userProgress.streakCount || 0}\n//                 </Typography>\n//                 <Typography variant=\"body2\" color=\"text.secondary\">\n//                   Streak\n//                 </Typography>\n//               </Grid>\n//               <Grid item xs={6} sm={3}>\n//                 <Typography variant=\"h4\" color=\"primary\">\n//                   {userProgress.rank || 'Beginner'}\n//                 </Typography>\n//                 <Typography variant=\"body2\" color=\"text.secondary\">\n//                   Rank\n//                 </Typography>\n//               </Grid>\n//             </Grid>\n//           </Paper>\n//         )}\n//       </Box>\n//     </Container>\n//   );\n// };\n\n// export default ChallengesListPage;\n\n// Add this to your ChallengesListPage.jsx temporarily\n\n// src/pages/ChallengesListPage.jsx\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Container, Grid, Typography, Box, Paper, Card, CardContent, Button, Chip, Alert } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport { PlayArrow, CheckCircle, Lock, Refresh } from '@mui/icons-material';\nimport { fetchChallenges } from '../store/challengeSlice';\nimport LoadingSpinner from '../components/common/LoadingSpinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChallengesListPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const {\n    user\n  } = useSelector(state => state.auth);\n  const {\n    challenges,\n    userProgress,\n    loading,\n    error\n  } = useSelector(state => state.challenges);\n  useEffect(() => {\n    dispatch(fetchChallenges());\n  }, [dispatch]);\n  const handleChallengeClick = challengeId => {\n    navigate(`/challenge/${challengeId}`);\n  };\n  const handleRetry = () => {\n    dispatch(fetchChallenges());\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"xl\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        className: \"flex-center\",\n        style: {\n          minHeight: '60vh'\n        },\n        children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n          message: \"Loading challenges...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"xl\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        py: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        component: \"h1\",\n        gutterBottom: true,\n        className: \"text-center\",\n        children: \"\\uD83E\\uDD16 Robotics Challenges\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        color: \"text.secondary\",\n        gutterBottom: true,\n        className: \"text-center\",\n        sx: {\n          mb: 4\n        },\n        children: \"Complete hands-on robotics challenges to build your skills\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        sx: {\n          mb: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"Unable to load challenges\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          sx: {\n            mb: 2\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          startIcon: /*#__PURE__*/_jsxDEV(Refresh, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 51\n          }, this),\n          onClick: handleRetry,\n          children: \"Try Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 11\n      }, this), challenges && challenges.length > 0 ? /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: challenges.map((challenge, index) => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          lg: 3,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              height: '100%',\n              display: 'flex',\n              flexDirection: 'column',\n              cursor: challenge.is_unlocked !== false ? 'pointer' : 'not-allowed',\n              transition: 'transform 0.2s, box-shadow 0.2s',\n              '&:hover': challenge.is_unlocked !== false ? {\n                transform: 'translateY(-4px)',\n                boxShadow: 4\n              } : {},\n              bgcolor: challenge.is_completed ? 'rgba(76, 175, 80, 0.1)' : challenge.is_unlocked !== false ? 'background.paper' : 'rgba(158, 158, 158, 0.1)',\n              opacity: challenge.is_unlocked === false ? 0.6 : 1\n            },\n            onClick: () => challenge.is_unlocked !== false && handleChallengeClick(challenge.id),\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              sx: {\n                flexGrow: 1,\n                p: 3\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  alignItems: 'center',\n                  mb: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  component: \"h3\",\n                  children: [\"Challenge \", challenge.id || index + 1]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 372,\n                  columnNumber: 23\n                }, this), challenge.is_completed ? /*#__PURE__*/_jsxDEV(CheckCircle, {\n                  color: \"success\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 376,\n                  columnNumber: 25\n                }, this) : challenge.is_unlocked !== false ? /*#__PURE__*/_jsxDEV(PlayArrow, {\n                  color: \"primary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 378,\n                  columnNumber: 25\n                }, this) : /*#__PURE__*/_jsxDEV(Lock, {\n                  color: \"disabled\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 380,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                children: challenge.title || `Challenge ${index + 1}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 385,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                sx: {\n                  mb: 2\n                },\n                children: challenge.description || 'Complete this robotics challenge to earn points and improve your skills.'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  mb: 2\n                },\n                children: /*#__PURE__*/_jsxDEV(Chip, {\n                  label: challenge.difficulty || 'Beginner',\n                  size: \"small\",\n                  color: (challenge.difficulty || '').toLowerCase() === 'expert' ? 'error' : (challenge.difficulty || '').toLowerCase() === 'advanced' ? 'warning' : (challenge.difficulty || '').toLowerCase() === 'intermediate' ? 'info' : 'success'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 396,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 395,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  alignItems: 'center',\n                  mb: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"text.secondary\",\n                  children: [challenge.estimated_time || 30, \" min\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 409,\n                  columnNumber: 23\n                }, this), challenge.is_completed && challenge.best_score && /*#__PURE__*/_jsxDEV(Chip, {\n                  label: `Score: ${challenge.best_score}`,\n                  size: \"small\",\n                  color: \"success\",\n                  variant: \"outlined\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 414,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 408,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  mt: 2\n                },\n                children: /*#__PURE__*/_jsxDEV(Chip, {\n                  label: challenge.is_completed ? 'Completed' : challenge.is_unlocked !== false ? 'Available' : 'Locked',\n                  size: \"small\",\n                  color: challenge.is_completed ? 'success' : challenge.is_unlocked !== false ? 'primary' : 'default',\n                  variant: challenge.is_unlocked !== false ? 'filled' : 'outlined'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 425,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 424,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 17\n          }, this)\n        }, challenge.id || index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 11\n      }, this) : !loading && !error ?\n      /*#__PURE__*/\n      /* No Challenges State */\n      _jsxDEV(Paper, {\n        sx: {\n          p: 6,\n          textAlign: 'center',\n          bgcolor: 'background.paper'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          gutterBottom: true,\n          children: \"\\uD83D\\uDEA7 No Challenges Available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          color: \"text.secondary\",\n          sx: {\n            mb: 3\n          },\n          children: \"It looks like no challenges have been loaded yet. This could be because:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          sx: {\n            mb: 3\n          },\n          children: [\"\\u2022 The backend server is not running\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 50\n          }, this), \"\\u2022 There are no challenges in the database\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 56\n          }, this), \"\\u2022 There's a network connectivity issue\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          startIcon: /*#__PURE__*/_jsxDEV(Refresh, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 26\n          }, this),\n          onClick: handleRetry,\n          sx: {\n            mr: 2\n          },\n          children: \"\\uD83D\\uDD04 Retry Loading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 11\n      }, this) : null, userProgress && /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          p: 3,\n          mt: 4,\n          bgcolor: 'rgba(25, 118, 210, 0.1)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"\\uD83D\\uDCCA Your Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            sm: 3,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              color: \"primary\",\n              children: userProgress.challengesCompleted || 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: \"Completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 480,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            sm: 3,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              color: \"primary\",\n              children: userProgress.totalScore || 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: \"Total Score\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 488,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            sm: 3,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              color: \"primary\",\n              children: userProgress.streakCount || 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 493,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: \"Streak\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 496,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            sm: 3,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              color: \"primary\",\n              children: userProgress.rank || 'Beginner'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 501,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: \"Rank\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 504,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 322,\n    columnNumber: 5\n  }, this);\n};\n_s(ChallengesListPage, \"eMavr7+SU6+x82QgkFZpsvvFSKI=\", false, function () {\n  return [useNavigate, useDispatch, useSelector, useSelector];\n});\n_c = ChallengesListPage;\nexport default ChallengesListPage;\nvar _c;\n$RefreshReg$(_c, \"ChallengesListPage\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","useDispatch","Container","Grid","Typography","Box","Paper","Card","CardContent","Button","Chip","Alert","useNavigate","PlayArrow","CheckCircle","Lock","Refresh","fetchChallenges","LoadingSpinner","jsxDEV","_jsxDEV","ChallengesListPage","_s","navigate","dispatch","user","state","auth","challenges","userProgress","loading","error","handleChallengeClick","challengeId","handleRetry","maxWidth","children","className","style","minHeight","message","fileName","_jsxFileName","lineNumber","columnNumber","sx","py","variant","component","gutterBottom","color","mb","severity","startIcon","onClick","length","container","spacing","map","challenge","index","item","xs","sm","md","lg","height","display","flexDirection","cursor","is_unlocked","transition","transform","boxShadow","bgcolor","is_completed","opacity","id","flexGrow","p","justifyContent","alignItems","title","description","label","difficulty","size","toLowerCase","estimated_time","best_score","mt","textAlign","mr","challengesCompleted","totalScore","streakCount","rank","_c","$RefreshReg$"],"sources":["C:/Users/misch/Downloads/absix-workstation-web-main/absix-workstation-web-main/frontend/src/pages/ChallengesListPage.jsx"],"sourcesContent":["// // src/pages/ChallengesListPage.jsx\r\n// import React, { useEffect } from 'react';\r\n// import { useSelector, useDispatch } from 'react-redux';\r\n// import { Container, Grid, Typography, Box, Paper, Card, CardContent, Button, Chip } from '@mui/material';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import { PlayArrow, CheckCircle, Lock } from '@mui/icons-material';\r\n// import { fetchChallenges } from '../store/challengeSlice';\r\n// import LoadingSpinner from '../components/common/LoadingSpinner';\r\n\r\n// const ChallengesListPage = () => {\r\n//   const navigate = useNavigate();\r\n//   const dispatch = useDispatch();\r\n//   const { user } = useSelector(state => state.auth);\r\n//   const { challenges, userProgress, loading, error } = useSelector(state => state.challenges);\r\n\r\n//   useEffect(() => {\r\n//     dispatch(fetchChallenges());\r\n//   }, [dispatch]);\r\n\r\n//   const handleChallengeClick = (challengeId) => {\r\n//     navigate(`/challenges/${challengeId}`);\r\n//   };\r\n\r\n//   if (loading) {\r\n//     return (\r\n//       <Box className=\"flex-center\" style={{ minHeight: '60vh' }}>\r\n//         <LoadingSpinner message=\"Loading challenges...\" />\r\n//       </Box>\r\n//     );\r\n//   }\r\n\r\n//   return (\r\n//     <Container maxWidth=\"xl\">\r\n//       <Box sx={{ py: 4 }}>\r\n//         {/* Header */}\r\n//         <Typography variant=\"h3\" component=\"h1\" gutterBottom className=\"text-center\">\r\n//           ü§ñ Robotics Challenges\r\n//         </Typography>\r\n//         <Typography variant=\"h6\" color=\"text.secondary\" gutterBottom className=\"text-center\" sx={{ mb: 4 }}>\r\n//           Complete hands-on robotics challenges to build your skills\r\n//         </Typography>\r\n\r\n//         {/* Debug Info - Remove this after testing */}\r\n//         <Paper sx={{ p: 2, mb: 4, bgcolor: 'rgba(255,255,255,0.05)' }}>\r\n//           <Typography variant=\"subtitle2\" gutterBottom>\r\n//             üîç Debug Info:\r\n//           </Typography>\r\n//           <Typography variant=\"body2\">\r\n//             ‚Ä¢ Challenges loaded: {challenges?.length || 0}<br/>\r\n//             ‚Ä¢ Loading: {loading ? 'Yes' : 'No'}<br/>\r\n//             ‚Ä¢ Error: {error || 'None'}<br/>\r\n//             ‚Ä¢ User authenticated: {user ? `Yes (${user.username})` : 'No'}\r\n//           </Typography>\r\n//         </Paper>\r\n\r\n//         {/* Error State */}\r\n//         {error && (\r\n//           <Paper sx={{ p: 3, mb: 4, bgcolor: 'error.dark' }}>\r\n//             <Typography variant=\"h6\" color=\"error.light\">\r\n//               ‚ùå Error Loading Challenges\r\n//             </Typography>\r\n//             <Typography variant=\"body2\" color=\"error.light\">\r\n//               {error}\r\n//             </Typography>\r\n//             <Button \r\n//               variant=\"outlined\" \r\n//               onClick={() => dispatch(fetchChallenges())}\r\n//               sx={{ mt: 2 }}\r\n//             >\r\n//               Retry\r\n//             </Button>\r\n//           </Paper>\r\n//         )}\r\n\r\n//         {/* Challenges Grid */}\r\n//         {challenges && challenges.length > 0 ? (\r\n//           <Grid container spacing={3}>\r\n//             {challenges.map((challenge, index) => (\r\n//               <Grid item key={challenge.id || index} xs={12} sm={6} md={4} lg={3}>\r\n//                 <Card \r\n//                   sx={{ \r\n//                     height: '100%',\r\n//                     display: 'flex',\r\n//                     flexDirection: 'column',\r\n//                     cursor: 'pointer',\r\n//                     transition: 'transform 0.2s, box-shadow 0.2s',\r\n//                     '&:hover': {\r\n//                       transform: 'translateY(-4px)',\r\n//                       boxShadow: 4\r\n//                     },\r\n//                     bgcolor: challenge.is_completed ? 'rgba(76, 175, 80, 0.1)' : \r\n//                            challenge.is_unlocked ? 'background.paper' : 'rgba(158, 158, 158, 0.1)'\r\n//                   }}\r\n//                   onClick={() => challenge.is_unlocked && handleChallengeClick(challenge.id)}\r\n//                 >\r\n//                   <CardContent sx={{ flexGrow: 1, p: 3 }}>\r\n//                     {/* Challenge Status Icon */}\r\n//                     <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\r\n//                       <Typography variant=\"h6\" component=\"h3\">\r\n//                         Challenge {challenge.id || index + 1}\r\n//                       </Typography>\r\n//                       {challenge.is_completed ? (\r\n//                         <CheckCircle color=\"success\" />\r\n//                       ) : challenge.is_unlocked ? (\r\n//                         <PlayArrow color=\"primary\" />\r\n//                       ) : (\r\n//                         <Lock color=\"disabled\" />\r\n//                       )}\r\n//                     </Box>\r\n\r\n//                     {/* Challenge Title */}\r\n//                     <Typography variant=\"h6\" gutterBottom>\r\n//                       {challenge.title || `Challenge ${index + 1}`}\r\n//                     </Typography>\r\n\r\n//                     {/* Challenge Description */}\r\n//                     <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\r\n//                       {challenge.description || 'Complete this robotics challenge to earn points and improve your skills.'}\r\n//                     </Typography>\r\n\r\n//                     {/* Difficulty Badge */}\r\n//                     <Box sx={{ mb: 2 }}>\r\n//                       <Chip\r\n//                         label={challenge.difficulty || 'Beginner'}\r\n//                         size=\"small\"\r\n//                         color={\r\n//                           challenge.difficulty === 'Expert' ? 'error' :\r\n//                           challenge.difficulty === 'Advanced' ? 'warning' :\r\n//                           challenge.difficulty === 'Intermediate' ? 'info' : 'success'\r\n//                         }\r\n//                       />\r\n//                     </Box>\r\n\r\n//                     {/* Challenge Stats */}\r\n//                     <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n//                       <Typography variant=\"body2\" color=\"text.secondary\">\r\n//                         {challenge.estimated_time || 30} min\r\n//                       </Typography>\r\n                      \r\n//                       {challenge.is_completed && challenge.best_score && (\r\n//                         <Chip\r\n//                           label={`Score: ${challenge.best_score}`}\r\n//                           size=\"small\"\r\n//                           color=\"success\"\r\n//                           variant=\"outlined\"\r\n//                         />\r\n//                       )}\r\n//                     </Box>\r\n\r\n//                     {/* Challenge Status */}\r\n//                     <Box sx={{ mt: 2 }}>\r\n//                       <Chip\r\n//                         label={\r\n//                           challenge.is_completed ? 'Completed' :\r\n//                           challenge.is_unlocked ? 'Available' : 'Locked'\r\n//                         }\r\n//                         size=\"small\"\r\n//                         color={\r\n//                           challenge.is_completed ? 'success' :\r\n//                           challenge.is_unlocked ? 'primary' : 'default'\r\n//                         }\r\n//                         variant={challenge.is_unlocked ? 'filled' : 'outlined'}\r\n//                       />\r\n//                     </Box>\r\n//                   </CardContent>\r\n//                 </Card>\r\n//               </Grid>\r\n//             ))}\r\n//           </Grid>\r\n//         ) : (\r\n//           /* No Challenges State */\r\n//           <Paper sx={{ p: 6, textAlign: 'center', bgcolor: 'background.paper' }}>\r\n//             <Typography variant=\"h5\" gutterBottom>\r\n//               üöß No Challenges Available\r\n//             </Typography>\r\n//             <Typography variant=\"body1\" color=\"text.secondary\" sx={{ mb: 3 }}>\r\n//               It looks like no challenges have been loaded yet.\r\n//             </Typography>\r\n            \r\n//             {/* Create Mock Challenges Button for Testing */}\r\n//             <Button \r\n//               variant=\"outlined\" \r\n//               onClick={() => {\r\n//                 // Create mock challenges for testing\r\n//                 const mockChallenges = [\r\n//                   {\r\n//                     id: 1,\r\n//                     title: 'Basic Joint Movement',\r\n//                     description: 'Learn to control individual robot joints and understand forward kinematics.',\r\n//                     difficulty: 'Beginner',\r\n//                     estimated_time: 30,\r\n//                     is_unlocked: true,\r\n//                     is_completed: false\r\n//                   },\r\n//                   {\r\n//                     id: 2,\r\n//                     title: 'Position Control',\r\n//                     description: 'Move the robot end-effector to specific positions in 3D space.',\r\n//                     difficulty: 'Intermediate',\r\n//                     estimated_time: 45,\r\n//                     is_unlocked: true,\r\n//                     is_completed: false\r\n//                   },\r\n//                   {\r\n//                     id: 3,\r\n//                     title: 'Path Planning',\r\n//                     description: 'Plan and execute smooth trajectories between multiple points.',\r\n//                     difficulty: 'Advanced',\r\n//                     estimated_time: 60,\r\n//                     is_unlocked: false,\r\n//                     is_completed: false\r\n//                   }\r\n//                 ];\r\n                \r\n//                 // For now, just show alert. In real app, you'd dispatch to store\r\n//                 alert(`Mock data: ${mockChallenges.length} challenges would be loaded`);\r\n//                 console.log('Mock challenges:', mockChallenges);\r\n//               }}\r\n//               sx={{ mr: 2 }}\r\n//             >\r\n//               üîß Load Test Challenges\r\n//             </Button>\r\n            \r\n//             <Button \r\n//               variant=\"contained\"\r\n//               onClick={() => dispatch(fetchChallenges())}\r\n//             >\r\n//               üîÑ Refresh Challenges\r\n//             </Button>\r\n//           </Paper>\r\n//         )}\r\n\r\n//         {/* User Progress Summary */}\r\n//         {userProgress && (\r\n//           <Paper sx={{ p: 3, mt: 4, bgcolor: 'rgba(25, 118, 210, 0.1)' }}>\r\n//             <Typography variant=\"h6\" gutterBottom>\r\n//               üìä Your Progress\r\n//             </Typography>\r\n//             <Grid container spacing={2}>\r\n//               <Grid item xs={6} sm={3}>\r\n//                 <Typography variant=\"h4\" color=\"primary\">\r\n//                   {userProgress.challengesCompleted || 0}\r\n//                 </Typography>\r\n//                 <Typography variant=\"body2\" color=\"text.secondary\">\r\n//                   Completed\r\n//                 </Typography>\r\n//               </Grid>\r\n//               <Grid item xs={6} sm={3}>\r\n//                 <Typography variant=\"h4\" color=\"primary\">\r\n//                   {userProgress.totalScore || 0}\r\n//                 </Typography>\r\n//                 <Typography variant=\"body2\" color=\"text.secondary\">\r\n//                   Total Score\r\n//                 </Typography>\r\n//               </Grid>\r\n//               <Grid item xs={6} sm={3}>\r\n//                 <Typography variant=\"h4\" color=\"primary\">\r\n//                   {userProgress.streakCount || 0}\r\n//                 </Typography>\r\n//                 <Typography variant=\"body2\" color=\"text.secondary\">\r\n//                   Streak\r\n//                 </Typography>\r\n//               </Grid>\r\n//               <Grid item xs={6} sm={3}>\r\n//                 <Typography variant=\"h4\" color=\"primary\">\r\n//                   {userProgress.rank || 'Beginner'}\r\n//                 </Typography>\r\n//                 <Typography variant=\"body2\" color=\"text.secondary\">\r\n//                   Rank\r\n//                 </Typography>\r\n//               </Grid>\r\n//             </Grid>\r\n//           </Paper>\r\n//         )}\r\n//       </Box>\r\n//     </Container>\r\n//   );\r\n// };\r\n\r\n// export default ChallengesListPage;\r\n\r\n// Add this to your ChallengesListPage.jsx temporarily\r\n\r\n// src/pages/ChallengesListPage.jsx\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Container, Grid, Typography, Box, Paper, Card, CardContent, Button, Chip, Alert } from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { PlayArrow, CheckCircle, Lock, Refresh } from '@mui/icons-material';\r\nimport { fetchChallenges } from '../store/challengeSlice';\r\nimport LoadingSpinner from '../components/common/LoadingSpinner';\r\n\r\nconst ChallengesListPage = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const { user } = useSelector(state => state.auth);\r\n  const { challenges, userProgress, loading, error } = useSelector(state => state.challenges);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchChallenges());\r\n  }, [dispatch]);\r\n\r\n  const handleChallengeClick = (challengeId) => {\r\n    navigate(`/challenge/${challengeId}`);\r\n  };\r\n\r\n  const handleRetry = () => {\r\n    dispatch(fetchChallenges());\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <Container maxWidth=\"xl\">\r\n        <Box className=\"flex-center\" style={{ minHeight: '60vh' }}>\r\n          <LoadingSpinner message=\"Loading challenges...\" />\r\n        </Box>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\">\r\n      <Box sx={{ py: 4 }}>\r\n        {/* Header */}\r\n        <Typography variant=\"h3\" component=\"h1\" gutterBottom className=\"text-center\">\r\n          ü§ñ Robotics Challenges\r\n        </Typography>\r\n        <Typography variant=\"h6\" color=\"text.secondary\" gutterBottom className=\"text-center\" sx={{ mb: 4 }}>\r\n          Complete hands-on robotics challenges to build your skills\r\n        </Typography>\r\n\r\n        {/* Error State */}\r\n        {error && (\r\n          <Alert severity=\"error\" sx={{ mb: 4 }}>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Unable to load challenges\r\n            </Typography>\r\n            <Typography variant=\"body2\" sx={{ mb: 2 }}>\r\n              {error}\r\n            </Typography>\r\n            <Button variant=\"outlined\" startIcon={<Refresh />} onClick={handleRetry}>\r\n              Try Again\r\n            </Button>\r\n          </Alert>\r\n        )}\r\n\r\n        {/* Challenges Grid */}\r\n        {challenges && challenges.length > 0 ? (\r\n          <Grid container spacing={3}>\r\n            {challenges.map((challenge, index) => (\r\n              <Grid item key={challenge.id || index} xs={12} sm={6} md={4} lg={3}>\r\n                <Card \r\n                  sx={{ \r\n                    height: '100%',\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    cursor: challenge.is_unlocked !== false ? 'pointer' : 'not-allowed',\r\n                    transition: 'transform 0.2s, box-shadow 0.2s',\r\n                    '&:hover': challenge.is_unlocked !== false ? {\r\n                      transform: 'translateY(-4px)',\r\n                      boxShadow: 4\r\n                    } : {},\r\n                    bgcolor: challenge.is_completed ? 'rgba(76, 175, 80, 0.1)' : \r\n                           challenge.is_unlocked !== false ? 'background.paper' : 'rgba(158, 158, 158, 0.1)',\r\n                    opacity: challenge.is_unlocked === false ? 0.6 : 1\r\n                  }}\r\n                  onClick={() => challenge.is_unlocked !== false && handleChallengeClick(challenge.id)}\r\n                >\r\n                  <CardContent sx={{ flexGrow: 1, p: 3 }}>\r\n                    {/* Challenge Status Icon */}\r\n                    <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\r\n                      <Typography variant=\"h6\" component=\"h3\">\r\n                        Challenge {challenge.id || index + 1}\r\n                      </Typography>\r\n                      {challenge.is_completed ? (\r\n                        <CheckCircle color=\"success\" />\r\n                      ) : challenge.is_unlocked !== false ? (\r\n                        <PlayArrow color=\"primary\" />\r\n                      ) : (\r\n                        <Lock color=\"disabled\" />\r\n                      )}\r\n                    </Box>\r\n\r\n                    {/* Challenge Title */}\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                      {challenge.title || `Challenge ${index + 1}`}\r\n                    </Typography>\r\n\r\n                    {/* Challenge Description */}\r\n                    <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\r\n                      {challenge.description || 'Complete this robotics challenge to earn points and improve your skills.'}\r\n                    </Typography>\r\n\r\n                    {/* Difficulty Badge */}\r\n                    <Box sx={{ mb: 2 }}>\r\n                      <Chip\r\n                        label={challenge.difficulty || 'Beginner'}\r\n                        size=\"small\"\r\n                        color={\r\n                          (challenge.difficulty || '').toLowerCase() === 'expert' ? 'error' :\r\n                          (challenge.difficulty || '').toLowerCase() === 'advanced' ? 'warning' :\r\n                          (challenge.difficulty || '').toLowerCase() === 'intermediate' ? 'info' : 'success'\r\n                        }\r\n                      />\r\n                    </Box>\r\n\r\n                    {/* Challenge Stats */}\r\n                    <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\r\n                      <Typography variant=\"body2\" color=\"text.secondary\">\r\n                        {challenge.estimated_time || 30} min\r\n                      </Typography>\r\n                      \r\n                      {challenge.is_completed && challenge.best_score && (\r\n                        <Chip\r\n                          label={`Score: ${challenge.best_score}`}\r\n                          size=\"small\"\r\n                          color=\"success\"\r\n                          variant=\"outlined\"\r\n                        />\r\n                      )}\r\n                    </Box>\r\n\r\n                    {/* Challenge Status */}\r\n                    <Box sx={{ mt: 2 }}>\r\n                      <Chip\r\n                        label={\r\n                          challenge.is_completed ? 'Completed' :\r\n                          challenge.is_unlocked !== false ? 'Available' : 'Locked'\r\n                        }\r\n                        size=\"small\"\r\n                        color={\r\n                          challenge.is_completed ? 'success' :\r\n                          challenge.is_unlocked !== false ? 'primary' : 'default'\r\n                        }\r\n                        variant={challenge.is_unlocked !== false ? 'filled' : 'outlined'}\r\n                      />\r\n                    </Box>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        ) : !loading && !error ? (\r\n          /* No Challenges State */\r\n          <Paper sx={{ p: 6, textAlign: 'center', bgcolor: 'background.paper' }}>\r\n            <Typography variant=\"h5\" gutterBottom>\r\n              üöß No Challenges Available\r\n            </Typography>\r\n            <Typography variant=\"body1\" color=\"text.secondary\" sx={{ mb: 3 }}>\r\n              It looks like no challenges have been loaded yet. This could be because:\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 3 }}>\r\n              ‚Ä¢ The backend server is not running<br/>\r\n              ‚Ä¢ There are no challenges in the database<br/>\r\n              ‚Ä¢ There's a network connectivity issue\r\n            </Typography>\r\n            \r\n            <Button \r\n              variant=\"contained\"\r\n              startIcon={<Refresh />}\r\n              onClick={handleRetry}\r\n              sx={{ mr: 2 }}\r\n            >\r\n              üîÑ Retry Loading\r\n            </Button>\r\n          </Paper>\r\n        ) : null}\r\n\r\n        {/* User Progress Summary */}\r\n        {userProgress && (\r\n          <Paper sx={{ p: 3, mt: 4, bgcolor: 'rgba(25, 118, 210, 0.1)' }}>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              üìä Your Progress\r\n            </Typography>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6} sm={3}>\r\n                <Typography variant=\"h4\" color=\"primary\">\r\n                  {userProgress.challengesCompleted || 0}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                  Completed\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6} sm={3}>\r\n                <Typography variant=\"h4\" color=\"primary\">\r\n                  {userProgress.totalScore || 0}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                  Total Score\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6} sm={3}>\r\n                <Typography variant=\"h4\" color=\"primary\">\r\n                  {userProgress.streakCount || 0}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                  Streak\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6} sm={3}>\r\n                <Typography variant=\"h4\" color=\"primary\">\r\n                  {userProgress.rank || 'Beginner'}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                  Rank\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n        )}\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ChallengesListPage;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}