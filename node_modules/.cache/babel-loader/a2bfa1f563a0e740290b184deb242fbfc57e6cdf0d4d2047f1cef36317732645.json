{"ast":null,"code":"// src/utils/validation.js\nexport const validateUsername = username => {\n  if (!username || username.trim().length === 0) {\n    return 'Username is required';\n  }\n  if (username.length < 3) {\n    return 'Username must be at least 3 characters long';\n  }\n  if (username.length > 20) {\n    return 'Username must be less than 20 characters';\n  }\n  if (!/^[a-zA-Z0-9_-]+$/.test(username)) {\n    return 'Username can only contain letters, numbers, underscores, and hyphens';\n  }\n  return null;\n};\nexport const validatePassword = password => {\n  if (!password || password.length === 0) {\n    return 'Password is required';\n  }\n  if (password.length < 6) {\n    return 'Password must be at least 6 characters long';\n  }\n  if (password.length > 50) {\n    return 'Password must be less than 50 characters';\n  }\n  return null;\n};\nexport const validateEmail = email => {\n  if (!email || email.trim().length === 0) {\n    return null; // Email is optional\n  }\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  if (!emailRegex.test(email)) {\n    return 'Please enter a valid email address';\n  }\n  return null;\n};\nexport const validateJointAngle = (angle, min = -180, max = 180) => {\n  const numAngle = parseFloat(angle);\n  if (isNaN(numAngle)) {\n    return 'Angle must be a valid number';\n  }\n  if (numAngle < min || numAngle > max) {\n    return `Angle must be between ${min}째 and ${max}째`;\n  }\n  return null;\n};\nexport const validateSpeed = speed => {\n  const numSpeed = parseFloat(speed);\n  if (isNaN(numSpeed)) {\n    return 'Speed must be a valid number';\n  }\n  if (numSpeed < 1 || numSpeed > 100) {\n    return 'Speed must be between 1% and 100%';\n  }\n  return null;\n};","map":{"version":3,"names":["validateUsername","username","trim","length","test","validatePassword","password","validateEmail","email","emailRegex","validateJointAngle","angle","min","max","numAngle","parseFloat","isNaN","validateSpeed","speed","numSpeed"],"sources":["C:/Users/misch/Downloads/absix-workstation-web-main/absix-workstation-web-main/frontend/src/utils/validation.js"],"sourcesContent":["\n// src/utils/validation.js\nexport const validateUsername = (username) => {\n  if (!username || username.trim().length === 0) {\n    return 'Username is required';\n  }\n  \n  if (username.length < 3) {\n    return 'Username must be at least 3 characters long';\n  }\n  \n  if (username.length > 20) {\n    return 'Username must be less than 20 characters';\n  }\n  \n  if (!/^[a-zA-Z0-9_-]+$/.test(username)) {\n    return 'Username can only contain letters, numbers, underscores, and hyphens';\n  }\n  \n  return null;\n};\n\nexport const validatePassword = (password) => {\n  if (!password || password.length === 0) {\n    return 'Password is required';\n  }\n  \n  if (password.length < 6) {\n    return 'Password must be at least 6 characters long';\n  }\n  \n  if (password.length > 50) {\n    return 'Password must be less than 50 characters';\n  }\n  \n  return null;\n};\n\nexport const validateEmail = (email) => {\n  if (!email || email.trim().length === 0) {\n    return null; // Email is optional\n  }\n  \n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  if (!emailRegex.test(email)) {\n    return 'Please enter a valid email address';\n  }\n  \n  return null;\n};\n\nexport const validateJointAngle = (angle, min = -180, max = 180) => {\n  const numAngle = parseFloat(angle);\n  \n  if (isNaN(numAngle)) {\n    return 'Angle must be a valid number';\n  }\n  \n  if (numAngle < min || numAngle > max) {\n    return `Angle must be between ${min}째 and ${max}째`;\n  }\n  \n  return null;\n};\n\nexport const validateSpeed = (speed) => {\n  const numSpeed = parseFloat(speed);\n  \n  if (isNaN(numSpeed)) {\n    return 'Speed must be a valid number';\n  }\n  \n  if (numSpeed < 1 || numSpeed > 100) {\n    return 'Speed must be between 1% and 100%';\n  }\n  \n  return null;\n};\n"],"mappings":"AACA;AACA,OAAO,MAAMA,gBAAgB,GAAIC,QAAQ,IAAK;EAC5C,IAAI,CAACA,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAACC,MAAM,KAAK,CAAC,EAAE;IAC7C,OAAO,sBAAsB;EAC/B;EAEA,IAAIF,QAAQ,CAACE,MAAM,GAAG,CAAC,EAAE;IACvB,OAAO,6CAA6C;EACtD;EAEA,IAAIF,QAAQ,CAACE,MAAM,GAAG,EAAE,EAAE;IACxB,OAAO,0CAA0C;EACnD;EAEA,IAAI,CAAC,kBAAkB,CAACC,IAAI,CAACH,QAAQ,CAAC,EAAE;IACtC,OAAO,sEAAsE;EAC/E;EAEA,OAAO,IAAI;AACb,CAAC;AAED,OAAO,MAAMI,gBAAgB,GAAIC,QAAQ,IAAK;EAC5C,IAAI,CAACA,QAAQ,IAAIA,QAAQ,CAACH,MAAM,KAAK,CAAC,EAAE;IACtC,OAAO,sBAAsB;EAC/B;EAEA,IAAIG,QAAQ,CAACH,MAAM,GAAG,CAAC,EAAE;IACvB,OAAO,6CAA6C;EACtD;EAEA,IAAIG,QAAQ,CAACH,MAAM,GAAG,EAAE,EAAE;IACxB,OAAO,0CAA0C;EACnD;EAEA,OAAO,IAAI;AACb,CAAC;AAED,OAAO,MAAMI,aAAa,GAAIC,KAAK,IAAK;EACtC,IAAI,CAACA,KAAK,IAAIA,KAAK,CAACN,IAAI,CAAC,CAAC,CAACC,MAAM,KAAK,CAAC,EAAE;IACvC,OAAO,IAAI,CAAC,CAAC;EACf;EAEA,MAAMM,UAAU,GAAG,4BAA4B;EAC/C,IAAI,CAACA,UAAU,CAACL,IAAI,CAACI,KAAK,CAAC,EAAE;IAC3B,OAAO,oCAAoC;EAC7C;EAEA,OAAO,IAAI;AACb,CAAC;AAED,OAAO,MAAME,kBAAkB,GAAGA,CAACC,KAAK,EAAEC,GAAG,GAAG,CAAC,GAAG,EAAEC,GAAG,GAAG,GAAG,KAAK;EAClE,MAAMC,QAAQ,GAAGC,UAAU,CAACJ,KAAK,CAAC;EAElC,IAAIK,KAAK,CAACF,QAAQ,CAAC,EAAE;IACnB,OAAO,8BAA8B;EACvC;EAEA,IAAIA,QAAQ,GAAGF,GAAG,IAAIE,QAAQ,GAAGD,GAAG,EAAE;IACpC,OAAO,yBAAyBD,GAAG,SAASC,GAAG,GAAG;EACpD;EAEA,OAAO,IAAI;AACb,CAAC;AAED,OAAO,MAAMI,aAAa,GAAIC,KAAK,IAAK;EACtC,MAAMC,QAAQ,GAAGJ,UAAU,CAACG,KAAK,CAAC;EAElC,IAAIF,KAAK,CAACG,QAAQ,CAAC,EAAE;IACnB,OAAO,8BAA8B;EACvC;EAEA,IAAIA,QAAQ,GAAG,CAAC,IAAIA,QAAQ,GAAG,GAAG,EAAE;IAClC,OAAO,mCAAmC;EAC5C;EAEA,OAAO,IAAI;AACb,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}