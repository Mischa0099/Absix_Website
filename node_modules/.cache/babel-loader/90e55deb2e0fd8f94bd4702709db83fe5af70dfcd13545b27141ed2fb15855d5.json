{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\n// Mock user data - replace with real API calls\nconst mockUsers = [{\n  id: 1,\n  username: 'student1',\n  password: 'password',\n  email: 'student1@example.com',\n  display_name: 'Student One'\n}, {\n  id: 2,\n  username: 'student2',\n  password: 'password',\n  email: 'student2@example.com',\n  display_name: 'Student Two'\n}, {\n  id: 3,\n  username: 'admin',\n  password: 'admin',\n  email: 'admin@example.com',\n  display_name: 'Administrator'\n}];\n\n// Async thunks\nexport const loginUser = createAsyncThunk('auth/login', async ({\n  username,\n  password\n}, {\n  rejectWithValue\n}) => {\n  try {\n    // Simulate API call\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    const user = mockUsers.find(u => u.username === username && u.password === password);\n    if (!user) {\n      throw new Error('Invalid credentials');\n    }\n    const token = `mock-token-${user.id}-${Date.now()}`;\n\n    // Store in localStorage\n    localStorage.setItem('token', token);\n    localStorage.setItem('user', JSON.stringify(user));\n    return {\n      user,\n      token\n    };\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\nexport const registerUser = createAsyncThunk('auth/register', async ({\n  username,\n  password,\n  email,\n  display_name\n}, {\n  rejectWithValue\n}) => {\n  try {\n    // Simulate API call\n    await new Promise(resolve => setTimeout(resolve, 1000));\n\n    // Check if user already exists\n    const existingUser = mockUsers.find(u => u.username === username || u.email === email);\n    if (existingUser) {\n      throw new Error('User already exists');\n    }\n    const newUser = {\n      id: Date.now(),\n      username,\n      email,\n      display_name: display_name || username,\n      bio: ''\n    };\n    mockUsers.push({\n      ...newUser,\n      password\n    });\n    const token = `mock-token-${newUser.id}-${Date.now()}`;\n\n    // Store in localStorage\n    localStorage.setItem('token', token);\n    localStorage.setItem('user', JSON.stringify(newUser));\n    return {\n      user: newUser,\n      token\n    };\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\nexport const updateUserProfile = createAsyncThunk('auth/updateProfile', async (profileData, {\n  rejectWithValue,\n  getState\n}) => {\n  try {\n    // Simulate API call\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    const {\n      auth\n    } = getState();\n    const updatedUser = {\n      ...auth.user,\n      ...profileData\n    };\n\n    // Update localStorage\n    localStorage.setItem('user', JSON.stringify(updatedUser));\n    return updatedUser;\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\nexport const logoutUser = createAsyncThunk('auth/logout', async () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('user');\n});\nconst initialState = {\n  user: JSON.parse(localStorage.getItem('user')) || null,\n  token: localStorage.getItem('token') || null,\n  isAuthenticated: !!localStorage.getItem('token'),\n  loading: false,\n  error: null\n};\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    clearError: state => {\n      state.error = null;\n    },\n    setUser: (state, action) => {\n      state.user = action.payload;\n      state.isAuthenticated = true;\n    }\n  },\n  extraReducers: builder => {\n    builder\n    // Login\n    .addCase(loginUser.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(loginUser.fulfilled, (state, action) => {\n      state.loading = false;\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isAuthenticated = true;\n      state.error = null;\n    }).addCase(loginUser.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    })\n    // Register\n    .addCase(registerUser.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(registerUser.fulfilled, (state, action) => {\n      state.loading = false;\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isAuthenticated = true;\n      state.error = null;\n    }).addCase(registerUser.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    })\n    // Update Profile\n    .addCase(updateUserProfile.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(updateUserProfile.fulfilled, (state, action) => {\n      state.loading = false;\n      state.user = action.payload;\n      state.error = null;\n    }).addCase(updateUserProfile.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    })\n    // Logout\n    .addCase(logoutUser.fulfilled, state => {\n      state.user = null;\n      state.token = null;\n      state.isAuthenticated = false;\n      state.loading = false;\n      state.error = null;\n    });\n  }\n});\nexport const {\n  clearError,\n  setUser\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","mockUsers","id","username","password","email","display_name","loginUser","rejectWithValue","Promise","resolve","setTimeout","user","find","u","Error","token","Date","now","localStorage","setItem","JSON","stringify","error","message","registerUser","existingUser","newUser","bio","push","updateUserProfile","profileData","getState","auth","updatedUser","logoutUser","removeItem","initialState","parse","getItem","isAuthenticated","loading","authSlice","name","reducers","clearError","state","setUser","action","payload","extraReducers","builder","addCase","pending","fulfilled","rejected","actions","reducer"],"sources":["C:/Users/misch/Downloads/absix-workstation-web-main/absix-workstation-web-main/frontend/src/store/authSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\n// Mock user data - replace with real API calls\nconst mockUsers = [\n  { id: 1, username: 'student1', password: 'password', email: 'student1@example.com', display_name: 'Student One' },\n  { id: 2, username: 'student2', password: 'password', email: 'student2@example.com', display_name: 'Student Two' },\n  { id: 3, username: 'admin', password: 'admin', email: 'admin@example.com', display_name: 'Administrator' },\n];\n\n// Async thunks\nexport const loginUser = createAsyncThunk(\n  'auth/login',\n  async ({ username, password }, { rejectWithValue }) => {\n    try {\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      \n      const user = mockUsers.find(u => u.username === username && u.password === password);\n      if (!user) {\n        throw new Error('Invalid credentials');\n      }\n      \n      const token = `mock-token-${user.id}-${Date.now()}`;\n      \n      // Store in localStorage\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(user));\n      \n      return { user, token };\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  }\n);\n\nexport const registerUser = createAsyncThunk(\n  'auth/register',\n  async ({ username, password, email, display_name }, { rejectWithValue }) => {\n    try {\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      \n      // Check if user already exists\n      const existingUser = mockUsers.find(u => u.username === username || u.email === email);\n      if (existingUser) {\n        throw new Error('User already exists');\n      }\n      \n      const newUser = {\n        id: Date.now(),\n        username,\n        email,\n        display_name: display_name || username,\n        bio: ''\n      };\n      \n      mockUsers.push({ ...newUser, password });\n      \n      const token = `mock-token-${newUser.id}-${Date.now()}`;\n      \n      // Store in localStorage\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(newUser));\n      \n      return { user: newUser, token };\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  }\n);\n\nexport const updateUserProfile = createAsyncThunk(\n  'auth/updateProfile',\n  async (profileData, { rejectWithValue, getState }) => {\n    try {\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      \n      const { auth } = getState();\n      const updatedUser = { ...auth.user, ...profileData };\n      \n      // Update localStorage\n      localStorage.setItem('user', JSON.stringify(updatedUser));\n      \n      return updatedUser;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  }\n);\n\nexport const logoutUser = createAsyncThunk('auth/logout', async () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('user');\n});\n\nconst initialState = {\n  user: JSON.parse(localStorage.getItem('user')) || null,\n  token: localStorage.getItem('token') || null,\n  isAuthenticated: !!localStorage.getItem('token'),\n  loading: false,\n  error: null,\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    clearError: (state) => {\n      state.error = null;\n    },\n    setUser: (state, action) => {\n      state.user = action.payload;\n      state.isAuthenticated = true;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      // Login\n      .addCase(loginUser.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(loginUser.fulfilled, (state, action) => {\n        state.loading = false;\n        state.user = action.payload.user;\n        state.token = action.payload.token;\n        state.isAuthenticated = true;\n        state.error = null;\n      })\n      .addCase(loginUser.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload;\n      })\n      // Register\n      .addCase(registerUser.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(registerUser.fulfilled, (state, action) => {\n        state.loading = false;\n        state.user = action.payload.user;\n        state.token = action.payload.token;\n        state.isAuthenticated = true;\n        state.error = null;\n      })\n      .addCase(registerUser.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload;\n      })\n      // Update Profile\n      .addCase(updateUserProfile.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(updateUserProfile.fulfilled, (state, action) => {\n        state.loading = false;\n        state.user = action.payload;\n        state.error = null;\n      })\n      .addCase(updateUserProfile.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload;\n      })\n      // Logout\n      .addCase(logoutUser.fulfilled, (state) => {\n        state.user = null;\n        state.token = null;\n        state.isAuthenticated = false;\n        state.loading = false;\n        state.error = null;\n      });\n  },\n});\n\nexport const { clearError, setUser } = authSlice.actions;\nexport default authSlice.reducer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}