{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\misch\\\\Downloads\\\\absix-workstation-web-main\\\\absix-workstation-web-main\\\\frontend\\\\src\\\\components\\\\challenges\\\\ChallengeMap.jsx\";\nimport React from 'react';\nimport { Grid, Box, Typography, Container } from '@mui/material';\nimport ChallengeCard from './ChallengeCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChallengeMap = ({\n  challenges = []\n}) => {\n  if (!challenges || challenges.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          textAlign: 'center',\n          py: 8\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          color: \"text.secondary\",\n          gutterBottom: true,\n          children: \"No challenges available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          color: \"text.secondary\",\n          children: \"Challenges will appear here once they are loaded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      justifyContent: \"center\",\n      children: challenges.map(challenge => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        lg: 3,\n        children: /*#__PURE__*/_jsxDEV(ChallengeCard, {\n          challenge: challenge\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this)\n      }, challenge.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_c = ChallengeMap;\nexport default ChallengeMap;\nvar _c;\n$RefreshReg$(_c, \"ChallengeMap\");","map":{"version":3,"names":["React","Grid","Box","Typography","Container","ChallengeCard","jsxDEV","_jsxDEV","ChallengeMap","challenges","length","maxWidth","children","sx","textAlign","py","variant","color","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","justifyContent","map","challenge","item","xs","sm","md","lg","id","_c","$RefreshReg$"],"sources":["C:/Users/misch/Downloads/absix-workstation-web-main/absix-workstation-web-main/frontend/src/components/challenges/ChallengeMap.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Grid, Box, Typography, Container } from '@mui/material';\r\nimport ChallengeCard from './ChallengeCard';\r\n\r\nconst ChallengeMap = ({ challenges = [] }) => {\r\n  if (!challenges || challenges.length === 0) {\r\n    return (\r\n      <Container maxWidth=\"md\">\r\n        <Box sx={{ textAlign: 'center', py: 8 }}>\r\n          <Typography variant=\"h5\" color=\"text.secondary\" gutterBottom>\r\n            No challenges available\r\n          </Typography>\r\n          <Typography variant=\"body1\" color=\"text.secondary\">\r\n            Challenges will appear here once they are loaded\r\n          </Typography>\r\n        </Box>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <Grid container spacing={3} justifyContent=\"center\">\r\n        {challenges.map((challenge) => (\r\n          <Grid item key={challenge.id} xs={12} sm={6} md={4} lg={3}>\r\n            <ChallengeCard challenge={challenge} />\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ChallengeMap;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,GAAG,EAAEC,UAAU,EAAEC,SAAS,QAAQ,eAAe;AAChE,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,YAAY,GAAGA,CAAC;EAAEC,UAAU,GAAG;AAAG,CAAC,KAAK;EAC5C,IAAI,CAACA,UAAU,IAAIA,UAAU,CAACC,MAAM,KAAK,CAAC,EAAE;IAC1C,oBACEH,OAAA,CAACH,SAAS;MAACO,QAAQ,EAAC,IAAI;MAAAC,QAAA,eACtBL,OAAA,CAACL,GAAG;QAACW,EAAE,EAAE;UAAEC,SAAS,EAAE,QAAQ;UAAEC,EAAE,EAAE;QAAE,CAAE;QAAAH,QAAA,gBACtCL,OAAA,CAACJ,UAAU;UAACa,OAAO,EAAC,IAAI;UAACC,KAAK,EAAC,gBAAgB;UAACC,YAAY;UAAAN,QAAA,EAAC;QAE7D;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACbf,OAAA,CAACJ,UAAU;UAACa,OAAO,EAAC,OAAO;UAACC,KAAK,EAAC,gBAAgB;UAAAL,QAAA,EAAC;QAEnD;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAEhB;EAEA,oBACEf,OAAA,CAACL,GAAG;IAAAU,QAAA,eACFL,OAAA,CAACN,IAAI;MAACsB,SAAS;MAACC,OAAO,EAAE,CAAE;MAACC,cAAc,EAAC,QAAQ;MAAAb,QAAA,EAChDH,UAAU,CAACiB,GAAG,CAAEC,SAAS,iBACxBpB,OAAA,CAACN,IAAI;QAAC2B,IAAI;QAAoBC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAACC,EAAE,EAAE,CAAE;QAACC,EAAE,EAAE,CAAE;QAAApB,QAAA,eACxDL,OAAA,CAACF,aAAa;UAACsB,SAAS,EAAEA;QAAU;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,GADzBK,SAAS,CAACM,EAAE;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEtB,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACY,EAAA,GA3BI1B,YAAY;AA6BlB,eAAeA,YAAY;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}